openapi: 3.0.3
info:
  title: BRP Personen Bevragen
  description: |
    API voor het bevragen van personen uit de basisregistratie personen (BRP), inclusief de registratie niet-ingezeten (RNI). Met deze API kun je personen zoeken en actuele gegevens over personen, kinderen, partners en ouders raadplegen.

    Gegevens die er niet zijn of niet actueel zijn krijg je niet terug. Had een persoon bijvoorbeeld een verblijfstitel die nu niet meer geldig is, dan wordt die verblijfstitel niet opgenomen. In partners wordt alleen de actuele of de laatst ontbonden partner geleverd.

    Zie de [Functionele documentatie](https://brp-api.github.io/Haal-Centraal-BRP-bevragen) voor nadere toelichting.
  contact:
    url: https://brp-api.github.io/Haal-Centraal-BRP-bevragen
  license:
    name: "European Union Public License, version 1.2 (EUPL-1.2)"
    url: https://eupl.eu/1.2/nl/
  version: 2.0.0
servers:
- url: https://proefomgeving.haalcentraal.nl/haalcentraal/api/brp
  description: |
    Proef omgeving
tags:
- name: Personen
paths:
  /personen:
    post:
      tags:
      - Personen
      summary: Zoek personen
      description: |
        Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met optionele parameters.

        1.  Raadpleeg met burgerservicenummer
        2.  Zoek met geslachtsnaam en geboortedatum
        3.  Zoek met geslachtsnaam, voornamen en gemeente van inschrijving
        4.  Zoek met postcode en huisnummer
        5.  Zoek met straat, huisnummer en gemeente van inschrijving
        6.  Zoek met nummeraanduiding identificatie

        Default krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.

        Gebruik de fields parameter om alleen die gegevens op te vragen die je nodig hebt en waarvoor je geautoriseerd bent.
      operationId: Personen
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/PersonenQuery'
      responses:
        "200":
          description: |
            Zoekactie geslaagd
          headers:
            warning:
              $ref: '#/components/headers/warning'
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X_Rate_Limit_Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X_Rate_Limit_Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X_Rate_Limit_Reset'
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PersonenQueryResponse'
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestFoutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1
                title: Ten minste één parameter moet worden opgegeven.
                status: 400
                detail: The request could not be understood by the server due to malformed
                  syntax. The client SHOULD NOT repeat the request without modification.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: paramsRequired
                invalidParams:
                - type: https://www.vng.nl/realisatie/api/validaties/integer
                  name: huisnummer
                  code: integer
                  reason: Waarde is geen geldig getal.
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2
                title: Niet correct geauthenticeerd.
                status: 401
                detail: The request requires user authentication. The response MUST
                  include a WWW-Authenticate header field (section 14.47) containing
                  a challenge applicable to the requested resource.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: authentication
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4
                title: U bent niet geautoriseerd voor deze operatie.
                status: 403
                detail: "The server understood the request, but is refusing to fulfill\
                  \ it."
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: autorisation
        "406":
          description: Not Acceptable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7
                title: Gevraagde contenttype wordt niet ondersteund.
                status: 406
                detail: The resource identified by the request is only capable of
                  generating response entities which have content characteristics
                  not acceptable according to thr accept headers sent in the request
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAcceptable
        "415":
          description: Unsupported Media Type
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.16
                title: Unsupported Media Type
                status: 415
                detail: The server is refusing the request because the entity of the
                  request is in a format not supported by the requested resource for
                  the requested method.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: unsupported
        "429":
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
                title: Too many request
                status: 429
                detail: The user has sent too many requests in a given amount of time
                  (rate limiting).
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: tooManyRequests
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
                title: Interne server fout.
                status: 500
                detail: The server encountered an unexpected condition which prevented
                  it from fulfilling the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: serverError
        "503":
          description: Service Unavailable
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4
                title: Bronservice BRP is tijdelijk niet beschikbaar.
                status: 503
                detail: The service is currently unable to handle the request due
                  to a temporary overloading or maintenance of the server.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAvailable
        default:
          description: Er is een onverwachte fout opgetreden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
components:
  schemas:
    PersonenQueryResponse:
      required:
      - type
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          ZoekMetGeslachtsnaamEnGeboortedatum: '#/components/schemas/ZoekMetGeslachtsnaamEnGeboortedatumResponse'
          ZoekMetNaamEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetNaamEnGemeenteVanInschrijvingResponse'
          RaadpleegMetBurgerservicenummer: '#/components/schemas/RaadpleegMetBurgerservicenummerResponse'
          ZoekMetPostcodeEnHuisnummer: '#/components/schemas/ZoekMetPostcodeEnHuisnummerResponse'
          ZoekMetStraatHuisnummerEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetStraatHuisnummerEnGemeenteVanInschrijvingResponse'
          ZoekMetNummeraanduidingIdentificatie: '#/components/schemas/ZoekMetNummeraanduidingIdentificatieResponse'
    ZoekMetGeslachtsnaamEnGeboortedatumResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            description: |
              * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
            items:
              $ref: '#/components/schemas/PersoonBeperkt'
    ZoekMetNaamEnGemeenteVanInschrijvingResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            description: |
              * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
            items:
              $ref: '#/components/schemas/PersoonBeperkt'
    RaadpleegMetBurgerservicenummerResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            description: |
              * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
            items:
              $ref: '#/components/schemas/Persoon'
    ZoekMetPostcodeEnHuisnummerResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            description: |
              * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
            items:
              $ref: '#/components/schemas/PersoonBeperkt'
    ZoekMetStraatHuisnummerEnGemeenteVanInschrijvingResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            description: |
              * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
            items:
              $ref: '#/components/schemas/PersoonBeperkt'
    ZoekMetNummeraanduidingIdentificatieResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            description: |
              * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
            items:
              $ref: '#/components/schemas/PersoonBeperkt'
    PersonenQuery:
      required:
      - fields
      - type
      type: object
      properties:
        type:
          type: string
        fields:
          maxItems: 130
          minItems: 1
          type: array
          description: |
            Hiermee kun je de velden opgeven die je wenst te ontvangen.
            Velden die automatisch worden geleverd (inOnderzoek, geheimhoudingPersoonsgegevens, opschortingBijhouding, rni en verificatie) mag je niet opgeven in fields.
            Opgave van een pad dat verwijst naar een niet-bestaand veld of naar een automatisch geleverd veld leidt tot een 400 Bad Request.
          items:
            $ref: '#/components/schemas/Field'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/GemeenteVanInschrijving'
      discriminator:
        propertyName: type
        mapping:
          ZoekMetGeslachtsnaamEnGeboortedatum: '#/components/schemas/ZoekMetGeslachtsnaamEnGeboortedatum'
          ZoekMetNaamEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetNaamEnGemeenteVanInschrijving'
          RaadpleegMetBurgerservicenummer: '#/components/schemas/RaadpleegMetBurgerservicenummer'
          ZoekMetPostcodeEnHuisnummer: '#/components/schemas/ZoekMetPostcodeEnHuisnummer'
          ZoekMetStraatHuisnummerEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetStraatHuisnummerEnGemeenteVanInschrijving'
          ZoekMetNummeraanduidingIdentificatie: '#/components/schemas/ZoekMetNummeraanduidingIdentificatie'
    ZoekMetGeslachtsnaamEnGeboortedatum:
      required:
      - geboortedatum
      - geslachtsnaam
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          geboortedatum:
            type: string
            description: |
              Je kunt alleen zoeken met een volledige geboortedatum.
            format: date
            example: 1964-09-24
          geslachtsnaam:
            $ref: '#/components/schemas/GeslachtsnaamFilter'
          geslacht:
            $ref: '#/components/schemas/GeslachtFilter'
          voorvoegsel:
            $ref: '#/components/schemas/VoorvoegselFilter'
          voornamen:
            $ref: '#/components/schemas/VoornamenOptioneelFilter'
    InclusiefOverledenPersonen:
      type: boolean
      description: |
        Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.
      example: true
    ZoekMetNaamEnGemeenteVanInschrijving:
      required:
      - gemeenteVanInschrijving
      - geslachtsnaam
      - voornamen
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          geslacht:
            $ref: '#/components/schemas/GeslachtFilter'
          geslachtsnaam:
            $ref: '#/components/schemas/GeslachtsnaamFilter'
          voorvoegsel:
            $ref: '#/components/schemas/VoorvoegselFilter'
          voornamen:
            $ref: '#/components/schemas/VoornamenVerplichtFilter'
    RaadpleegMetBurgerservicenummer:
      required:
      - burgerservicenummer
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          burgerservicenummer:
            maxItems: 20
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/Burgerservicenummer'
    ZoekMetPostcodeEnHuisnummer:
      required:
      - huisnummer
      - postcode
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          huisletter:
            $ref: '#/components/schemas/Huisletter'
          huisnummer:
            $ref: '#/components/schemas/Huisnummer'
          huisnummertoevoeging:
            $ref: '#/components/schemas/Huisnummertoevoeging'
          postcode:
            $ref: '#/components/schemas/Postcode'
    ZoekMetStraatHuisnummerEnGemeenteVanInschrijving:
      required:
      - gemeenteVanInschrijving
      - huisnummer
      - straat
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          huisletter:
            $ref: '#/components/schemas/Huisletter'
          huisnummer:
            $ref: '#/components/schemas/Huisnummer'
          huisnummertoevoeging:
            $ref: '#/components/schemas/Huisnummertoevoeging'
          straat:
            $ref: '#/components/schemas/StraatFilter'
    ZoekMetNummeraanduidingIdentificatie:
      required:
      - nummeraanduidingIdentificatie
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          nummeraanduidingIdentificatie:
            $ref: '#/components/schemas/NummeraanduidingIdentificatie'
    BadRequestFoutbericht:
      allOf:
      - $ref: '#/components/schemas/Foutbericht'
      - type: object
        properties:
          invalidParams:
            type: array
            description: Foutmelding per fout in een parameter. Alle gevonden fouten
              worden één keer teruggemeld.
            items:
              $ref: '#/components/schemas/InvalidParams'
    Foutbericht:
      type: object
      properties:
        type:
          type: string
          description: Link naar meer informatie over deze fout
          format: uri
        title:
          pattern: "^[a-zA-Z0-9À-ž \\.\\-]{1,80}$"
          type: string
          description: Beschrijving van de fout
        status:
          maximum: 600
          minimum: 100
          type: integer
          description: Http status code
        detail:
          pattern: "^[a-zA-Z0-9À-ž \\.\\-\\(\\)\\,]{1,200}$"
          type: string
          description: Details over de fout
        instance:
          type: string
          description: Uri van de aanroep die de fout heeft veroorzaakt
          format: uri
        code:
          minLength: 1
          pattern: "^[a-zA-Z0-9]{1,25}$"
          type: string
          description: Systeemcode die het type fout aangeeft
      description: "Terugmelding bij een fout. JSON representatie in lijn met [RFC7807](https://tools.ietf.org/html/rfc7807)."
    InvalidParams:
      type: object
      properties:
        type:
          type: string
          format: uri
          example: "https://www.vng.nl/realisatie/api/{major-versie}/validaties/integer"
        name:
          pattern: "^[a-zA-Z0-9\\.,_]{1,30}$"
          type: string
          description: Naam van de parameter
          example: huisnummer
        code:
          minLength: 1
          pattern: "^[a-zA-Z0-9\\.,_]{1,25}$"
          type: string
          description: Systeemcode die het type fout aangeeft
          example: integer
        reason:
          pattern: "^[a-zA-Z0-9\\.,_ ]{1,80}$"
          type: string
          description: Beschrijving van de fout op de parameterwaarde
          example: Waarde is geen geldig getal.
      description: Details over fouten in opgegeven parameters
    PersoonBeperkt:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geboorte:
          $ref: '#/components/schemas/GeboorteBeperkt'
        geheimhoudingPersoonsgegevens:
          $ref: '#/components/schemas/GeheimhoudingPersoonsgegevens'
        geslacht:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/PersoonInOnderzoekBeperkt'
        leeftijd:
          $ref: '#/components/schemas/Leeftijd'
        naam:
          $ref: '#/components/schemas/NaamPersoonBeperkt'
        opschortingBijhouding:
          $ref: '#/components/schemas/OpschortingBijhouding'
        adressering:
          $ref: '#/components/schemas/AdresseringBeperkt'
        rni:
          type: array
          items:
            $ref: '#/components/schemas/RniDeelnemer'
        verificatie:
          $ref: '#/components/schemas/Verificatie'
      description: |
        * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
    Burgerservicenummer:
      pattern: "^[0-9]{9}$"
      type: string
      example: "555555021"
    GeheimhoudingPersoonsgegevens:
      type: boolean
      description: |
        Gegevens mogen niet worden verstrekt aan derden / maatschappelijke instellingen.
    PersoonInOnderzoekBeperkt:
      type: object
      properties:
        datumIngangOnderzoekPersoon:
          $ref: '#/components/schemas/AbstractDatum'
        burgerservicenummer:
          type: boolean
        geslacht:
          type: boolean
        leeftijd:
          type: boolean
      description: |
        Geeft aan welke gegevens van de persoon in onderzoek zijn.
        * **datumIngangOnderzoekPersoon - Deze datum heeft betrekking op burgerservicenummer, geslacht en leeftijd
    Leeftijd:
      maximum: 150
      minimum: 0
      type: integer
      description: |
        Leeftijd in jaren op het moment van bevragen.
      example: 34
    RniDeelnemer:
      type: object
      properties:
        deelnemer:
          $ref: '#/components/schemas/Waardetabel'
        omschrijvingVerdrag:
          $ref: '#/components/schemas/OmschrijvingVerdrag'
        categorie:
          $ref: '#/components/schemas/Categorie'
      description: Gegevens over de RNI-deelnemer die de gegevens in de betrokken
        categorie heeft aangeleverd.
    OmschrijvingVerdrag:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,50}$"
      type: string
      description: |
        Omschrijving van het verdrag op basis waarvan een zusterorganisatie in het buitenland de gegevens bij de RNI-deelnemer heeft aangeleverd.
    Categorie:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\'\\/]{1,40}$"
      type: string
      description: Naam van categorie waarop de RNI-deelnemer gegevens heeft aangeleverd
      example: Verblijfplaats
    Verificatie:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/AbstractDatum'
        omschrijving:
          $ref: '#/components/schemas/OmschrijvingVerificatie'
    OmschrijvingVerificatie:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,50}$"
      type: string
      description: |
        Omschrijving van de verificatie van de rni-gegevens
    Persoon:
      type: object
      properties:
        aNummer:
          $ref: '#/components/schemas/ANummer'
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        datumEersteInschrijvingGBA:
          $ref: '#/components/schemas/AbstractDatum'
        geheimhoudingPersoonsgegevens:
          $ref: '#/components/schemas/GeheimhoudingPersoonsgegevens'
        geslacht:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/PersoonInOnderzoek'
        uitsluitingKiesrecht:
          $ref: '#/components/schemas/UitsluitingKiesrecht'
        europeesKiesrecht:
          $ref: '#/components/schemas/EuropeesKiesrecht'
        leeftijd:
          $ref: '#/components/schemas/Leeftijd'
        naam:
          $ref: '#/components/schemas/NaamPersoon'
        nationaliteiten:
          type: array
          items:
            $ref: '#/components/schemas/AbstractNationaliteit'
        geboorte:
          $ref: '#/components/schemas/Geboorte'
        opschortingBijhouding:
          $ref: '#/components/schemas/OpschortingBijhouding'
        overlijden:
          $ref: '#/components/schemas/Overlijden'
        verblijfplaats:
          $ref: '#/components/schemas/AbstractVerblijfplaats'
        immigratie:
          $ref: '#/components/schemas/Immigratie'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/Waardetabel'
        datumInschrijvingInGemeente:
          $ref: '#/components/schemas/AbstractDatum'
        adressering:
          $ref: '#/components/schemas/Adressering'
        indicatieCurateleRegister:
          $ref: '#/components/schemas/IndicatieCurateleRegister'
        indicatieGezagMinderjarige:
          $ref: '#/components/schemas/Waardetabel'
        verblijfstitel:
          $ref: '#/components/schemas/Verblijfstitel'
        kinderen:
          type: array
          items:
            $ref: '#/components/schemas/Kind'
        ouders:
          type: array
          items:
            $ref: '#/components/schemas/Ouder'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Partner'
        rni:
          type: array
          items:
            $ref: '#/components/schemas/RniDeelnemer'
        verificatie:
          $ref: '#/components/schemas/Verificatie'
      description: |
        * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
    ANummer:
      pattern: "^[0-9]{10}$"
      type: string
      description: |
        Het A-nummer van de persoon
    PersoonInOnderzoek:
      type: object
      properties:
        datumIngangOnderzoekPersoon:
          $ref: '#/components/schemas/AbstractDatum'
        datumIngangOnderzoekGemeente:
          $ref: '#/components/schemas/AbstractDatum'
        datumIngangOnderzoekGezag:
          $ref: '#/components/schemas/AbstractDatum'
        burgerservicenummer:
          type: boolean
        geslacht:
          type: boolean
        leeftijd:
          type: boolean
        gemeenteVanInschrijving:
          type: boolean
        datumInschrijvingInGemeente:
          type: boolean
        indicatieCurateleRegister:
          type: boolean
        indicatieGezagMinderjarige:
          type: boolean
      description: |
        Geeft aan welke gegevens van de persoon in onderzoek zijn.
        * **datumIngangOnderzoekPersoon - Deze datum heeft betrekking op burgerservicenummer, geslacht en leeftijd
        * **datumIngangOnderzoekGemeente - Deze datum heeft betrekking op gemeenteVanInschrijving en datumInschrijvingInGemeente
        * **datumIngangOnderzoekGezag - Deze datumingang heeft betrekking op indicatieCurateleRegister en indicatieGezagMinderjarige
    IndicatieCurateleRegister:
      type: boolean
      description: |
        Geeft aan dat de persoon onder curatele is gesteld.
      example: true
    Field:
      pattern: "^[a-zA-Z0-9\\._]{1,200}$"
      type: string
      description: |
        Het pad naar een gewenst veld in punt-gescheiden formaat. Bijvoorbeeld "burgerservicenummer", "geboorte.datum", "partners.naam.voornamen".
    GemeenteVanInschrijving:
      pattern: "^[0-9]{4}$"
      type: string
      description: |
        Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.
      example: "0518"
    GeslachtsnaamFilter:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,200}$|^[a-zA-Z0-9À-ž \\.\\-\\']{3,199}\\\
        *{1}$"
      type: string
      description: |
        De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters.** **Zoeken met tekstvelden is case-insensitive.**
      example: Vries
    GeslachtFilter:
      pattern: "^([Mm]|[Vv]|[Oo])$"
      type: string
      description: |
        Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.
      example: V
    VoorvoegselFilter:
      pattern: "^[a-zA-Z \\']{1,10}$"
      type: string
      description: |
        Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. **Zoeken met tekstvelden is case-insensitive.**
      example: de
    VoornamenOptioneelFilter:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,199}\\*{0,1}$"
      type: string
      description: |
        De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. **Gebruik van de wildcard is toegestaan.** **Zoeken met tekstvelden is case-insensitive.**
      example: Dirk
    VoornamenVerplichtFilter:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,200}$|^[a-zA-Z0-9À-ž \\.\\-\\']{3,199}\\\
        *{1}$"
      type: string
      description: |
        De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters.** **Zoeken met tekstvelden is case-insensitive.**
      example: Dirk
    Huisletter:
      pattern: "^[a-zA-Z]{1}$"
      type: string
      description: |
        Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.
      example: a
    Huisnummer:
      maximum: 99999
      minimum: 1
      type: integer
      description: |
        Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.
      example: 14
    Huisnummertoevoeging:
      pattern: "^[a-zA-Z0-9 \\-]{1,4}$"
      type: string
      description: |
        Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.
      example: bis
    Postcode:
      pattern: "^[1-9]{1}[0-9]{3}[ ]?[A-Za-z]{2}$"
      type: string
      description: |
        De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.
      example: 2341SX
    StraatFilter:
      pattern: "^[a-zA-Z0-9À-ž \\-\\'\\.]{1,80}$|^[a-zA-Z0-9À-ž \\-\\'\\.]{7,79}\\\
        *{1}$|^\\*{1}[a-zA-Z0-9À-ž \\-\\'\\.]{7,79}$"
      type: string
      description: "Een naam die door de gemeente aan een openbare ruimte is gegeven.\
        \ **Gebruik van de wildcard is toegestaan bij invoer van ten minste 7 letters.**\
        \ **Zoeken met tekstvelden is case-insensitive.** \n"
      example: Tulpstraat
    NummeraanduidingIdentificatie:
      pattern: "^[0-9]{16}$"
      type: string
      description: |
        Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.
      example: "0518200000366054"
    GeboorteBeperkt:
      allOf:
      - $ref: '#/components/schemas/GeboorteBasis'
      - type: object
        properties:
          inOnderzoek:
            $ref: '#/components/schemas/GeboorteInOnderzoekBeperkt'
    GeboorteBasis:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/AbstractDatum'
    GeboorteInOnderzoekBeperkt:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          datum:
            type: boolean
    Waardetabel:
      type: object
      properties:
        code:
          pattern: "^[a-zA-Z0-9 \\.]+$"
          type: string
          example: "6030"
        omschrijving:
          pattern: "^[a-zA-Z0-9À-ž \\'\\,\\(\\)\\.\\-]{1,200}$"
          type: string
          example: Nederland
    NaamPersoonBeperkt:
      description: |
        Gegevens over de naam van de persoon.
      allOf:
      - $ref: '#/components/schemas/NaamBasis'
      - properties:
          inOnderzoek:
            $ref: '#/components/schemas/NaamPersoonInOnderzoekBeperkt'
    NaamBasis:
      type: object
      properties:
        voornamen:
          $ref: '#/components/schemas/Voornamen'
        adellijkeTitelPredicaat:
          $ref: '#/components/schemas/AdellijkeTitelPredicaatType'
        voorvoegsel:
          $ref: '#/components/schemas/Voorvoegsel'
        geslachtsnaam:
          $ref: '#/components/schemas/Geslachtsnaam'
        voorletters:
          $ref: '#/components/schemas/Voorletters'
        volledigeNaam:
          $ref: '#/components/schemas/VolledigeNaam'
    Voornamen:
      maxLength: 200
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,200}$"
      type: string
      description: |
        De verzameling namen voor de geslachtsnaam, gescheiden door spaties.
    AdellijkeTitelPredicaatType:
      description: |
        Wordt gevuld met waarden uit de landelijke tabel 'Adellijke titel/predicaat'. De property soort geeft aan of het een 'predicaat' of een 'titel' is.
      allOf:
      - $ref: '#/components/schemas/Waardetabel'
      - properties:
          soort:
            $ref: '#/components/schemas/AdellijkeTitelPredicaatSoort'
        example:
          value:
            code: JV
            omschrijving: jonkvrouw
            soort: predicaat
    AdellijkeTitelPredicaatSoort:
      type: string
      enum:
      - titel
      - predicaat
    Voorvoegsel:
      maxLength: 10
      pattern: "^[a-zA-Z \\']{1,10}$"
      type: string
      example: de
    Geslachtsnaam:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,200}$"
      type: string
      description: |
        De achternaam van een persoon.
      example: Vries
    Voorletters:
      pattern: "^[a-zA-Z0-9À-ž \\.]{1,40}$"
      type: string
      description: |
        De voorletters van de persoon, afgeleid van de voornamen.
      example: P.J.
    VolledigeNaam:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,450}$"
      type: string
      description: |
        Combinatie van predicaat, voornamen, adellijke titel, voorvoegsels en geslachtsnaam, zonder toevoeging van een eventuele partnernaam.
      example: Pieter Jan de Vries
    NaamPersoonInOnderzoekBeperkt:
      allOf:
      - $ref: '#/components/schemas/NaamInOnderzoek'
      - type: object
        properties:
          volledigeNaam:
            type: boolean
    NaamInOnderzoek:
      description: |
        Geeft aan welke gegevens over de naam in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          voornamen:
            type: boolean
          adellijkeTitelPredicaat:
            type: boolean
          voorvoegsel:
            type: boolean
          geslachtsnaam:
            type: boolean
          voorletters:
            type: boolean
    OpschortingBijhouding:
      allOf:
      - $ref: '#/components/schemas/OpschortingBijhoudingBasis'
      - type: object
        properties:
          datum:
            $ref: '#/components/schemas/AbstractDatum'
        description: |
          * **datum**: de datum waarop de bijhouding van de persoonsgegevens is gestaakt.
    OpschortingBijhoudingBasis:
      type: object
      properties:
        reden:
          $ref: '#/components/schemas/Waardetabel'
      description: |
        * **reden** - wordt gevuld met waarden voor 'Reden_Opschorting_Bijhouding' in 'tabelwaarden.csv'.
    AdresseringBeperkt:
      allOf:
      - $ref: '#/components/schemas/AdresseringBasis'
      - properties:
          inOnderzoek:
            $ref: '#/components/schemas/AdresseringInOnderzoekBeperkt'
    AdresseringBasis:
      type: object
      properties:
        adresregel1:
          $ref: '#/components/schemas/Adresregel1'
        adresregel2:
          $ref: '#/components/schemas/Adresregel2'
        adresregel3:
          $ref: '#/components/schemas/Adresregel3'
        land:
          $ref: '#/components/schemas/Waardetabel'
      description: ""
    Adresregel1:
      maxLength: 40
      type: string
      description: |
        Het eerste deel van een adres is een combinatie van de straat en huisnummer.
      example: Kappeyne v d Cappellostr 26A-3
    Adresregel2:
      maxLength: 50
      type: string
      description: |
        Het tweede deel van een adres is een combinatie van woonplaats eventueel in combinatie met de postcode.
      example: 1234AA Nootdorp
    Adresregel3:
      maxLength: 35
      type: string
      description: |
        Het derde deel van een adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.
      example: Selangor
    AdresseringInOnderzoekBeperkt:
      type: object
      properties:
        adresregel1:
          type: boolean
        adresregel2:
          type: boolean
        adresregel3:
          type: boolean
        land:
          type: boolean
        datumIngangOnderzoekVerblijfplaats:
          $ref: '#/components/schemas/AbstractDatum'
      description: |
        Geeft aan welke gegevens over de adressering in onderzoek zijn.
    AbstractDatum:
      required:
      - langFormaat
      - type
      type: object
      properties:
        type:
          type: string
        langFormaat:
          pattern: "^[a-z0-9 ]{1,17}$"
          type: string
      discriminator:
        propertyName: type
        mapping:
          Datum: '#/components/schemas/VolledigeDatum'
          DatumOnbekend: '#/components/schemas/DatumOnbekend'
          JaarDatum: '#/components/schemas/JaarDatum'
          JaarMaandDatum: '#/components/schemas/JaarMaandDatum'
    VolledigeDatum:
      required:
      - datum
      description: Datum conform iso8601
      example:
        value:
          type: Datum
          datum: 2018-07-01
          langFormaat: 1 juli 2018
      allOf:
      - $ref: '#/components/schemas/AbstractDatum'
      - type: object
        properties:
          datum:
            type: string
            format: date
    DatumOnbekend:
      required:
      - onbekend
      description: representatie voor een volledig onbekend datum
      example:
        value:
          type: DatumOnbekend
          onbekend: true
          langFormaat: onbekend
      allOf:
      - $ref: '#/components/schemas/AbstractDatum'
      - type: object
        properties:
          onbekend:
            type: boolean
            default: true
    JaarDatum:
      required:
      - jaar
      description: representatie voor een datum waarvan maand en dag onbekend zijn
      example:
        value:
          type: JaarDatum
          jaar: 2018
          langFormaat: 2018
      allOf:
      - $ref: '#/components/schemas/AbstractDatum'
      - type: object
        properties:
          jaar:
            $ref: '#/components/schemas/Jaar'
    Jaar:
      maximum: 9999
      minimum: 1
      type: integer
      format: int32
    JaarMaandDatum:
      required:
      - jaar
      - maand
      description: representatie voor een datum waarvan de dag onbekend is
      example:
        value:
          type: JaarMaandDatum
          jaar: 2018
          maand: 7
          langFormaat: juli 2018
      allOf:
      - $ref: '#/components/schemas/AbstractDatum'
      - type: object
        properties:
          jaar:
            $ref: '#/components/schemas/Jaar'
          maand:
            $ref: '#/components/schemas/Maand'
    Maand:
      maximum: 12
      minimum: 1
      type: integer
      format: int32
    UitsluitingKiesrecht:
      type: object
      properties:
        uitgeslotenVanKiesrecht:
          type: boolean
          example: true
        einddatum:
          $ref: '#/components/schemas/AbstractDatum'
    EuropeesKiesrecht:
      type: object
      properties:
        aanduiding:
          $ref: '#/components/schemas/Waardetabel'
        einddatumUitsluiting:
          $ref: '#/components/schemas/AbstractDatum'
      description: |
        * **aanduiding** - Geeft aan of persoon een oproep moet ontvangen voor verkiezingen voor het Europees parlement. Wordt gevuld met waarden voor 'Europees_Kiesrecht' in 'tabelwaarden.csv'.
    NaamPersoon:
      description: |
        Gegevens over de naam van de persoon.
        * **aanduidingNaamgebruik** - wordt gevuld met waarden voor 'Naamgebruik' in 'tabelwaarden.csv'.
      allOf:
      - $ref: '#/components/schemas/NaamBasis'
      - properties:
          aanduidingNaamgebruik:
            $ref: '#/components/schemas/Waardetabel'
          inOnderzoek:
            $ref: '#/components/schemas/NaamPersoonInOnderzoek'
    NaamPersoonInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/NaamInOnderzoek'
      - type: object
        properties:
          aanduidingNaamgebruik:
            type: boolean
          volledigeNaam:
            type: boolean
    AbstractNationaliteit:
      required:
      - type
      type: object
      properties:
        type:
          type: string
        redenOpname:
          $ref: '#/components/schemas/Waardetabel'
      description: |
        * **redenOpname** - De reden op grond waarvan de persoon de nationaliteit gekregen heeft. Wordt gevuld met waarden uit de landelijke tabel 'Reden opnemen/beëindigen nationaliteit'.
      discriminator:
        propertyName: type
        mapping:
          Nationaliteit: '#/components/schemas/NationaliteitBekend'
          BehandeldAlsNederlander: '#/components/schemas/BehandeldAlsNederlander'
          VastgesteldNietNederlander: '#/components/schemas/VastgesteldNietNederlander'
          Staatloos: '#/components/schemas/Staatloos'
          NationaliteitOnbekend: '#/components/schemas/NationaliteitOnbekend'
    NationaliteitBekend:
      description: |
        * **nationaliteit** - wordt gevuld met waarden uit de landelijke tabel 'Nationaliteiten'.
      allOf:
      - $ref: '#/components/schemas/AbstractNationaliteit'
      - type: object
        properties:
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          nationaliteit:
            $ref: '#/components/schemas/Waardetabel'
          inOnderzoek:
            $ref: '#/components/schemas/NationaliteitBekendInOnderzoek'
    NationaliteitBekendInOnderzoek:
      description: |
        Geeft aan welke gegevens over de nationaliteit in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          type:
            type: boolean
          nationaliteit:
            type: boolean
          redenOpname:
            type: boolean
    BehandeldAlsNederlander:
      allOf:
      - $ref: '#/components/schemas/AbstractNationaliteit'
      - type: object
        properties:
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          inOnderzoek:
            $ref: '#/components/schemas/BijzonderNederlanderschapInOnderzoek'
    BijzonderNederlanderschapInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          type:
            type: boolean
          redenOpname:
            type: boolean
    VastgesteldNietNederlander:
      allOf:
      - $ref: '#/components/schemas/AbstractNationaliteit'
      - type: object
        properties:
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          inOnderzoek:
            $ref: '#/components/schemas/BijzonderNederlanderschapInOnderzoek'
    Staatloos:
      description: |
        * **redenOpname** : De reden op grond waarvan de persoon de nationaliteit gekregen heeft.
      allOf:
      - $ref: '#/components/schemas/AbstractNationaliteit'
      - type: object
        properties:
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          inOnderzoek:
            $ref: '#/components/schemas/StaatloosInOnderzoek'
    StaatloosInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          type:
            type: boolean
          redenOpname:
            type: boolean
    NationaliteitOnbekend:
      allOf:
      - $ref: '#/components/schemas/AbstractNationaliteit'
      - type: object
        properties:
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          inOnderzoek:
            $ref: '#/components/schemas/NationaliteitOnbekendInOnderzoek'
    NationaliteitOnbekendInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          type:
            type: boolean
          redenOpname:
            type: boolean
    Geboorte:
      description: |
        Gegevens over de geboorte.
        * **datum** - datum waarop de persoon is geboren.
        * **land** - land waar de persoon is geboren. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
        * **plaats** - gemeente waar de persoon is geboren. Wordt gevuld met waarden uit de landelijke tabel "Gemeenten" voor een gemeente in Nederland of als de persoon is geboren buiten Nederland de omschrijving van een buitenlandse plaatsnaam of aanduiding.
      allOf:
      - $ref: '#/components/schemas/GeboorteBasis'
      - type: object
        properties:
          land:
            $ref: '#/components/schemas/Waardetabel'
          plaats:
            $ref: '#/components/schemas/Waardetabel'
          inOnderzoek:
            $ref: '#/components/schemas/GeboorteInOnderzoek'
    GeboorteInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          datum:
            type: boolean
          land:
            type: boolean
          plaats:
            type: boolean
    Overlijden:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/AbstractDatum'
        land:
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/OverlijdenInOnderzoek'
      description: |
        Gegevens over het overlijden.
        * **datum** - datum waarop de persoon is overleden.
        * **land** - land waar de persoon is overleden. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
        * **plaats** - gemeente waar de persoon is overleden. Wordt gevuld met waarden uit de landelijke tabel "Gemeenten".
    OverlijdenInOnderzoek:
      description: |
        Geeft aan welke gegevens over het overlijden van de persoon in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          datum:
            type: boolean
          land:
            type: boolean
          plaats:
            type: boolean
    AbstractVerblijfplaats:
      required:
      - type
      type: object
      properties:
        type:
          type: string
      description: |
        Gegevens over het verblijf of de woonlocatie van een persoon.
      discriminator:
        propertyName: type
        mapping:
          VerblijfplaatsBuitenland: '#/components/schemas/VerblijfplaatsBuitenland'
          Adres: '#/components/schemas/Adres'
          VerblijfplaatsOnbekend: '#/components/schemas/VerblijfplaatsOnbekend'
          Locatie: '#/components/schemas/Locatie'
    VerblijfplaatsBuitenland:
      description: |
        * **gemeenteVanInschrijving** - wordt gevuld met waarden uit de landelijke tabel 'Gemeenten'.
        * **land** - land waar de persoon is overleden. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
      allOf:
      - $ref: '#/components/schemas/AbstractVerblijfplaats'
      - type: object
        properties:
          verblijfadres:
            $ref: '#/components/schemas/VerblijfadresBuitenland'
          datumVan:
            $ref: '#/components/schemas/AbstractDatum'
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          inOnderzoek:
            $ref: '#/components/schemas/VerblijfplaatsBuitenlandInOnderzoek'
    VerblijfadresBuitenland:
      type: object
      properties:
        regel1:
          $ref: '#/components/schemas/Regel1'
        regel2:
          $ref: '#/components/schemas/Regel2'
        regel3:
          $ref: '#/components/schemas/Regel3'
        land:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfadresBuitenlandInOnderzoek'
    Regel1:
      maxLength: 40
      type: string
      description: |
        Het eerste deel van een buitenlands adres. Vaak is dit een combinatie van de straat en huisnummer.
      example: 1600 Pennsylvania Avenue NW
    Regel2:
      maxLength: 50
      type: string
      description: |
        Het tweede deel van een buitenlands adres. Vaak is dit een combinatie van woonplaats eventueel in combinatie met de postcode.
      example: "Washington, DC 20500"
    Regel3:
      maxLength: 35
      type: string
      description: |
        Het derde deel van een buitenlands adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.
      example: Selangor
    VerblijfadresBuitenlandInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          regel1:
            type: boolean
          regel2:
            type: boolean
          regel3:
            type: boolean
          land:
            type: boolean
    VerblijfplaatsBuitenlandInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          type:
            type: boolean
          datumVan:
            type: boolean
          datumIngangGeldigheid:
            type: boolean
    Adres:
      description: |
        Gegevens over het adres van een persoon.
        * **gemeenteVanInschrijving** - wordt gevuld met waarden uit de landelijke tabel 'Gemeenten'.
        * **functieAdres** - wordt gevuld met waarden voor 'Functie_Adres' in 'tabelwaarden.csv'.
        * **aanduidingBijHuisnummer** - wordt gevuld met waarden voor 'Aanduiding_Bij_Huisnummer' in 'tabelwaarden.csv'.
        * **datumVan** : de datum van aangifte of ambtshalve melding van verblijf en adres.
        * **datumIngangGeldigheid** : datum waarop de gegevens over de verblijfplaats geldig zijn geworden.
      allOf:
      - $ref: '#/components/schemas/AbstractVerblijfplaats'
      - type: object
        properties:
          verblijfadres:
            $ref: '#/components/schemas/VerblijfadresBinnenland'
          functieAdres:
            $ref: '#/components/schemas/Waardetabel'
          adresseerbaarObjectIdentificatie:
            $ref: '#/components/schemas/AdresseerbaarObjectIdentificatie'
          nummeraanduidingIdentificatie:
            $ref: '#/components/schemas/NummeraanduidingIdentificatie'
          datumVan:
            $ref: '#/components/schemas/AbstractDatum'
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          inOnderzoek:
            $ref: '#/components/schemas/AdresInOnderzoek'
    VerblijfadresBinnenland:
      type: object
      properties:
        officieleStraatnaam:
          $ref: '#/components/schemas/OfficieleStraatnaam'
        korteStraatnaam:
          $ref: '#/components/schemas/KorteStraatnaam'
        huisnummer:
          $ref: '#/components/schemas/Huisnummer'
        huisletter:
          $ref: '#/components/schemas/Huisletter'
        huisnummertoevoeging:
          $ref: '#/components/schemas/Huisnummertoevoeging'
        aanduidingBijHuisnummer:
          $ref: '#/components/schemas/Waardetabel'
        postcode:
          $ref: '#/components/schemas/Postcode'
        woonplaats:
          $ref: '#/components/schemas/Woonplaats'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfadresBinnenlandInOnderzoek'
    OfficieleStraatnaam:
      maxLength: 80
      type: string
      description: |
        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG).
    KorteStraatnaam:
      maxLength: 24
      type: string
      description: |
        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG), zo nodig verkort tot maximaal 24 tekens, of de straatnaam van een niet-BAG adres.
    Woonplaats:
      title: woonplaats naam
      pattern: "^[a-zA-Z0-9À-ž \\(\\)\\,\\.\\-\\']{1,80}$"
      type: string
      description: |
        Een woonplaats is een gedeelte van het grondgebied van de gemeente met een naam.
      example: Duiven
    VerblijfadresBinnenlandInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          aanduidingBijHuisnummer:
            type: boolean
          huisletter:
            type: boolean
          huisnummer:
            type: boolean
          huisnummertoevoeging:
            type: boolean
          officieleStraatnaam:
            type: boolean
          postcode:
            type: boolean
          korteStraatnaam:
            type: boolean
          woonplaats:
            type: boolean
    AdresseerbaarObjectIdentificatie:
      pattern: "^[0-9]{16}$"
      type: string
      description: |
        De verblijfplaats van de persoon kan een ligplaats, een standplaats of een verblijfsobject zijn.
      example: "0226010000038820"
    AdresInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          type:
            type: boolean
          datumVan:
            type: boolean
          datumIngangGeldigheid:
            type: boolean
          nummeraanduidingIdentificatie:
            type: boolean
          adresseerbaarObjectIdentificatie:
            type: boolean
          functieAdres:
            type: boolean
    VerblijfplaatsOnbekend:
      allOf:
      - $ref: '#/components/schemas/AbstractVerblijfplaats'
      - type: object
        properties:
          datumVan:
            $ref: '#/components/schemas/AbstractDatum'
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          inOnderzoek:
            $ref: '#/components/schemas/VerblijfplaatsOnbekendInOnderzoek'
    VerblijfplaatsOnbekendInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          type:
            type: boolean
          datumVan:
            type: boolean
          datumIngangGeldigheid:
            type: boolean
    Locatie:
      description: |
        * **gemeenteVanInschrijving** - wordt gevuld met waarden uit de landelijke tabel 'Gemeenten'.
        * **functieAdres** - wordt gevuld met waarden voor 'Functie_Adres' in 'tabelwaarden.csv'.
        * **landVanWaarIngeschreven** : het land waar de persoon woonde voor (her)vestiging in Nederland. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
      allOf:
      - $ref: '#/components/schemas/AbstractVerblijfplaats'
      - type: object
        properties:
          datumVan:
            $ref: '#/components/schemas/AbstractDatum'
          functieAdres:
            $ref: '#/components/schemas/Waardetabel'
          verblijfadres:
            $ref: '#/components/schemas/VerblijfadresLocatie'
          datumIngangGeldigheid:
            $ref: '#/components/schemas/AbstractDatum'
          inOnderzoek:
            $ref: '#/components/schemas/LocatieInOnderzoek'
    VerblijfadresLocatie:
      type: object
      properties:
        locatiebeschrijving:
          $ref: '#/components/schemas/Locatiebeschrijving'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfadresLocatieInOnderzoek'
    Locatiebeschrijving:
      maxLength: 35
      type: string
      description: |
        Omschrijving van de ligging van een verblijfsobject, standplaats of ligplaats.
      example: Naast de derde brug
    VerblijfadresLocatieInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          locatiebeschrijving:
            type: boolean
    LocatieInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          type:
            type: boolean
          datumVan:
            type: boolean
          functieAdres:
            type: boolean
          datumIngangGeldigheid:
            type: boolean
    Immigratie:
      type: object
      properties:
        datumVestigingInNederland:
          $ref: '#/components/schemas/AbstractDatum'
        landVanwaarIngeschreven:
          $ref: '#/components/schemas/Waardetabel'
        vanuitVerblijfplaatsOnbekend:
          $ref: '#/components/schemas/VanuitVerblijfplaatsOnbekend'
        indicatieVestigingVanuitBuitenland:
          $ref: '#/components/schemas/IndicatieVestigingVanuitBuitenland'
        inOnderzoek:
          $ref: '#/components/schemas/ImmigratieInOnderzoek'
      description: |
        Gegevens over het het immigratie van een persoon.
          * **landVanWaarIngeschreven** : het land waar de persoon woonde voor (her)vestiging in Nederland.
    VanuitVerblijfplaatsOnbekend:
      type: boolean
      description: |
        Geeft aan dat de persoon is teruggekeerd uit een situatie van onbekende verblijfplaats
    IndicatieVestigingVanuitBuitenland:
      type: boolean
      description: |
        Geeft aan dat de persoon zich vanuit het buitenland heeft ingeschreven.
    ImmigratieInOnderzoek:
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          datumVestigingInNederland:
            type: boolean
          landVanwaarIngeschreven:
            type: boolean
          vanuitVerblijfplaatsOnbekend:
            type: boolean
          indicatieVestigingVanuitBuitenland:
            type: boolean
    Adressering:
      allOf:
      - $ref: '#/components/schemas/AdresseringBasis'
      - properties:
          aanhef:
            $ref: '#/components/schemas/Aanhef'
          aanschrijfwijze:
            $ref: '#/components/schemas/Aanschrijfwijze'
          gebruikInLopendeTekst:
            $ref: '#/components/schemas/GebruikInLopendeTekst'
          inOnderzoek:
            $ref: '#/components/schemas/AdresseringInOnderzoek'
    Aanhef:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,650}$"
      type: string
      description: |
        Kun je gebruiken als aanhef in een brief gericht aan persoon.
      example: Hoogwelgeboren heer
    Aanschrijfwijze:
      type: object
      properties:
        naam:
          pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,650}$"
          type: string
          example: H.W. baron van den Aedel
        aanspreekvorm:
          pattern: "^[a-zA-Z ]{1,25}$"
          type: string
          description: |
            Deze regel moet als aparte regel boven de samengestelde naam worden geplaatst. Komt alleen voor bij personen met een adellijke titel of predicaat.
          example: De hoogwelgeboren heer
      description: |
        Samengestelde naam en aanspreekvorm die je kunt gebruiken in de communicatie met de persoon.
    GebruikInLopendeTekst:
      pattern: "^[a-zA-Z0-9À-ž \\.\\-\\']{1,650}$"
      type: string
      description: |
        Naam van persoon die je kunt gebruiken als je in lopende tekst (bijvoorbeeld in een brief) aan persoon refereert.
      example: baron Van den Aedel
    AdresseringInOnderzoek:
      type: object
      properties:
        aanhef:
          type: boolean
        adresregel1:
          type: boolean
        adresregel2:
          type: boolean
        adresregel3:
          type: boolean
        land:
          type: boolean
        aanschrijfwijze:
          type: boolean
        gebruikInLopendeTekst:
          type: boolean
        datumIngangOnderzoekPersoon:
          $ref: '#/components/schemas/AbstractDatum'
        datumIngangOnderzoekPartner:
          $ref: '#/components/schemas/AbstractDatum'
        datumIngangOnderzoekVerblijfplaats:
          $ref: '#/components/schemas/AbstractDatum'
      description: |
        Geeft aan welke gegevens over de adressering in onderzoek zijn.
    Verblijfstitel:
      type: object
      properties:
        aanduiding:
          $ref: '#/components/schemas/Waardetabel'
        datumEinde:
          $ref: '#/components/schemas/AbstractDatum'
        datumIngang:
          $ref: '#/components/schemas/AbstractDatum'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfstitelInOnderzoek'
      description: |
        Gegevens over de verblijfsrechtelijke status van de persoon.
        * **datumEinde**: Datum waarop de geldigheid van de gegevens over de verblijfstitel is beëindigd.
        * **datumIngang**: Datum waarop de gegevens over de verblijfstitel geldig zijn geworden.
        * **aanduiding** : Verblijfstiteltabel die aangeeft over welke verblijfsrechtelijke status de persoon beschikt. Wordt gevuld met waarden uit de landelijke tabel 'Verblijfstitel'.
    VerblijfstitelInOnderzoek:
      description: |
        Geeft aan welke gegevens over de verblijfstitel in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          aanduiding:
            type: boolean
          datumEinde:
            type: boolean
          datumIngang:
            type: boolean
    Kind:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        inOnderzoek:
          $ref: '#/components/schemas/KindInOnderzoek'
        naam:
          $ref: '#/components/schemas/NaamGerelateerde'
        geboorte:
          $ref: '#/components/schemas/Geboorte'
    KindInOnderzoek:
      description: |
        Geeft aan of de gegevens over het kind van de persoon in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          burgerservicenummer:
            type: boolean
    Ouder:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geslacht:
          $ref: '#/components/schemas/Waardetabel'
        ouderAanduiding:
          $ref: '#/components/schemas/OuderAanduiding'
        datumIngangFamilierechtelijkeBetrekking:
          $ref: '#/components/schemas/AbstractDatum'
        naam:
          $ref: '#/components/schemas/NaamGerelateerde'
        inOnderzoek:
          $ref: '#/components/schemas/OuderInOnderzoek'
        geboorte:
          $ref: '#/components/schemas/Geboorte'
      description: |
        Gegevens over de ouder van de persoon.
        * **datumIngangFamilierechtelijkeBetrekking** - De datum waarop de familierechtelijke betrekking is ontstaan.
        * **geslacht** - wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
    OuderAanduiding:
      pattern: "^[1|2]$"
      type: string
      example: "1"
    OuderInOnderzoek:
      description: |
        Geeft aan welke gegevens van de de ouder in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          burgerservicenummer:
            type: boolean
          datumIngangFamilierechtelijkeBetrekking:
            type: boolean
          geslacht:
            type: boolean
    Partner:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geslacht:
          $ref: '#/components/schemas/Waardetabel'
        soortVerbintenis:
          $ref: '#/components/schemas/Waardetabel'
        naam:
          $ref: '#/components/schemas/NaamGerelateerde'
        geboorte:
          $ref: '#/components/schemas/Geboorte'
        inOnderzoek:
          $ref: '#/components/schemas/PartnerInOnderzoek'
        aangaanHuwelijkPartnerschap:
          $ref: '#/components/schemas/AangaanHuwelijkPartnerschap'
        ontbindingHuwelijkPartnerschap:
          $ref: '#/components/schemas/OntbindingHuwelijkPartnerschap'
    PartnerInOnderzoek:
      description: |
        Geeft aan welke gegevens over het huwelijk of het partnerschap in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          burgerservicenummer:
            type: boolean
          geslacht:
            type: boolean
          soortVerbintenis:
            type: boolean
    AangaanHuwelijkPartnerschap:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/AbstractDatum'
        land:
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/AangaanHuwelijkPartnerschapInOnderzoek'
      description: |
        Gegevens over de voltrekking van het huwelijk of het aangaan van het geregistreerd partnerschap.
        * **datum** - De datum waarop het huwelijk is voltrokken of het partnerschap is aangegaan.
        * **land** - Het land waar het huwelijk is voltrokken of het partnerschap is aangegaan. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
        * **plaats** - De gemeente waar het huwelijk is voltrokken of het partnerschap is aangegaan. Wordt gevuld met waarden uit de landelijke tabel "Gemeenten" voor een gemeente in Nederland of de omschrijving van een buitenlandse plaats.
    AangaanHuwelijkPartnerschapInOnderzoek:
      description: |
        Geeft aan welke gegevens over het voltrekken van het huwelijk of aangaan van het partnerschap in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          datum:
            type: boolean
          land:
            type: boolean
          plaats:
            type: boolean
    OntbindingHuwelijkPartnerschap:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/AbstractDatum'
        inOnderzoek:
          $ref: '#/components/schemas/OntbindingHuwelijkPartnerschapInOnderzoek'
      description: |
        Gegevens over de ontbinding van het huwelijk of het geregistreerd partnerschap.
        * **datum** : De datum waarop het huwelijk of het partnerschap is ontbonden.
    OntbindingHuwelijkPartnerschapInOnderzoek:
      description: |
        Geeft aan welke gegevens over het onbinden van het huwelijk of aangaan van het partnerschap in onderzoek zijn.
      allOf:
      - $ref: '#/components/schemas/InOnderzoek'
      - type: object
        properties:
          datum:
            type: boolean
    InOnderzoek:
      type: object
      properties:
        datumIngangOnderzoek:
          $ref: '#/components/schemas/AbstractDatum'
    NaamGerelateerde:
      type: object
      properties:
        voornamen:
          $ref: '#/components/schemas/Voornamen'
        adellijkeTitelPredicaat:
          $ref: '#/components/schemas/AdellijkeTitelPredicaatType'
        voorvoegsel:
          $ref: '#/components/schemas/Voorvoegsel'
        geslachtsnaam:
          $ref: '#/components/schemas/Geslachtsnaam'
        voorletters:
          $ref: '#/components/schemas/Voorletters'
        inOnderzoek:
          $ref: '#/components/schemas/NaamInOnderzoek'
  responses:
    "400":
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestFoutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1
            title: Ten minste één parameter moet worden opgegeven.
            status: 400
            detail: The request could not be understood by the server due to malformed
              syntax. The client SHOULD NOT repeat the request without modification.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: paramsRequired
            invalidParams:
            - type: https://www.vng.nl/realisatie/api/validaties/integer
              name: huisnummer
              code: integer
              reason: Waarde is geen geldig getal.
    "401":
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2
            title: Niet correct geauthenticeerd.
            status: 401
            detail: The request requires user authentication. The response MUST include
              a WWW-Authenticate header field (section 14.47) containing a challenge
              applicable to the requested resource.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: authentication
    "403":
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4
            title: U bent niet geautoriseerd voor deze operatie.
            status: 403
            detail: "The server understood the request, but is refusing to fulfill\
              \ it."
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: autorisation
    "406":
      description: Not Acceptable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7
            title: Gevraagde contenttype wordt niet ondersteund.
            status: 406
            detail: The resource identified by the request is only capable of generating
              response entities which have content characteristics not acceptable
              according to thr accept headers sent in the request
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: notAcceptable
    "415":
      description: Unsupported Media Type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.16
            title: Unsupported Media Type
            status: 415
            detail: The server is refusing the request because the entity of the request
              is in a format not supported by the requested resource for the requested
              method.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: unsupported
    "429":
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
            title: Too many request
            status: 429
            detail: The user has sent too many requests in a given amount of time
              (rate limiting).
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: tooManyRequests
    "500":
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
            title: Interne server fout.
            status: 500
            detail: The server encountered an unexpected condition which prevented
              it from fulfilling the request.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: serverError
    "503":
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4
            title: Bronservice BRP is tijdelijk niet beschikbaar.
            status: 503
            detail: The service is currently unable to handle the request due to a
              temporary overloading or maintenance of the server.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: notAvailable
    default:
      description: Er is een onverwachte fout opgetreden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
  headers:
    warning:
      schema:
        maxLength: 500
        type: string
        description: "zie RFC 7234. In het geval een major versie wordt uitgefaseerd,\
          \ gebruiken we warn-code 299 (\"Miscellaneous Persistent Warning\") en het\
          \ API end-point (inclusief versienummer) als de warn-agent van de warning,\
          \ gevolgd door de warn-text met de human-readable waarschuwing"
        example: "299 https://service.../api/.../v1 \"Deze versie van de API is verouderd\
          \ en zal uit dienst worden genomen op 2018-02-01. Raadpleeg voor meer informatie\
          \ hier de documentatie: https://omgevingswet.../api/.../v1\"."
    X_Rate_Limit_Limit:
      schema:
        type: integer
    X_Rate_Limit_Remaining:
      schema:
        type: integer
    X_Rate_Limit_Reset:
      schema:
        type: integer
