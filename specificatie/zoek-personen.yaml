openapi: 3.0.3
info:
  title: Zoek Personen endpoint definitie
  version: 2.0.0
  contact: {}
paths:
  /personen:
    post:
      operationId: GetPersonen
      summary: Vindt personen
      description: |
        Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met optionele parameters.


        Default krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.


        Gebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.3.0/features/fields_extensie.feature)


        1.  Zoek met geslachtsnaam en geboortedatum
            - geboortedatum
            - geslachtsnaam ([wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.3.0/features/wildcard.feature) met minimaal 2 karakters)


        2.  Zoek met geslachtsnaam, voornamen en gemeente van inschrijving
            - gemeenteVanInschrijving
            - geslachtsnaam ([wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.3.0/features/wildcard.feature) met minimaal 3 karakters)
            - voornamen ([wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.3.0/features/wildcard.feature) met minimaal 3 karakters)


        3.  Raadpleeg met burgerservicenummer
            - burgerservicenummer


        4.  Zoek met postcode en huisnummer
            - postcode
            - huisnummer


        5.  Zoek met straat, huisnummer en gemeente van inschrijving
            - straat ([wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.3.0/features/wildcard.feature) met minimaal 7 karakters)
            - gemeenteVanInschrijving
            - huisnummer


        6.  Zoek met nummeraanduiding identificatie
            - nummeraanduidingIdentificatie

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonenQuery'
      responses:
        '200':
          description: |
                        Zoekactie geslaagd
          headers:
            api-version:
              $ref: 'common.yaml#/components/headers/api_version'
            warning:
              $ref: 'common.yaml#/components/headers/warning'
            X-Rate-Limit-Limit:
              $ref: 'common.yaml#/components/headers/X_Rate_Limit_Limit'
            X-Rate-Limit-Remaining:
              $ref: 'common.yaml#/components/headers/X_Rate_Limit_Remaining'
            X-Rate-Limit-Reset:
              $ref: 'common.yaml#/components/headers/X_Rate_Limit_Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonenQueryResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '401':
          $ref: 'common.yaml#/components/responses/401'
        '403':
          $ref: 'common.yaml#/components/responses/403'
        '406':
          $ref: 'common.yaml#/components/responses/406'
        '429':
          $ref: 'common.yaml#/components/responses/429'
        '500':
          $ref: 'common.yaml#/components/responses/500'
        '501':
          $ref: 'common.yaml#/components/responses/501'
        '503':
          $ref: 'common.yaml#/components/responses/503'
        'default':
          $ref: 'common.yaml#/components/responses/default'
      tags:
        - Personen
components:
  schemas:
    InclusiefOverledenPersonen:
      description: |
        Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.3.0/features/overleden_personen.feature)
      type: boolean
      example: true
    PersonenQuery:
      type: object
      required:
        - type
        - fields
      discriminator:
        propertyName: type
        mapping:
          ZoekMetGeslachtsnaamEnGeboortedatum: '#/components/schemas/ZoekMetGeslachtsnaamEnGeboortedatum'
          ZoekMetNaamEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetNaamEnGemeenteVanInschrijving'
          RaadpleegMetBurgerservicenummer: '#/components/schemas/RaadpleegMetBurgerservicenummer'
          ZoekMetPostcodeEnHuisnummer: '#/components/schemas/ZoekMetPostcodeEnHuisnummer'
          ZoekMetStraatHuisnummerEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetStraatHuisnummerEnGemeenteVanInschrijving'
          ZoekMetNummeraanduidingIdentificatie: '#/components/schemas/ZoekMetNummeraanduidingIdentificatie'
      properties:
        type:
          type: string
        fields:
          $ref: 'filter.yaml#/components/schemas/Fields'
        gemeenteVanInschrijving:
          $ref: 'verblijfplaats.yaml#/components/schemas/GemeenteVanInschrijving'
    RaadpleegMetBurgerservicenummer:
      required:
        - burgerservicenummer
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            burgerservicenummer:
              type: array
              items:
                $ref: 'persoon.yaml#/components/schemas/Burgerservicenummer'
              minItems: 1
              maxItems: 20
    ZoekMetGeslachtsnaamEnGeboortedatum:
      required:
        - geslachtsnaam
        - geboortedatum
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            geboortedatum:
              description: |
                Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.3.0/features/parametervalidatie.feature)
              type: string
              format: date
              example: "1964-09-24"
            geboorteplaats:
              $ref: 'filter.yaml#/components/schemas/GeboorteplaatsFilter'
            geslachtsnaam:
              $ref: 'filter.yaml#/components/schemas/GeslachtsnaamFilter'
            geslachtsaanduiding:
              $ref: 'filter.yaml#/components/schemas/GeslachtsaanduidingFilter'
            voorvoegsel:
              $ref: 'filter.yaml#/components/schemas/VoorvoegselFilter'
            voornamen:
              $ref: 'filter.yaml#/components/schemas/VoornamenOptioneelFilter'
    ZoekMetNaamEnGemeenteVanInschrijving:
      required:
        - geslachtsnaam
        - gemeenteVanInschrijving
        - voornamen
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            geslachtsaanduiding:
              $ref: 'filter.yaml#/components/schemas/GeslachtsaanduidingFilter'
            geslachtsnaam:
              $ref: 'filter.yaml#/components/schemas/GeslachtsnaamFilter'
            voorvoegsel:
              $ref: 'filter.yaml#/components/schemas/VoorvoegselFilter'
            voornamen:
              $ref: 'filter.yaml#/components/schemas/VoornamenVerplichtFilter'
    ZoekMetPostcodeEnHuisnummer:
      required:
        - postcode
        - huisnummer
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            huisletter:
              $ref: 'verblijfplaats.yaml#/components/schemas/Huisletter'
            huisnummer:
              $ref: 'verblijfplaats.yaml#/components/schemas/Huisnummer'
            huisnummertoevoeging:
              $ref: 'verblijfplaats.yaml#/components/schemas/Huisnummertoevoeging'
            postcode:
              $ref: 'verblijfplaats.yaml#/components/schemas/Postcode'
    ZoekMetStraatHuisnummerEnGemeenteVanInschrijving:
      required:
        - straat
        - huisnummer
        - gemeenteVanInschrijving
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            huisletter:
              $ref: 'verblijfplaats.yaml#/components/schemas/Huisletter'
            huisnummer:
              $ref: 'verblijfplaats.yaml#/components/schemas/Huisnummer'
            huisnummertoevoeging:
              $ref: 'verblijfplaats.yaml#/components/schemas/Huisnummertoevoeging'
            straat:
              $ref: 'filter.yaml#/components/schemas/StraatFilter'
    ZoekMetNummeraanduidingIdentificatie:
      required:
        - nummeraanduidingIdentificatie
      allOf:
        - $ref: '#/components/schemas/PersonenQuery'
        - type: object
          properties:
            inclusiefOverledenPersonen:
              $ref: '#/components/schemas/InclusiefOverledenPersonen'
            nummeraanduidingIdentificatie:
              $ref: 'verblijfplaats.yaml#/components/schemas/NummeraanduidingIdentificatie'
    PersonenQueryResponse:
      type: object
      required:
        - type
      discriminator:
        propertyName: type
        mapping:
          ZoekMetGeslachtsnaamEnGeboortedatum: '#/components/schemas/ZoekMetGeslachtsnaamEnGeboortedatumResponse'
          ZoekMetNaamEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetNaamEnGemeenteVanInschrijvingResponse'
          RaadpleegMetBurgerservicenummer: '#/components/schemas/RaadpleegMetBurgerservicenummerResponse'
          ZoekMetPostcodeEnHuisnummer: '#/components/schemas/ZoekMetPostcodeEnHuisnummerResponse'
          ZoekMetStraatHuisnummerEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetStraatHuisnummerEnGemeenteVanInschrijvingResponse'
          ZoekMetNummeraanduidingIdentificatie: '#/components/schemas/ZoekMetNummeraanduidingIdentificatieResponse'
      properties:
        type:
          type: string
    RaadpleegMetBurgerservicenummerResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: 'persoon.yaml#/components/schemas/Persoon'
    ZoekMetGeslachtsnaamEnGeboortedatumResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: 'persoon.yaml#/components/schemas/PersoonBeperkt'
    ZoekMetNaamEnGemeenteVanInschrijvingResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: 'persoon.yaml#/components/schemas/PersoonBeperkt'
    ZoekMetPostcodeEnHuisnummerResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: 'persoon.yaml#/components/schemas/PersoonBeperkt'
    ZoekMetStraatHuisnummerEnGemeenteVanInschrijvingResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: 'persoon.yaml#/components/schemas/PersoonBeperkt'
    ZoekMetNummeraanduidingIdentificatieResponse:
      allOf:
        - $ref: '#/components/schemas/PersonenQueryResponse'
        - type: object
          properties:
            personen:
              type: array
              items:
                $ref: 'persoon.yaml#/components/schemas/PersoonBeperkt'
