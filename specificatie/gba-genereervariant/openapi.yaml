openapi: 3.0.3
info:
  title: BRP Personen Bevragen
  description: |
    API voor het bevragen van personen uit de basisregistratie personen (BRP), inclusief de registratie niet-ingezeten (RNI). Met deze API kun je personen zoeken en actuele gegevens over personen, kinderen, partners en ouders raadplegen.

    Gegevens die er niet zijn of niet actueel zijn krijg je niet terug. Heeft een persoon bijvoorbeeld geen geldige nationaliteit, en alleen een beëindigd partnerschap, dan krijg je geen gegevens over nationaliteit en partner.

    Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/tree/v1.1.0/features) voor nadere toelichting.
  contact:
    url: https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen
  license:
    name: European Union Public License, version 1.2 (EUPL-1.2)
    url: https://eupl.eu/1.2/nl/
  version: 2.0.0
servers:
- url: https://www.haalcentraal.nl/haalcentraal/api/brp
  description: |
    APILAB testserver
tags:
- name: Personen
  description: Zoeken personen
paths:
  /personen:
    post:
      tags:
      - Personen
      summary: Vindt personen
      description: |
        Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met optionele parameters.


        Default krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.


        Gebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.3.0/features/fields_extensie.feature)


        1.  Zoek met geslachtsnaam en geboortedatum
            - geboortedatum
            - geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.3.0/features/wildcard.feature))


        2.  Zoek met geslachtsnaam, voornamen en gemeente van inschrijving
            - gemeenteVanInschrijving
            - geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.3.0/features/wildcard.feature))


        3.  Raadpleeg met burgerservicenummer
            - burgerservicenummer


        4.  Zoek met postcode en huisnummer
            - postcode
            - huisnummer


        5.  Zoek met straat, huisnummer en gemeente van inschrijving
            - straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.3.0/features/wildcard.feature))
            - gemeenteVanInschrijving
            - huisnummer


        6.  Zoek met nummeraanduiding identificatie
            - nummeraanduidingIdentificatie
      operationId: GetPersonen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonenQuery'
      responses:
        "200":
          description: |
            Zoekactie geslaagd
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
            warning:
              $ref: '#/components/headers/warning'
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X_Rate_Limit_Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X_Rate_Limit_Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X_Rate_Limit_Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonenQueryResponse'
        "400":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestFoutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1
                title: Ten minste één parameter moet worden opgegeven.
                status: 400
                detail: The request could not be understood by the server due to malformed
                  syntax. The client SHOULD NOT repeat the request without modification.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: paramsRequired
                invalidParams:
                - type: https://www.vng.nl/realisatie/api/validaties/integer
                  name: verblijfplaats__huisnummer
                  code: integer
                  reason: Waarde is geen geldige integer.
        "401":
          description: Unauthorized
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2
                title: Niet correct geauthenticeerd.
                status: 401
                detail: The request requires user authentication. The response MUST
                  include a WWW-Authenticate header field (section 14.47) containing
                  a challenge applicable to the requested resource.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: authentication
        "403":
          description: Forbidden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4
                title: U bent niet geautoriseerd voor deze operatie.
                status: 403
                detail: The server understood the request, but is refusing to fulfill
                  it.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: autorisation
        "406":
          description: Not Acceptable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7
                title: Gevraagde contenttype wordt niet ondersteund.
                status: 406
                detail: The resource identified by the request is only capable of
                  generating response entities which have content characteristics
                  not acceptable according to thr accept headers sent in the request
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAcceptable
        "429":
          description: Too Many Requests
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
                title: Too many request
                status: 429
                detail: The user has sent too many requests in a given amount of time
                  (rate limiting).
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: tooManyRequests
        "500":
          description: Internal Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
                title: Interne server fout.
                status: 500
                detail: The server encountered an unexpected condition which prevented
                  it from fulfilling the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: serverError
        "501":
          description: Not Implemented
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.2
                title: Not Implemented
                status: 501
                detail: The server does not support the functionality required to
                  fulfill the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notImplemented
        "503":
          description: Service Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4
                title: Bronservice BRP is tijdelijk niet beschikbaar.
                status: 503
                detail: The service is currently unable to handle the request due
                  to a temporary overloading or maintenance of the server.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAvailable
        default:
          description: Er is een onverwachte fout opgetreden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
components:
  schemas:
    PersonenQueryResponse:
      required:
      - type
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          ZoekMetGeslachtsnaamEnGeboortedatum: '#/components/schemas/ZoekMetGeslachtsnaamEnGeboortedatumResponse'
          ZoekMetNaamEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetNaamEnGemeenteVanInschrijvingResponse'
          RaadpleegMetBurgerservicenummer: '#/components/schemas/RaadpleegMetBurgerservicenummerResponse'
          ZoekMetPostcodeEnHuisnummer: '#/components/schemas/ZoekMetPostcodeEnHuisnummerResponse'
          ZoekMetStraatHuisnummerEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetStraatHuisnummerEnGemeenteVanInschrijvingResponse'
          ZoekMetNummeraanduidingIdentificatie: '#/components/schemas/ZoekMetNummeraanduidingIdentificatieResponse'
    ZoekMetGeslachtsnaamEnGeboortedatumResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            items:
              $ref: '#/components/schemas/GbaPersoonBeperkt'
    ZoekMetNaamEnGemeenteVanInschrijvingResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            items:
              $ref: '#/components/schemas/GbaPersoonBeperkt'
    RaadpleegMetBurgerservicenummerResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            items:
              $ref: '#/components/schemas/GbaPersoon'
    ZoekMetPostcodeEnHuisnummerResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            items:
              $ref: '#/components/schemas/GbaPersoonBeperkt'
    ZoekMetStraatHuisnummerEnGemeenteVanInschrijvingResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            items:
              $ref: '#/components/schemas/GbaPersoonBeperkt'
    ZoekMetNummeraanduidingIdentificatieResponse:
      allOf:
      - $ref: '#/components/schemas/PersonenQueryResponse'
      - type: object
        properties:
          personen:
            type: array
            items:
              $ref: '#/components/schemas/GbaPersoonBeperkt'
    PersonenQuery:
      required:
      - fields
      - type
      type: object
      properties:
        type:
          type: string
        fields:
          maxItems: 130
          minItems: 1
          type: array
          description: "Hiermee kun je de inhoud van de resource naar behoefte aanpassen\
            \ door een lijst van paden die verwijzen naar de gewenste velden op te\
            \ nemen ([zie functionele specificaties 'fields' properties](https://raw.githubusercontent.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/develop/features/fields.feature)).\
            \ \nDe te gebruiken paden zijn beschreven in [fields-Persoon.csv](https://raw.githubusercontent.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/develop/features/fields-Persoon.csv)\
            \ (voor gebruik fields bij raadplegen) en [fields-PersoonBeperkt.csv](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/develop/features/fields-PersoonBeperkt.csv)\
            \ (voor gebruik fields bij zoeken) waarbij in de eerste kolom het fields-pad\
            \ staat en in de tweede kolom het volledige pad naar het gewenste veld.\n"
          items:
            $ref: '#/components/schemas/Field'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/GemeenteVanInschrijving'
      discriminator:
        propertyName: type
        mapping:
          ZoekMetGeslachtsnaamEnGeboortedatum: '#/components/schemas/ZoekMetGeslachtsnaamEnGeboortedatum'
          ZoekMetNaamEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetNaamEnGemeenteVanInschrijving'
          RaadpleegMetBurgerservicenummer: '#/components/schemas/RaadpleegMetBurgerservicenummer'
          ZoekMetPostcodeEnHuisnummer: '#/components/schemas/ZoekMetPostcodeEnHuisnummer'
          ZoekMetStraatHuisnummerEnGemeenteVanInschrijving: '#/components/schemas/ZoekMetStraatHuisnummerEnGemeenteVanInschrijving'
          ZoekMetNummeraanduidingIdentificatie: '#/components/schemas/ZoekMetNummeraanduidingIdentificatie'
    ZoekMetGeslachtsnaamEnGeboortedatum:
      required:
      - geboortedatum
      - geslachtsnaam
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          geboortedatum:
            type: string
            description: |
              Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.3.0/features/parametervalidatie.feature)
            format: date
            example: 1964-09-24
          geslachtsnaam:
            $ref: '#/components/schemas/GeslachtsnaamFilter'
          geslacht:
            $ref: '#/components/schemas/GeslachtFilter'
          voorvoegsel:
            $ref: '#/components/schemas/VoorvoegselFilter'
          voornamen:
            $ref: '#/components/schemas/VoornamenOptioneelFilter'
    InclusiefOverledenPersonen:
      type: boolean
      description: |
        Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.3.0/features/overleden_personen.feature)
      example: true
    ZoekMetNaamEnGemeenteVanInschrijving:
      required:
      - gemeenteVanInschrijving
      - geslachtsnaam
      - voornamen
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          geslacht:
            $ref: '#/components/schemas/GeslachtFilter'
          geslachtsnaam:
            $ref: '#/components/schemas/GeslachtsnaamFilter'
          voorvoegsel:
            $ref: '#/components/schemas/VoorvoegselFilter'
          voornamen:
            $ref: '#/components/schemas/VoornamenVerplichtFilter'
    RaadpleegMetBurgerservicenummer:
      required:
      - burgerservicenummer
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          burgerservicenummer:
            maxItems: 20
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/Burgerservicenummer'
    ZoekMetPostcodeEnHuisnummer:
      required:
      - huisnummer
      - postcode
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          huisletter:
            $ref: '#/components/schemas/Huisletter'
          huisnummer:
            $ref: '#/components/schemas/Huisnummer'
          huisnummertoevoeging:
            $ref: '#/components/schemas/Huisnummertoevoeging'
          postcode:
            $ref: '#/components/schemas/Postcode'
    ZoekMetStraatHuisnummerEnGemeenteVanInschrijving:
      required:
      - gemeenteVanInschrijving
      - huisnummer
      - straat
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          huisletter:
            $ref: '#/components/schemas/Huisletter'
          huisnummer:
            $ref: '#/components/schemas/Huisnummer'
          huisnummertoevoeging:
            $ref: '#/components/schemas/Huisnummertoevoeging'
          straat:
            $ref: '#/components/schemas/StraatFilter'
    ZoekMetNummeraanduidingIdentificatie:
      required:
      - nummeraanduidingIdentificatie
      allOf:
      - $ref: '#/components/schemas/PersonenQuery'
      - type: object
        properties:
          inclusiefOverledenPersonen:
            $ref: '#/components/schemas/InclusiefOverledenPersonen'
          nummeraanduidingIdentificatie:
            $ref: '#/components/schemas/NummeraanduidingIdentificatie'
    BadRequestFoutbericht:
      allOf:
      - $ref: '#/components/schemas/Foutbericht'
      - type: object
        properties:
          invalidParams:
            type: array
            description: Foutmelding per fout in een parameter. Alle gevonden fouten
              worden één keer teruggemeld.
            items:
              $ref: '#/components/schemas/InvalidParams'
    Foutbericht:
      type: object
      properties:
        type:
          type: string
          description: Link naar meer informatie over deze fout
          format: uri
        title:
          pattern: ^[a-zA-Z0-9À-ž \.\-]{1,80}$
          type: string
          description: Beschrijving van de fout
        status:
          maximum: 600
          minimum: 100
          type: integer
          description: Http status code
        detail:
          pattern: ^[a-zA-Z0-9À-ž \.\-\(\)\,]{1,200}$
          type: string
          description: Details over de fout
        instance:
          type: string
          description: Uri van de aanroep die de fout heeft veroorzaakt
          format: uri
        code:
          minLength: 1
          pattern: ^[a-zA-Z0-9]{1,25}$
          type: string
          description: Systeemcode die het type fout aangeeft
      description: Terugmelding bij een fout. JSON representatie in lijn met [RFC7807](https://tools.ietf.org/html/rfc7807).
    InvalidParams:
      type: object
      properties:
        type:
          type: string
          format: uri
          example: https://www.vng.nl/realisatie/api/{major-versie}/validaties/integer
        name:
          pattern: ^[a-zA-Z0-9\.,_]{1,30}$
          type: string
          description: Naam van de parameter
          example: verblijfplaats__huisnummer
        code:
          minLength: 1
          pattern: ^[a-zA-Z0-9\.,_]{1,25}$
          type: string
          description: Systeemcode die het type fout aangeeft
          example: integer
        reason:
          pattern: ^[a-zA-Z0-9\.,_ ]{1,80}$
          type: string
          description: Beschrijving van de fout op de parameterwaarde
          example: Waarde is geen geldige integer.
      description: Details over fouten in opgegeven parameters
    GbaPersoonBeperkt:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geboorte:
          $ref: '#/components/schemas/GbaGeboorteBeperkt'
        geheimhoudingPersoonsgegevens:
          $ref: '#/components/schemas/GbaGeheimhoudingPersoonsgegevens'
        geslacht:
          $ref: '#/components/schemas/Waardetabel'
        naam:
          $ref: '#/components/schemas/GbaNaamBasis'
        opschortingBijhouding:
          $ref: '#/components/schemas/OpschortingBijhoudingBasis'
        overlijden:
          $ref: '#/components/schemas/GbaOverlijdenBasis'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/Waardetabel'
        verblijfplaats:
          $ref: '#/components/schemas/GbaVerblijfplaatsBeperkt'
    Burgerservicenummer:
      pattern: ^[0-9]{9}$
      type: string
      example: "555555021"
    GbaGeheimhoudingPersoonsgegevens:
      type: integer
    GbaPersoon:
      type: object
      properties:
        aNummer:
          $ref: '#/components/schemas/ANummer'
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        datumEersteInschrijvingGBA:
          $ref: '#/components/schemas/GbaDatum'
        geheimhoudingPersoonsgegevens:
          $ref: '#/components/schemas/GbaGeheimhoudingPersoonsgegevens'
        geslacht:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/GbaInOnderzoek'
        uitsluitingKiesrecht:
          $ref: '#/components/schemas/GbaUitsluitingKiesrecht'
        europeesKiesrecht:
          $ref: '#/components/schemas/GbaEuropeesKiesrecht'
        naam:
          $ref: '#/components/schemas/GbaNaamPersoon'
        nationaliteiten:
          type: array
          items:
            $ref: '#/components/schemas/GbaNationaliteit'
        geboorte:
          $ref: '#/components/schemas/GbaGeboorte'
        opschortingBijhouding:
          $ref: '#/components/schemas/GbaOpschortingBijhouding'
        overlijden:
          $ref: '#/components/schemas/GbaOverlijden'
        verblijfplaats:
          $ref: '#/components/schemas/GbaVerblijfplaats'
        immigratie:
          $ref: '#/components/schemas/GbaImmigratie'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/Waardetabel'
        datumInschrijvingInGemeente:
          $ref: '#/components/schemas/GbaDatum'
        indicatieCurateleRegister:
          $ref: '#/components/schemas/IndicatieCurateleRegister'
        indicatieGezagMinderjarige:
          $ref: '#/components/schemas/Waardetabel'
        verblijfstitel:
          $ref: '#/components/schemas/GbaVerblijfstitel'
        reisdocumentnummers:
          type: array
          items:
            $ref: '#/components/schemas/Reisdocumentnummer'
        kinderen:
          type: array
          items:
            $ref: '#/components/schemas/GbaKind'
        ouders:
          type: array
          items:
            $ref: '#/components/schemas/GbaOuder'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/GbaPartner'
    ANummer:
      pattern: ^[0-9]{10}$
      type: string
      description: |
        Het A-nummer van de persoon
    IndicatieCurateleRegister:
      type: boolean
      description: |
        Geeft aan dat de persoon onder curatele is gesteld.
      example: true
    Reisdocumentnummer:
      pattern: ^[0-9a-zA-Z]{9}$
      type: string
      description: |
        Het nummer van het verstrekte Nederlandse reisdocument.
      example: "546376728"
    Field:
      pattern: ^[a-zA-Z0-9\._]{1,200}$
      type: string
      description: "Hiermee kun je het pad van het gewenste veld van een resource\
        \ opgeven \n([zie functionele specificaties 'fields' properties](https://raw.githubusercontent.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/develop/features/fields.feature)).\
        \ \nDe te gebruiken paden zijn beschreven in [fields-Persoon.csv](https://raw.githubusercontent.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/develop/features/fields-Persoon.csv)\
        \ \n(voor gebruik fields bij raadplegen) en [fields-PersoonBeperkt.csv](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/develop/features/fields-PersoonBeperkt.csv)\
        \ \n(voor gebruik fields bij zoeken) waarbij in de eerste kolom een mogelijk\
        \ pad naar een gewenste veld staat en in de tweede kolom het volledige pad\
        \ naar het betreffende veld.\nBij opgave van een pad dat verwijst naar een\
        \ niet-bestaand veld wordt een 400 Bad Request teruggegeven.\n"
    GemeenteVanInschrijving:
      pattern: ^[0-9]{4}$
      type: string
      description: |
        Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.
      example: "0518"
    GeslachtsnaamFilter:
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$|^[a-zA-Z0-9À-ž \.\-\']{3,199}\*{1}$
      type: string
      description: |
        De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters.** **Zoeken met tekstvelden is case-insensitive.**
      example: Vries
    GeslachtFilter:
      pattern: ^([Mm]|[Vv]|[Oo])$
      type: string
      description: |
        Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.
      example: V
    VoorvoegselFilter:
      pattern: ^[a-zA-Z \']{1,10}$
      type: string
      description: |
        Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. **Zoeken met tekstvelden is case-insensitive.**
      example: de
    VoornamenOptioneelFilter:
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,199}\*{0,1}$
      type: string
      description: |
        De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. **Gebruik van de wildcard is toegestaan.** **Zoeken met tekstvelden is case-insensitive.**
      example: Dirk
    VoornamenVerplichtFilter:
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$|^[a-zA-Z0-9À-ž \.\-\']{3,199}\*{1}$
      type: string
      description: |
        De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters.** **Zoeken met tekstvelden is case-insensitive.**
      example: Dirk
    Huisletter:
      pattern: ^[a-zA-Z]{1}$
      type: string
      description: |
        Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.
      example: a
    Huisnummer:
      maximum: 99999
      minimum: 1
      type: integer
      description: |
        Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.
      example: 14
    Huisnummertoevoeging:
      pattern: ^[a-zA-Z0-9 \-]{1,4}$
      type: string
      description: |
        Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.
      example: bis
    Postcode:
      pattern: ^[1-9]{1}[0-9]{3}[ ]?[A-Za-z]{2}$
      type: string
      description: |
        De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.
      example: 2341SX
    StraatFilter:
      pattern: ^[a-zA-Z0-9À-ž \-\'\.]{1,80}$|^[a-zA-Z0-9À-ž \-\'\.]{7,79}\*{1}$|^\*{1}[a-zA-Z0-9À-ž
        \-\'\.]{7,79}$
      type: string
      description: |
        Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 7 letters.** **Zoeken met tekstvelden is case-insensitive.**
      example: Tulpstraat
    NummeraanduidingIdentificatie:
      pattern: ^[0-9]{16}$
      type: string
      description: |
        Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.
      example: "0518200000366054"
    GbaGeboorteBeperkt:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/GbaDatum'
    Waardetabel:
      type: object
      properties:
        code:
          pattern: ^[a-zA-Z0-9 \.]+$
          type: string
          example: "6030"
        omschrijving:
          pattern: ^[a-zA-Z0-9À-ž \'\,\(\)\.\-]{1,200}$
          type: string
          example: Nederland
    GbaNaamBasis:
      type: object
      properties:
        voornamen:
          $ref: '#/components/schemas/Voornamen'
        adellijkeTitelPredicaat:
          $ref: '#/components/schemas/AdellijkeTitelPredicaatType'
        voorvoegsel:
          $ref: '#/components/schemas/Voorvoegsel'
        geslachtsnaam:
          $ref: '#/components/schemas/Geslachtsnaam'
    Voornamen:
      maxLength: 200
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$
      type: string
      description: |
        De verzameling namen voor de geslachtsnaam, gescheiden door spaties.
    AdellijkeTitelPredicaatType:
      description: "wordt gevuld op basis van de waarden die voorkomen in de tabel\
        \ 'Adellijke_Titel_Predicaat' uit de Haal-Centraal-BRP-tabellen-bevragen API.\
        \ \nDe property **soort** geeft aan of het een 'predicaat' of een 'titel'\
        \ betreft. \n"
      allOf:
      - $ref: '#/components/schemas/Waardetabel'
      - properties:
          soort:
            $ref: '#/components/schemas/AdellijkeTitelPredicaatSoort'
        example:
          value:
            code: JV
            omschrijving: jonkvrouw
            soort: predicaat
    AdellijkeTitelPredicaatSoort:
      type: string
      enum:
      - titel
      - predicaat
    Voorvoegsel:
      maxLength: 10
      pattern: ^[a-zA-Z \']{1,10}$
      type: string
      example: de
    Geslachtsnaam:
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$
      type: string
      description: |
        De achternaam van een persoon.
      example: Vries
    OpschortingBijhoudingBasis:
      type: object
      properties:
        reden:
          $ref: '#/components/schemas/Waardetabel'
      description: |
        * **reden** - wordt gevuld op basis van de waarden die voorkomen in de tabel 'redenopschortingbijhouding' uit de Haal-Centraal-BRP-tabellen-bevragen API.
    GbaOverlijdenBasis:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/GbaDatum'
    GbaVerblijfplaatsBeperkt:
      type: object
      properties:
        functieAdres:
          $ref: '#/components/schemas/Waardetabel'
        straat:
          $ref: '#/components/schemas/Straat'
        huisnummer:
          $ref: '#/components/schemas/Huisnummer'
        huisletter:
          $ref: '#/components/schemas/Huisletter'
        huisnummertoevoeging:
          $ref: '#/components/schemas/Huisnummertoevoeging'
        aanduidingBijHuisnummer:
          $ref: '#/components/schemas/Waardetabel'
        postcode:
          $ref: '#/components/schemas/Postcode'
        woonplaats:
          $ref: '#/components/schemas/Woonplaats'
        locatiebeschrijving:
          $ref: '#/components/schemas/Locatiebeschrijving'
        land:
          $ref: '#/components/schemas/Waardetabel'
        regel1:
          $ref: '#/components/schemas/Regel1'
        regel2:
          $ref: '#/components/schemas/Regel2'
        regel3:
          $ref: '#/components/schemas/Regel3'
    Straat:
      maxLength: 80
      type: string
      example: Tulpstraat
    Woonplaats:
      title: woonplaats naam
      pattern: ^[a-zA-Z0-9À-ž \(\)\,\.\-\']{1,80}$
      type: string
      description: |
        Een woonplaats is een gedeelte van het grondgebied van de gemeente met een naam.
      example: Duiven
    Locatiebeschrijving:
      maxLength: 35
      type: string
      description: |
        Omschrijving van de ligging van een verblijfsobject, standplaats of ligplaats.
      example: Naast de derde brug
    Regel1:
      maxLength: 40
      type: string
      description: |
        Het eerste deel van een buitenlands adres. Vaak is dit een combinatie van de straat en huisnummer.
      example: 1600 Pennsylvania Avenue NW
    Regel2:
      maxLength: 50
      type: string
      description: |
        Het tweede deel van een buitenlands adres. Vaak is dit een combinatie van woonplaats eventueel in combinatie met de postcode.
      example: Washington, DC 20500
    Regel3:
      maxLength: 35
      type: string
      description: |
        Het derde deel van een buitenlands adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.
      example: Selangor
    GbaDatum:
      pattern: ^[0-9]{8}$
      type: string
      example: "20180700"
    GbaInOnderzoek:
      required:
      - aanduidingGegevensInOnderzoek
      - datumIngangOnderzoek
      type: object
      properties:
        aanduidingGegevensInOnderzoek:
          pattern: ^[0-9]{6}$
          type: string
        datumIngangOnderzoek:
          $ref: '#/components/schemas/GbaDatum'
    GbaUitsluitingKiesrecht:
      type: object
      properties:
        uitgeslotenVanKiesrecht:
          type: boolean
          example: true
        einddatum:
          $ref: '#/components/schemas/GbaDatum'
    GbaEuropeesKiesrecht:
      type: object
      properties:
        aanduiding:
          $ref: '#/components/schemas/Waardetabel'
        einddatumUitsluiting:
          $ref: '#/components/schemas/GbaDatum'
      description: |
        * **aanduiding** - Geeft aan of persoon een oproep moet ontvangen voor verkiezingen voor het Europees parlement. Wordt gevuld op basis van de waarden die voorkomen in de tabel 'Europees_Kiesrecht' uit de Haal-Centraal-BRP-tabellen-bevragen API.
    GbaNaamPersoon:
      allOf:
      - $ref: '#/components/schemas/GbaNaamBasis'
      - properties:
          aanduidingNaamgebruik:
            $ref: '#/components/schemas/Waardetabel'
    GbaNationaliteit:
      type: object
      properties:
        aanduidingBijzonderNederlanderschap:
          pattern: ^(B|V)$
          type: string
        datumIngangGeldigheid:
          $ref: '#/components/schemas/GbaDatum'
        nationaliteit:
          $ref: '#/components/schemas/Waardetabel'
        redenOpname:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/GbaInOnderzoek'
    GbaGeboorte:
      allOf:
      - $ref: '#/components/schemas/GbaGeboorteBeperkt'
      - type: object
        properties:
          land:
            $ref: '#/components/schemas/Waardetabel'
          plaats:
            $ref: '#/components/schemas/Waardetabel'
    GbaOpschortingBijhouding:
      allOf:
      - $ref: '#/components/schemas/OpschortingBijhoudingBasis'
      - type: object
        properties:
          datum:
            $ref: '#/components/schemas/GbaDatum'
        description: |
          * **datum**: de datum waarop de bijhouding van de persoonsgegevens is gestaakt.
    GbaOverlijden:
      allOf:
      - $ref: '#/components/schemas/GbaOverlijdenBasis'
      - type: object
        properties:
          land:
            $ref: '#/components/schemas/Waardetabel'
          plaats:
            $ref: '#/components/schemas/Waardetabel'
          inOnderzoek:
            $ref: '#/components/schemas/GbaInOnderzoek'
    GbaVerblijfplaats:
      type: object
      properties:
        regel1:
          $ref: '#/components/schemas/Regel1'
        regel2:
          $ref: '#/components/schemas/Regel2'
        regel3:
          $ref: '#/components/schemas/Regel3'
        adresseerbaarObjectIdentificatie:
          $ref: '#/components/schemas/AdresseerbaarObjectIdentificatie'
        nummeraanduidingIdentificatie:
          $ref: '#/components/schemas/NummeraanduidingIdentificatie'
        functieAdres:
          $ref: '#/components/schemas/Waardetabel'
        woonplaats:
          $ref: '#/components/schemas/Woonplaats'
        straat:
          $ref: '#/components/schemas/Straat'
        huisnummer:
          $ref: '#/components/schemas/Huisnummer'
        huisletter:
          $ref: '#/components/schemas/Huisletter'
        huisnummertoevoeging:
          $ref: '#/components/schemas/Huisnummertoevoeging'
        aanduidingBijHuisnummer:
          $ref: '#/components/schemas/Waardetabel'
        postcode:
          $ref: '#/components/schemas/Postcode'
        locatiebeschrijving:
          $ref: '#/components/schemas/Locatiebeschrijving'
        land:
          $ref: '#/components/schemas/Waardetabel'
        datumIngangGeldigheid:
          $ref: '#/components/schemas/GbaDatum'
        datumAanvangAdreshouding:
          $ref: '#/components/schemas/GbaDatum'
        datumAanvangAdresBuitenland:
          $ref: '#/components/schemas/GbaDatum'
        naamOpenbareRuimte:
          $ref: '#/components/schemas/NaamOpenbareRuimte'
        inOnderzoek:
          $ref: '#/components/schemas/GbaInOnderzoek'
    AdresseerbaarObjectIdentificatie:
      pattern: ^[0-9]{16}$
      type: string
      description: |
        De verblijfplaats van de persoon kan een ligplaats, een standplaats of een verblijfsobject zijn.
      example: "0226010000038820"
    NaamOpenbareRuimte:
      maxLength: 80
      type: string
    GbaImmigratie:
      type: object
      properties:
        datumVestigingInNederland:
          $ref: '#/components/schemas/GbaDatum'
        landVanwaarIngeschreven:
          $ref: '#/components/schemas/Waardetabel'
      description: |
        Gegevens over het het immigratie van een persoon.
          * **landVanWaarIngeschreven** : het land waar de persoon woonde voor (her)vestiging in Nederland.
    GbaVerblijfstitel:
      type: object
      properties:
        aanduiding:
          $ref: '#/components/schemas/Waardetabel'
        datumEinde:
          $ref: '#/components/schemas/GbaDatum'
        datumIngang:
          $ref: '#/components/schemas/GbaDatum'
        inOnderzoek:
          $ref: '#/components/schemas/GbaInOnderzoek'
      description: |
        Gegevens over de verblijfsrechtelijke status van de persoon.
        * **datumEinde**: Datum waarop de geldigheid van de gegevens over de verblijfstitel is beëindigd.
        * **datumIngang**: Datum waarop de gegevens over de verblijfstitel geldig zijn geworden.
        * **aanduiding** : Verblijfstiteltabel die aangeeft over welke verblijfsrechtelijke status de persoon beschikt.
    GbaKind:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        inOnderzoek:
          $ref: '#/components/schemas/GbaInOnderzoek'
        naam:
          $ref: '#/components/schemas/GbaNaamBasis'
        geboorte:
          $ref: '#/components/schemas/GbaGeboorte'
    GbaOuder:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geslacht:
          $ref: '#/components/schemas/Waardetabel'
        ouderAanduiding:
          $ref: '#/components/schemas/OuderAanduiding'
        datumIngangFamilierechtelijkeBetrekking:
          $ref: '#/components/schemas/GbaDatum'
        naam:
          $ref: '#/components/schemas/GbaNaamBasis'
        inOnderzoek:
          $ref: '#/components/schemas/GbaInOnderzoek'
        geboorte:
          $ref: '#/components/schemas/GbaGeboorte'
      description: |
        Gegevens over de ouder van de persoon.
        * **datumIngangFamilierechtelijkeBetrekking** - De datum waarop de familierechtelijke betrekking is ontstaan.
    OuderAanduiding:
      pattern: ^[1|2]$
      type: string
      example: "1"
    GbaPartner:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geslacht:
          $ref: '#/components/schemas/Waardetabel'
        soortVerbintenis:
          $ref: '#/components/schemas/Waardetabel'
        naam:
          $ref: '#/components/schemas/GbaNaamBasis'
        geboorte:
          $ref: '#/components/schemas/GbaGeboorte'
        inOnderzoek:
          $ref: '#/components/schemas/GbaInOnderzoek'
        aangaanHuwelijkPartnerschap:
          $ref: '#/components/schemas/GbaAangaanHuwelijkPartnerschap'
        ontbindingHuwelijkPartnerschap:
          $ref: '#/components/schemas/GbaOntbindingHuwelijkPartnerschap'
    GbaAangaanHuwelijkPartnerschap:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/GbaDatum'
        land:
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/GbaInOnderzoek'
      description: "Gegevens over de voltrekking van het huwelijk of het aangaan van\
        \ het geregistreerd partnerschap.\n* **datum** - De datum waarop het huwelijk\
        \ is voltrokken of het partnerschap is aangegaan. \n* **land** - Het land\
        \ waar het huwelijk is voltrokken of het partnerschap is aangegaan. Wordt\
        \ gevuld op basis van de waarden die voorkomen in de tabel 'Landen' uit de\
        \ Haal-Centraal-BRP-tabellen-bevragen API.\n* **plaats** - De gemeente waar\
        \ het huwelijk is voltrokken of het partnerschap is aangegaan. Wordt gevuld\
        \ op basis van de waarden die voorkomen in de tabel \"Gemeenten\" voor een\
        \ gemeente in Nederland of de omschrijving van een buitenlandse plaats.\n"
    GbaOntbindingHuwelijkPartnerschap:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/GbaDatum'
  headers:
    api_version:
      schema:
        pattern: ^[1-9][0-9]{0,2}.[0-9]{1,3}.[0-9]{1,3}$
        type: string
        description: Geeft een specifieke API-versie aan in de context van een specifieke
          aanroep.
        example: 1.0.0
    warning:
      schema:
        maxLength: 500
        type: string
        description: zie RFC 7234. In het geval een major versie wordt uitgefaseerd,
          gebruiken we warn-code 299 ("Miscellaneous Persistent Warning") en het API
          end-point (inclusief versienummer) als de warn-agent van de warning, gevolgd
          door de warn-text met de human-readable waarschuwing
        example: '299 https://service.../api/.../v1 "Deze versie van de API is verouderd
          en zal uit dienst worden genomen op 2018-02-01. Raadpleeg voor meer informatie
          hier de documentatie: https://omgevingswet.../api/.../v1".'
    X_Rate_Limit_Limit:
      schema:
        type: integer
    X_Rate_Limit_Remaining:
      schema:
        type: integer
    X_Rate_Limit_Reset:
      schema:
        type: integer
