openapi: 3.1.0
info:
  title: referentie implementatie van een met OAS 3.1 gespecificeerde BRP informatie api contract
  description: |
    Dit document specificeert het API contract van een BRP informatie API mbv OAS 3.1.
    Voor het opstellen van het API contract wordt zoveel mogelijk gebruik gemaakt van bestaande specificaties van schema componenten (beheerd in o.a. de brp en brp-api mappen).
    Dit document kan worden gebruikt als referentie voor het opstellen van API contracten voor BRP informatie APIs.
  version: 1.0.0
  contact: {}
servers:
  - url: https://api.example.com
    description: |
      De server waarop de API draait.
tags:
  - name: Informatie API
    description: |
      API voor het stellen van informatie vragen.
paths:
  /informatie-api:
    get:
      operationId: getInformatieApiNotSecure
      summary: Haal data niet-secure op
      description: |
        Parameters worden bij een GET request opgenomen als query string parameters in een URL.
        URLs worden standaard gelogd en als query string parameters (privacy) gevoelige informatie bevat, dan worden deze ook gelogd wat kan leiden tot het lekken van gevoelige informatie.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformatieApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '412':
          $ref: '#/components/responses/412'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
        default:
          $ref: '#/components/responses/500'
      tags:
        - Informatie API
    post:
      operationId: getInformatieApiSecure
      summary: Haal data secure op
      description: |
        Parameters worden bij een POST request opgenomen in de body van het request.
        Hierdoor worden de parameters niet gelogd en is de privacy gevoelige informatie beter beschermd.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformatieApiRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformatieApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
        '410':
          $ref: '#/components/responses/410'
        '412':
          $ref: '#/components/responses/412'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
        default:
          $ref: '#/components/responses/500'
      tags:
        - Informatie API
components:
  schemas:
    InformatieApiRequest:
      type: object
      properties:
        adresseerbaarObjectIdentificatie:
          $ref: '#/components/schemas/AdresseerbaarObjectIdentificatieFilter'
        datum:
          $ref: '#/components/schemas/DatumFilter'
        field:
          $ref: '#/components/schemas/Field'
        gemeenteVanInschrijving:
          $ref: '#/components/schemas/GemeenteVanInschrijving'
        geslacht:
          $ref: '#/components/schemas/GeslachtFilter'
        geslachtsnaam:
          $ref: '#/components/schemas/GeslachtsnaamFilter'
        nummeraanduidingIdentificatie:
          $ref: '#/components/schemas/NummeraanduidingIdentificatieFilter'
        straat:
          $ref: '#/components/schemas/StraatFilter'
        voornamenOptioneel:
          $ref: '#/components/schemas/VoornamenOptioneelFilter'
        voornamenVerplicht:
          $ref: '#/components/schemas/VoornamenVerplichtFilter'
        voorvoegsel:
          $ref: '#/components/schemas/VoorvoegselFilter'
    InformatieApiResponse:
      type: object
      properties:
        adressering:
          $ref: '#/components/schemas/AdresseringResponse'
        datum:
          $ref: '#/components/schemas/DatumsResponse'
        geboorte:
          $ref: '#/components/schemas/GeboorteResponse'
        geheimhouding:
          $ref: '#/components/schemas/GeheimhoudingPersoonsgegevens'
        geslacht:
          $ref: '#/components/schemas/Geslachtsaanduiding'
        gezagsrelatie:
          $ref: '#/components/schemas/AbstractGezagsrelatie'
        immigratie:
          $ref: '#/components/schemas/Immigratie'
        kiesrecht:
          $ref: '#/components/schemas/KiesrechtResponse'
        kind:
          $ref: '#/components/schemas/Kind'
        naam:
          $ref: '#/components/schemas/NaamResponse'
        nationaliteit:
          $ref: '#/components/schemas/AbstractNationaliteit'
        opschortingBijhouding:
          $ref: '#/components/schemas/OpschortingBijhouding'
        ouder:
          $ref: '#/components/schemas/Ouder'
        overlijden:
          $ref: '#/components/schemas/Overlijden'
        partner:
          $ref: '#/components/schemas/Partner'
        verblijfplaats:
          $ref: '#/components/schemas/AbstractVerblijfplaats'
        verblijfstitel:
          $ref: '#/components/schemas/Verblijfstitel'
        verificatie:
          $ref: '#/components/schemas/Verificatie'
    AdresseringResponse:
      type: object
      properties:
        adressering:
          $ref: '#/components/schemas/Adressering'
        beperkt:
          $ref: '#/components/schemas/AdresseringBeperkt'
    DatumsResponse:
      type: object
      properties:
        polymorfDatum:
          $ref: '#/components/schemas/AbstractDatum'
        datum:
          $ref: '#/components/schemas/Datum'
        periode:
          $ref: '#/components/schemas/Periode'
    GeboorteResponse:
      type: object
      properties:
        basis:
          $ref: '#/components/schemas/GeboorteBasis'
        beperkt:
          $ref: '#/components/schemas/GeboorteBeperkt'
        geboorte:
          $ref: '#/components/schemas/Geboorte'
        leeftijd:
          $ref: '#/components/schemas/Leeftijd'
    KiesrechtResponse:
      type: object
      properties:
        europeesKiesrecht:
          $ref: '#/components/schemas/EuropeesKiesrecht'
        uitsluitingKiesrecht:
          $ref: '#/components/schemas/UitsluitingKiesrecht'
    NaamResponse:
      type: object
      properties:
        basis:
          $ref: '#/components/schemas/NaamBasis'
        naam:
          $ref: '#/components/schemas/NaamPersoon'
        beperkt:
          $ref: '#/components/schemas/NaamPersoonBeperkt'
        volledigeNaam:
          $ref: '#/components/schemas/VolledigeNaam'
    Foutbericht:
      type: object
      description: Terugmelding bij een fout. JSON representatie in lijn met [RFC7807](https://tools.ietf.org/html/rfc7807).
      properties:
        type:
          description: Link naar meer informatie over deze fout
          type: string
          format: uri
        title:
          description: Beschrijving van de fout
          type: string
          pattern: ^[a-zA-Z0-9À-ž \.\-]{1,80}$
        status:
          type: integer
          minimum: 100
          maximum: 600
          description: Http status code
        detail:
          description: Details over de fout
          type: string
          pattern: ^[a-zA-Z0-9À-ž \.\-\(\),]{1,200}$
        instance:
          description: Uri van de aanroep die de fout heeft veroorzaakt
          type: string
          format: uri
        code:
          description: Systeemcode die het type fout aangeeft
          type: string
          pattern: ^[a-zA-Z0-9]{1,25}$
    Adresregel1:
      type: string
      maxLength: 40
      description: |
        Het eerste deel van een adres is een combinatie van de straat en huisnummer.
      examples:
        - binnenlandsAdres: null
          value: Kappeyne v d Cappellostr 26A-3
        - buitenlandsAdres: null
          value: 1600 Pennsylvania Avenue NW
    Adresregel2:
      type: string
      maxLength: 50
      description: |
        Het tweede deel van een adres is een combinatie van woonplaats eventueel in combinatie met de postcode.
      examples:
        - binnenlandsAdres: null
          value: 1234AA Nootdorp
        - buitenlandsAdres: null
          value: Washington, DC 20500
    Adresregel3:
      type: string
      maxLength: 35
      description: |
        Het derde deel van een adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.
      example: Selangor
    Waardetabel:
      type: object
      properties:
        code:
          type: string
          pattern: ^[a-zA-Z0-9 \.]+$
          example: '6030'
        omschrijving:
          type: string
          pattern: ^[a-zA-Z0-9À-ž \'\.\-\(\),]{1,200}$
          example: Nederland
    IndicatieVastgesteldVerblijftNietOpAdres:
      description: |
        Geeft aan dat is vastgesteld dat de persoon niet meer op de geregistreerde adres/locatie staat ingeschreven.
      type: boolean
    AdresseringBasis:
      type: object
      description: ''
      properties:
        adresregel1:
          $ref: '#/components/schemas/Adresregel1'
        adresregel2:
          $ref: '#/components/schemas/Adresregel2'
        adresregel3:
          $ref: '#/components/schemas/Adresregel3'
        land:
          $ref: '#/components/schemas/Waardetabel'
        indicatieVastgesteldVerblijftNietOpAdres:
          $ref: '#/components/schemas/IndicatieVastgesteldVerblijftNietOpAdres'
    Aanhef:
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,650}$
      description: |
        Kun je gebruiken als aanhef in een brief gericht aan persoon.
      example: Hoogwelgeboren heer
    Aanschrijfwijze:
      type: object
      description: |
        Samengestelde naam en aanspreekvorm die je kunt gebruiken in de communicatie met de persoon.
      properties:
        naam:
          type: string
          pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,650}$
          example: H.W. baron van den Aedel
        aanspreekvorm:
          description: |
            Deze regel moet als aparte regel boven de samengestelde naam worden geplaatst. Komt alleen voor bij personen met een adellijke titel of predicaat.
          type: string
          pattern: ^[a-zA-Z ]{1,25}$
          example: De hoogwelgeboren heer
    GebruikInLopendeTekst:
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,650}$
      description: |
        Naam van persoon die je kunt gebruiken als je in lopende tekst (bijvoorbeeld in een brief) aan persoon refereert.
      example: baron Van den Aedel
    AbstractDatum:
      type: object
      required:
        - type
        - langFormaat
      properties:
        type:
          type: string
        langFormaat:
          type: string
          pattern: ^[a-z0-9 ]{1,17}$
      discriminator:
        propertyName: type
        mapping:
          Datum: '#/components/schemas/VolledigeDatum'
          DatumOnbekend: '#/components/schemas/DatumOnbekend'
          JaarDatum: '#/components/schemas/JaarDatum'
          JaarMaandDatum: '#/components/schemas/JaarMaandDatum'
      example:
        type: Datum
        datum: '2018-07-01'
        langFormaat: 1 juli 2018
    VolledigeDatum:
      description: Datum conform iso8601
      allOf:
        - $ref: '#/components/schemas/AbstractDatum'
        - type: object
          properties:
            datum:
              type: string
              format: date
      required:
        - datum
      example:
        type: Datum
        datum: '2018-07-01'
        langFormaat: 1 juli 2018
    DatumOnbekend:
      description: representatie voor een volledig onbekend datum
      allOf:
        - $ref: '#/components/schemas/AbstractDatum'
        - type: object
          properties:
            onbekend:
              type: boolean
              default: true
      required:
        - onbekend
      example:
        type: DatumOnbekend
        onbekend: true
        langFormaat: onbekend
    Jaar:
      type: integer
      format: int32
      minimum: 1
      maximum: 9999
    JaarDatum:
      description: representatie voor een datum waarvan maand en dag onbekend zijn
      allOf:
        - $ref: '#/components/schemas/AbstractDatum'
        - type: object
          properties:
            jaar:
              $ref: '#/components/schemas/Jaar'
      required:
        - jaar
      example:
        type: JaarDatum
        jaar: 2018
        langFormaat: 2018
    Maand:
      type: integer
      format: int32
      minimum: 1
      maximum: 12
    JaarMaandDatum:
      description: representatie voor een datum waarvan de dag onbekend is
      allOf:
        - $ref: '#/components/schemas/AbstractDatum'
        - type: object
          properties:
            jaar:
              $ref: '#/components/schemas/Jaar'
            maand:
              $ref: '#/components/schemas/Maand'
      required:
        - jaar
        - maand
      example:
        type: JaarMaandDatum
        jaar: 2018
        maand: 7
        langFormaat: juli 2018
    AdresseringInOnderzoek:
      description: |
        Geeft aan welke gegevens over de adressering in onderzoek zijn.
      type: object
      properties:
        aanhef:
          type: boolean
        adresregel1:
          type: boolean
        adresregel2:
          type: boolean
        adresregel3:
          type: boolean
        land:
          type: boolean
        aanschrijfwijze:
          type: boolean
        gebruikInLopendeTekst:
          type: boolean
        datumIngangOnderzoekPersoon:
          $ref: '#/components/schemas/AbstractDatum'
        datumIngangOnderzoekPartner:
          $ref: '#/components/schemas/AbstractDatum'
        datumIngangOnderzoekVerblijfplaats:
          $ref: '#/components/schemas/AbstractDatum'
    Adressering:
      allOf:
        - $ref: '#/components/schemas/AdresseringBasis'
        - properties:
            aanhef:
              $ref: '#/components/schemas/Aanhef'
            aanschrijfwijze:
              $ref: '#/components/schemas/Aanschrijfwijze'
            gebruikInLopendeTekst:
              $ref: '#/components/schemas/GebruikInLopendeTekst'
            inOnderzoek:
              $ref: '#/components/schemas/AdresseringInOnderzoek'
    AdresseringInOnderzoekBeperkt:
      description: |
        Geeft aan welke gegevens over de adressering in onderzoek zijn.
      type: object
      properties:
        adresregel1:
          type: boolean
        adresregel2:
          type: boolean
        adresregel3:
          type: boolean
        land:
          type: boolean
        datumIngangOnderzoekVerblijfplaats:
          $ref: '#/components/schemas/AbstractDatum'
    AdresseringBeperkt:
      allOf:
        - $ref: '#/components/schemas/AdresseringBasis'
        - properties:
            inOnderzoek:
              $ref: '#/components/schemas/AdresseringInOnderzoekBeperkt'
    Datum:
      type: string
      format: date
      example: '1964-09-24'
      description: |
        Datum conform ISO-8601
    Periode:
      type: object
      properties:
        datumVan:
          type: string
          format: date
          description: |
            De begindatum van de periode.
          example: '2020-01-01'
        datumTot:
          type: string
          format: date
          description: |
            De einddatum van de periode.
          example: '2021-01-01'
    GeboorteBasis:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/AbstractDatum'
          description: |
            Datum waarop de persoon is geboren.
    InOnderzoek:
      type: object
      properties:
        datumIngangOnderzoek:
          $ref: '#/components/schemas/AbstractDatum'
    GeboorteInOnderzoekBeperkt:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            datum:
              type: boolean
    GeboorteBeperkt:
      allOf:
        - $ref: '#/components/schemas/GeboorteBasis'
        - type: object
          properties:
            inOnderzoek:
              $ref: '#/components/schemas/GeboorteInOnderzoekBeperkt'
    GeboorteInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            datum:
              type: boolean
            land:
              type: boolean
            plaats:
              type: boolean
    Geboorte:
      description: |
        Gegevens over de geboorte.
        * **datum** - datum waarop de persoon is geboren.
        * **land** - land waar de persoon is geboren. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
        * **plaats** - gemeente waar de persoon is geboren. Wordt gevuld met waarden uit de landelijke tabel "Gemeenten" voor een gemeente in Nederland of als de persoon is geboren buiten Nederland de omschrijving van een buitenlandse plaatsnaam of aanduiding.
      allOf:
        - $ref: '#/components/schemas/GeboorteBasis'
        - type: object
          properties:
            land:
              $ref: '#/components/schemas/Waardetabel'
            plaats:
              $ref: '#/components/schemas/Waardetabel'
            inOnderzoek:
              $ref: '#/components/schemas/GeboorteInOnderzoek'
    Leeftijd:
      type: integer
      description: |
        Leeftijd in jaren op het moment van bevragen.
      example: 34
      minimum: 0
      maximum: 150
    GeheimhoudingPersoonsgegevens:
      description: |
        Indicatie dat persoonsgegevens niet mogen worden verstrekt aan derden / maatschappelijke instellingen.
      type: boolean
    Geslachtsaanduiding:
      allOf:
        - $ref: '#/components/schemas/Waardetabel'
        - example:
            code: M
            omschrijving: man
    AbstractGezagsrelatie:
      type: object
      required:
        - type
        - minderjarige
      properties:
        type:
          type: string
        minderjarige:
          $ref: '#/components/schemas/Minderjarige'
        inOnderzoek:
          type: boolean
          description: Geeft aan dat de gezagsrelatie in onderzoek is.
      discriminator:
        propertyName: type
        mapping:
          TweehoofdigOuderlijkGezag: '#/components/schemas/TweehoofdigOuderlijkGezag'
          EenhoofdigOuderlijkGezag: '#/components/schemas/EenhoofdigOuderlijkGezag'
          GezamenlijkGezag: '#/components/schemas/GezamenlijkGezag'
          Voogdij: '#/components/schemas/Voogdij'
          TijdelijkGeenGezag: '#/components/schemas/TijdelijkGeenGezag'
          GezagNietTeBepalen: '#/components/schemas/GezagNietTeBepalen'
      example:
        type: TweehoofdigOuderlijkGezag
        ouders:
          - burgerservicenummer: '999998870'
          - burgerservicenummer: '999998882'
        minderjarige:
          burgerservicenummer: '999998894'
    Burgerservicenummer:
      type: string
      pattern: ^[0-9]{9}$
      example: '555555021'
    VolledigeNaam:
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,450}$
      description: |
        Combinatie van predicaat, voornamen, adellijke titel, voorvoegsels en geslachtsnaam, zonder toevoeging van een eventuele partnernaam.
      example: Pieter Jan de Vries
    NaamVolledigeNaam:
      type: object
      properties:
        volledigeNaam:
          $ref: '#/components/schemas/VolledigeNaam'
    GezagOuder:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        naam:
          $ref: '#/components/schemas/NaamVolledigeNaam'
      required:
        - burgerservicenummer
    TweehoofdigOuderlijkGezag:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            ouders:
              type: array
              items:
                $ref: '#/components/schemas/GezagOuder'
              minItems: 2
              maxItems: 2
    EenhoofdigOuderlijkGezag:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            ouder:
              $ref: '#/components/schemas/GezagOuder'
    Derde:
      type: object
      required:
        - type
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          BekendeDerde: '#/components/schemas/BekendeDerde'
          OnbekendeDerde: '#/components/schemas/OnbekendeDerde'
    BekendeDerde:
      allOf:
        - $ref: '#/components/schemas/Derde'
        - type: object
          properties:
            burgerservicenummer:
              $ref: '#/components/schemas/Burgerservicenummer'
            naam:
              $ref: '#/components/schemas/NaamVolledigeNaam'
    OnbekendeDerde:
      allOf:
        - $ref: '#/components/schemas/Derde'
    GezamenlijkGezag:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            ouder:
              $ref: '#/components/schemas/GezagOuder'
            derde:
              $ref: '#/components/schemas/Derde'
    Voogdij:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            derden:
              type: array
              items:
                $ref: '#/components/schemas/BekendeDerde'
              minItems: 0
              maxItems: 2
    Toelichting:
      type: string
      pattern: ^[a-zA-Z0-9À-ž \/\;\:\.\-\?\(\)]{1,400}$
    TijdelijkGeenGezag:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            toelichting:
              $ref: '#/components/schemas/Toelichting'
    GezagNietTeBepalen:
      allOf:
        - $ref: '#/components/schemas/AbstractGezagsrelatie'
        - type: object
          properties:
            toelichting:
              $ref: '#/components/schemas/Toelichting'
    Minderjarige:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        naam:
          $ref: '#/components/schemas/NaamVolledigeNaam'
        leeftijd:
          $ref: '#/components/schemas/Leeftijd'
      required:
        - burgerservicenummer
    ImmigratieBasis:
      type: object
      properties:
        landVanwaarIngeschreven:
          description: |
            het land waar de persoon woonde voor (her)vestiging in Nederland.
          $ref: '#/components/schemas/Waardetabel'
    ImmigratieInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            datumVestigingInNederland:
              type: boolean
            landVanwaarIngeschreven:
              type: boolean
            vanuitVerblijfplaatsOnbekend:
              type: boolean
            indicatieVestigingVanuitBuitenland:
              type: boolean
    Immigratie:
      allOf:
        - $ref: '#/components/schemas/ImmigratieBasis'
        - type: object
          properties:
            datumVestigingInNederland:
              $ref: '#/components/schemas/AbstractDatum'
            vanuitVerblijfplaatsOnbekend:
              description: |
                Geeft aan dat de persoon zich vanuit het buitenland heeft ingeschreven.
              type: boolean
            indicatieVestigingVanuitBuitenland:
              description: |
                Geeft aan dat de persoon is teruggekeerd uit een situatie van onbekende verblijfplaats
              type: boolean
            inOnderzoek:
              $ref: '#/components/schemas/ImmigratieInOnderzoek'
    EuropeesKiesrechtBasis:
      type: object
      properties:
        aanduiding:
          description: |
            Geeft aan of persoon een oproep moet ontvangen voor verkiezingen voor het Europees parlement. Wordt gevuld met waarden voor 'Europees_Kiesrecht' in 'tabelwaarden.csv'.
          $ref: '#/components/schemas/Waardetabel'
    EuropeesKiesrecht:
      allOf:
        - $ref: '#/components/schemas/EuropeesKiesrechtBasis'
        - type: object
          properties:
            einddatumUitsluiting:
              $ref: '#/components/schemas/AbstractDatum'
    UitsluitingKiesrechtBasis:
      type: object
      properties:
        uitgeslotenVanKiesrecht:
          type: boolean
          example: true
    UitsluitingKiesrecht:
      allOf:
        - $ref: '#/components/schemas/UitsluitingKiesrechtBasis'
        - type: object
          properties:
            einddatum:
              $ref: '#/components/schemas/AbstractDatum'
    KindBasis:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
    KindInOnderzoek:
      description: |
        Geeft aan of de gegevens over het kind van de persoon in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            burgerservicenummer:
              type: boolean
    Voornamen:
      description: |
        De verzameling namen voor de geslachtsnaam, gescheiden door spaties.
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$
      maxLength: 200
      example: Pieter Jan
    AdellijkeTitelPredicaatSoort:
      type: string
      enum:
        - titel
        - predicaat
    AdellijkeTitelPredicaatType:
      description: |
        Wordt gevuld met waarden uit de landelijke tabel 'Adellijke titel/predicaat'. De property soort geeft aan of het een 'predicaat' of een 'titel' is.
      allOf:
        - $ref: '#/components/schemas/Waardetabel'
        - properties:
            soort:
              $ref: '#/components/schemas/AdellijkeTitelPredicaatSoort'
          example:
            code: JV
            omschrijving: jonkvrouw
            soort: predicaat
    Voorvoegsel:
      type: string
      pattern: ^[a-zA-Z \']{1,10}$
      maxLength: 10
      example: de
    Geslachtsnaam:
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$
      description: |
        De achternaam van een persoon.
      example: Vries
    Voorletters:
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.]{1,40}$
      description: |
        De voorletters van de persoon, afgeleid van de voornamen.
      example: P.J.
    NaamInOnderzoek:
      description: |
        Geeft aan welke gegevens over de naam in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            voornamen:
              type: boolean
            adellijkeTitelPredicaat:
              type: boolean
            voorvoegsel:
              type: boolean
            geslachtsnaam:
              type: boolean
            voorletters:
              type: boolean
    NaamGerelateerde:
      type: object
      properties:
        voornamen:
          $ref: '#/components/schemas/Voornamen'
        adellijkeTitelPredicaat:
          $ref: '#/components/schemas/AdellijkeTitelPredicaatType'
        voorvoegsel:
          $ref: '#/components/schemas/Voorvoegsel'
        geslachtsnaam:
          $ref: '#/components/schemas/Geslachtsnaam'
        voorletters:
          $ref: '#/components/schemas/Voorletters'
        inOnderzoek:
          $ref: '#/components/schemas/NaamInOnderzoek'
    Kind:
      allOf:
        - $ref: '#/components/schemas/KindBasis'
        - type: object
          properties:
            inOnderzoek:
              $ref: '#/components/schemas/KindInOnderzoek'
            naam:
              $ref: '#/components/schemas/NaamGerelateerde'
            geboorte:
              $ref: '#/components/schemas/Geboorte'
    NaamBasis:
      type: object
      properties:
        voornamen:
          $ref: '#/components/schemas/Voornamen'
        adellijkeTitelPredicaat:
          $ref: '#/components/schemas/AdellijkeTitelPredicaatType'
        voorvoegsel:
          $ref: '#/components/schemas/Voorvoegsel'
        geslachtsnaam:
          $ref: '#/components/schemas/Geslachtsnaam'
        voorletters:
          $ref: '#/components/schemas/Voorletters'
        volledigeNaam:
          $ref: '#/components/schemas/VolledigeNaam'
    NaamPersoonInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/NaamInOnderzoek'
        - type: object
          properties:
            aanduidingNaamgebruik:
              type: boolean
            volledigeNaam:
              type: boolean
    NaamPersoon:
      description: |
        Gegevens over de naam van de persoon.
      allOf:
        - $ref: '#/components/schemas/NaamBasis'
        - properties:
            aanduidingNaamgebruik:
              $ref: '#/components/schemas/Waardetabel'
            inOnderzoek:
              $ref: '#/components/schemas/NaamPersoonInOnderzoek'
    NaamPersoonInOnderzoekBeperkt:
      allOf:
        - $ref: '#/components/schemas/NaamInOnderzoek'
        - type: object
          properties:
            volledigeNaam:
              type: boolean
    NaamPersoonBeperkt:
      description: |
        Gegevens over de naam van de persoon.
      allOf:
        - $ref: '#/components/schemas/NaamBasis'
        - properties:
            inOnderzoek:
              $ref: '#/components/schemas/NaamPersoonInOnderzoekBeperkt'
    AbstractNationaliteit:
      type: object
      required:
        - type
      properties:
        type:
          type: string
        redenOpname:
          description: |
            De reden op grond waarvan de persoon de nationaliteit gekregen heeft. Wordt gevuld met waarden uit de landelijke tabel 'Reden opnemen/beëindigen nationaliteit'.
          $ref: '#/components/schemas/Waardetabel'
        datumIngangGeldigheid:
          $ref: '#/components/schemas/AbstractDatum'
      discriminator:
        propertyName: type
        mapping:
          Nationaliteit: '#/components/schemas/NationaliteitBekend'
          BehandeldAlsNederlander: '#/components/schemas/BehandeldAlsNederlander'
          VastgesteldNietNederlander: '#/components/schemas/VastgesteldNietNederlander'
          Staatloos: '#/components/schemas/Staatloos'
          NationaliteitOnbekend: '#/components/schemas/NationaliteitOnbekend'
    NationaliteitInOnderzoek:
      description: |
        Geeft aan welke gegevens over de nationaliteit in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            type:
              type: boolean
            redenOpname:
              type: boolean
    NationaliteitBekendInOnderzoek:
      description: |
        Geeft aan welke gegevens over de nationaliteit in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/NationaliteitInOnderzoek'
        - type: object
          properties:
            nationaliteit:
              type: boolean
    NationaliteitBekend:
      allOf:
        - $ref: '#/components/schemas/AbstractNationaliteit'
        - type: object
          properties:
            nationaliteit:
              description: |
                wordt gevuld met waarden uit de landelijke tabel 'Nationaliteiten'.
              $ref: '#/components/schemas/Waardetabel'
            inOnderzoek:
              $ref: '#/components/schemas/NationaliteitBekendInOnderzoek'
    BijzonderNederlanderschapInOnderzoek:
      description: |
        Geeft aan welke gegevens over de nationaliteit in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            type:
              type: boolean
            redenOpname:
              type: boolean
    BehandeldAlsNederlander:
      allOf:
        - $ref: '#/components/schemas/AbstractNationaliteit'
        - type: object
          properties:
            inOnderzoek:
              $ref: '#/components/schemas/BijzonderNederlanderschapInOnderzoek'
    VastgesteldNietNederlander:
      allOf:
        - $ref: '#/components/schemas/AbstractNationaliteit'
        - type: object
          properties:
            inOnderzoek:
              $ref: '#/components/schemas/BijzonderNederlanderschapInOnderzoek'
    StaatloosInOnderzoek:
      description: |
        Geeft aan welke gegevens over de nationaliteit in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            type:
              type: boolean
            redenOpname:
              type: boolean
    Staatloos:
      allOf:
        - $ref: '#/components/schemas/AbstractNationaliteit'
        - type: object
          properties:
            inOnderzoek:
              $ref: '#/components/schemas/StaatloosInOnderzoek'
    NationaliteitOnbekendInOnderzoek:
      description: |
        Geeft aan welke gegevens over de nationaliteit in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            type:
              type: boolean
            redenOpname:
              type: boolean
    NationaliteitOnbekend:
      allOf:
        - $ref: '#/components/schemas/AbstractNationaliteit'
        - type: object
          properties:
            inOnderzoek:
              $ref: '#/components/schemas/NationaliteitOnbekendInOnderzoek'
    OpschortingBijhoudingBasis:
      type: object
      properties:
        reden:
          $ref: '#/components/schemas/Waardetabel'
    OpschortingBijhouding:
      allOf:
        - $ref: '#/components/schemas/OpschortingBijhoudingBasis'
        - type: object
          properties:
            datum:
              description: |
                De datum waarop de bijhouding van de persoonsgegevens is gestaakt.
              $ref: '#/components/schemas/AbstractDatum'
    OuderAanduiding:
      type: string
      pattern: ^[1|2]$
      example: '1'
    OuderBasis:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geslacht:
          description: |
            wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
          $ref: '#/components/schemas/Waardetabel'
        ouderAanduiding:
          $ref: '#/components/schemas/OuderAanduiding'
    OuderInOnderzoek:
      description: |
        Geeft aan welke gegevens van de de ouder in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            burgerservicenummer:
              type: boolean
            datumIngangFamilierechtelijkeBetrekking:
              type: boolean
            geslacht:
              type: boolean
    Ouder:
      allOf:
        - $ref: '#/components/schemas/OuderBasis'
        - type: object
          properties:
            datumIngangFamilierechtelijkeBetrekking:
              description: |
                De datum waarop de familierechtelijke betrekking is ontstaan.
              $ref: '#/components/schemas/AbstractDatum'
            naam:
              $ref: '#/components/schemas/NaamGerelateerde'
            inOnderzoek:
              $ref: '#/components/schemas/OuderInOnderzoek'
            geboorte:
              $ref: '#/components/schemas/Geboorte'
    OverlijdenBasis:
      type: object
      properties:
        land:
          description: |
            land waar de persoon is overleden. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          description: |
            gemeente waar de persoon is overleden. Wordt gevuld met waarden uit de landelijke tabel "Gemeenten".
          $ref: '#/components/schemas/Waardetabel'
    OverlijdenInOnderzoek:
      description: |
        Geeft aan welke gegevens over het overlijden van de persoon in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            datum:
              type: boolean
            land:
              type: boolean
            plaats:
              type: boolean
    Overlijden:
      allOf:
        - $ref: '#/components/schemas/OverlijdenBasis'
      type: object
      properties:
        datum:
          description: |
            datum waarop de persoon is overleden.
          $ref: '#/components/schemas/AbstractDatum'
        inOnderzoek:
          $ref: '#/components/schemas/OverlijdenInOnderzoek'
    PartnerBasis:
      type: object
      properties:
        burgerservicenummer:
          $ref: '#/components/schemas/Burgerservicenummer'
        geslacht:
          description: |
            wordt gevuld met waarden voor 'Geslacht' in 'tabelwaarden.csv'.
          $ref: '#/components/schemas/Waardetabel'
        soortVerbintenis:
          $ref: '#/components/schemas/Waardetabel'
    PartnerInOnderzoek:
      description: |
        Geeft aan welke gegevens over het huwelijk of het partnerschap in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            burgerservicenummer:
              type: boolean
            geslacht:
              type: boolean
            soortVerbintenis:
              type: boolean
    AangaanHuwelijkPartnerschapBasis:
      type: object
      properties:
        land:
          description: |
            Het land waar het huwelijk is voltrokken of het partnerschap is aangegaan. Wordt gevuld met waarden uit de landelijke tabel 'Landen'.
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          description: |
            De gemeente waar het huwelijk is voltrokken of het partnerschap is aangegaan. Wordt gevuld met waarden uit de landelijke tabel "Gemeenten" voor een gemeente in Nederland of de omschrijving van een buitenlandse plaats.
          $ref: '#/components/schemas/Waardetabel'
    AangaanHuwelijkPartnerschapInOnderzoek:
      description: |
        Geeft aan welke gegevens over het voltrekken van het huwelijk of aangaan van het partnerschap in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            datum:
              type: boolean
            land:
              type: boolean
            plaats:
              type: boolean
    AangaanHuwelijkPartnerschap:
      allOf:
        - $ref: '#/components/schemas/AangaanHuwelijkPartnerschapBasis'
        - type: object
          properties:
            datum:
              description: |
                De datum waarop het huwelijk is voltrokken of het partnerschap is aangegaan.
              $ref: '#/components/schemas/AbstractDatum'
            inOnderzoek:
              $ref: '#/components/schemas/AangaanHuwelijkPartnerschapInOnderzoek'
    OntbindingHuwelijkPartnerschapInOnderzoek:
      description: |
        Geeft aan welke gegevens over het onbinden van het huwelijk of aangaan van het partnerschap in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            datum:
              type: boolean
    OntbindingHuwelijkPartnerschap:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/AbstractDatum'
          description: |
            De datum waarop het huwelijk of het partnerschap is ontbonden.
        inOnderzoek:
          $ref: '#/components/schemas/OntbindingHuwelijkPartnerschapInOnderzoek'
    Partner:
      allOf:
        - $ref: '#/components/schemas/PartnerBasis'
        - type: object
          properties:
            naam:
              $ref: '#/components/schemas/NaamGerelateerde'
            geboorte:
              $ref: '#/components/schemas/Geboorte'
            inOnderzoek:
              $ref: '#/components/schemas/PartnerInOnderzoek'
            aangaanHuwelijkPartnerschap:
              $ref: '#/components/schemas/AangaanHuwelijkPartnerschap'
            ontbindingHuwelijkPartnerschap:
              $ref: '#/components/schemas/OntbindingHuwelijkPartnerschap'
    AbstractVerblijfplaats:
      type: object
      description: |
        Gegevens over het verblijf of de woonlocatie van een persoon.
      required:
        - type
      properties:
        type:
          type: string
        datumIngangGeldigheid:
          $ref: '#/components/schemas/AbstractDatum'
          description: |
            datum waarop de gegevens over de verblijfplaats geldig zijn geworden.
          deprecated: true
      discriminator:
        propertyName: type
        mapping:
          VerblijfplaatsBuitenland: '#/components/schemas/VerblijfplaatsBuitenland'
          Adres: '#/components/schemas/Adres'
          VerblijfplaatsOnbekend: '#/components/schemas/VerblijfplaatsOnbekend'
          Locatie: '#/components/schemas/Locatie'
    Regel1:
      type: string
      maxLength: 40
      description: |
        Het eerste deel van een buitenlands adres. Vaak is dit een combinatie van de straat en huisnummer.
      example: 1600 Pennsylvania Avenue NW
    Regel2:
      type: string
      maxLength: 50
      description: |
        Het tweede deel van een buitenlands adres. Vaak is dit een combinatie van woonplaats eventueel in combinatie met de postcode.
      example: Washington, DC 20500
    Regel3:
      type: string
      maxLength: 35
      description: |
        Het derde deel van een buitenlands adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.
      example: Selangor
    VerblijfadresBuitenlandInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            regel1:
              type: boolean
            regel2:
              type: boolean
            regel3:
              type: boolean
            land:
              type: boolean
    VerblijfadresBuitenland:
      type: object
      properties:
        regel1:
          $ref: '#/components/schemas/Regel1'
        regel2:
          $ref: '#/components/schemas/Regel2'
        regel3:
          $ref: '#/components/schemas/Regel3'
        land:
          $ref: '#/components/schemas/Waardetabel'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfadresBuitenlandInOnderzoek'
    VerblijfplaatsBuitenlandInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            type:
              type: boolean
            datumVan:
              type: boolean
            datumIngangGeldigheid:
              type: boolean
              deprecated: true
    VerblijfplaatsBuitenland:
      allOf:
        - $ref: '#/components/schemas/AbstractVerblijfplaats'
        - type: object
          properties:
            verblijfadres:
              $ref: '#/components/schemas/VerblijfadresBuitenland'
            datumVan:
              $ref: '#/components/schemas/AbstractDatum'
            inOnderzoek:
              $ref: '#/components/schemas/VerblijfplaatsBuitenlandInOnderzoek'
    OfficieleStraatnaam:
      description: |
        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG).
      type: string
      maxLength: 80
    KorteStraatnaam:
      description: |
        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG), zo nodig verkort tot maximaal 24 tekens, of de straatnaam van een niet-BAG adres.
      type: string
      maxLength: 24
    Huisnummer:
      description: |
        Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.
      type: integer
      minimum: 1
      maximum: 99999
      example: 14
    Huisletter:
      description: |
        Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.
      type: string
      pattern: ^[a-zA-Z]{1}$
      example: a
    Huisnummertoevoeging:
      description: |
        Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.
      type: string
      pattern: ^[a-zA-Z0-9 \-]{1,4}$
      example: bis
    Postcode:
      description: |
        De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.
      type: string
      pattern: ^[1-9]{1}[0-9]{3}[ ]?[A-Za-z]{2}$
      example: 2341SX
    Woonplaats:
      description: |
        Een woonplaats is een gedeelte van het grondgebied van de gemeente met een naam.
      title: woonplaats naam
      type: string
      pattern: ^[a-zA-Z0-9À-ž, \(\)\.\-\']{1,80}$
      example: Duiven
    VerblijfadresBinnenlandInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            aanduidingBijHuisnummer:
              type: boolean
            huisletter:
              type: boolean
            huisnummer:
              type: boolean
            huisnummertoevoeging:
              type: boolean
            officieleStraatnaam:
              type: boolean
            postcode:
              type: boolean
            korteStraatnaam:
              type: boolean
            woonplaats:
              type: boolean
    VerblijfadresBinnenland:
      type: object
      properties:
        officieleStraatnaam:
          $ref: '#/components/schemas/OfficieleStraatnaam'
        korteStraatnaam:
          $ref: '#/components/schemas/KorteStraatnaam'
        huisnummer:
          $ref: '#/components/schemas/Huisnummer'
        huisletter:
          $ref: '#/components/schemas/Huisletter'
        huisnummertoevoeging:
          $ref: '#/components/schemas/Huisnummertoevoeging'
        aanduidingBijHuisnummer:
          $ref: '#/components/schemas/Waardetabel'
        postcode:
          $ref: '#/components/schemas/Postcode'
        woonplaats:
          $ref: '#/components/schemas/Woonplaats'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfadresBinnenlandInOnderzoek'
    AdresseerbaarObjectIdentificatie:
      type: string
      pattern: ^[0-9]{16}$
      description: |
        De identificatiecode van een adresseerbaar object.
      example: '0226010000038820'
    NummeraanduidingIdentificatie:
      description: |
        Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.
      type: string
      pattern: ^[0-9]{16}$
      example: '0518200000366054'
    AdresInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            type:
              type: boolean
            datumVan:
              type: boolean
            datumIngangGeldigheid:
              type: boolean
              deprecated: true
            nummeraanduidingIdentificatie:
              type: boolean
            adresseerbaarObjectIdentificatie:
              type: boolean
            functieAdres:
              type: boolean
    Adres:
      description: |
        Gegevens over het adres van een persoon.
      allOf:
        - $ref: '#/components/schemas/AbstractVerblijfplaats'
        - type: object
          properties:
            verblijfadres:
              $ref: '#/components/schemas/VerblijfadresBinnenland'
            functieAdres:
              $ref: '#/components/schemas/Waardetabel'
            adresseerbaarObjectIdentificatie:
              $ref: '#/components/schemas/AdresseerbaarObjectIdentificatie'
            nummeraanduidingIdentificatie:
              $ref: '#/components/schemas/NummeraanduidingIdentificatie'
            datumVan:
              description: |
                de datum van aangifte of ambtshalve melding van verblijf en adres.
              $ref: '#/components/schemas/AbstractDatum'
            indicatieVastgesteldVerblijftNietOpAdres:
              $ref: '#/components/schemas/IndicatieVastgesteldVerblijftNietOpAdres'
            inOnderzoek:
              $ref: '#/components/schemas/AdresInOnderzoek'
    VerblijfplaatsOnbekendInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            type:
              type: boolean
            datumVan:
              type: boolean
            datumIngangGeldigheid:
              type: boolean
              deprecated: true
    VerblijfplaatsOnbekend:
      allOf:
        - $ref: '#/components/schemas/AbstractVerblijfplaats'
        - type: object
          properties:
            datumVan:
              $ref: '#/components/schemas/AbstractDatum'
            inOnderzoek:
              $ref: '#/components/schemas/VerblijfplaatsOnbekendInOnderzoek'
    Locatiebeschrijving:
      type: string
      maxLength: 35
      description: |
        Omschrijving van de ligging van een verblijfsobject, standplaats of ligplaats.
      example: Naast de derde brug
    VerblijfadresLocatieInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            locatiebeschrijving:
              type: boolean
    VerblijfadresLocatie:
      type: object
      properties:
        locatiebeschrijving:
          $ref: '#/components/schemas/Locatiebeschrijving'
        inOnderzoek:
          $ref: '#/components/schemas/VerblijfadresLocatieInOnderzoek'
    LocatieInOnderzoek:
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            type:
              type: boolean
            datumVan:
              type: boolean
            functieAdres:
              type: boolean
            datumIngangGeldigheid:
              type: boolean
              deprecated: true
    Locatie:
      allOf:
        - $ref: '#/components/schemas/AbstractVerblijfplaats'
        - type: object
          properties:
            datumVan:
              $ref: '#/components/schemas/AbstractDatum'
            functieAdres:
              $ref: '#/components/schemas/Waardetabel'
            verblijfadres:
              $ref: '#/components/schemas/VerblijfadresLocatie'
            indicatieVastgesteldVerblijftNietOpAdres:
              $ref: '#/components/schemas/IndicatieVastgesteldVerblijftNietOpAdres'
            inOnderzoek:
              $ref: '#/components/schemas/LocatieInOnderzoek'
    VerblijfstitelBasis:
      description: |
        Gegevens over de verblijfsrechtelijke status van de persoon.
      type: object
      properties:
        aanduiding:
          description: |
            Verblijfstiteltabel die aangeeft over welke verblijfsrechtelijke status de persoon beschikt. Wordt gevuld met waarden uit de landelijke tabel 'Verblijfstitel'.
          $ref: '#/components/schemas/Waardetabel'
    VerblijfstitelInOnderzoek:
      description: |
        Geeft aan welke gegevens over de verblijfstitel in onderzoek zijn.
      allOf:
        - $ref: '#/components/schemas/InOnderzoek'
        - type: object
          properties:
            aanduiding:
              type: boolean
            datumEinde:
              type: boolean
            datumIngang:
              type: boolean
    Verblijfstitel:
      allOf:
        - $ref: '#/components/schemas/VerblijfstitelBasis'
        - type: object
          properties:
            datumEinde:
              description: |
                Datum waarop de geldigheid van de gegevens over de verblijfstitel is beëindigd.
              $ref: '#/components/schemas/AbstractDatum'
            datumIngang:
              description: |
                Datum waarop de gegevens over de verblijfstitel geldig zijn geworden.
              $ref: '#/components/schemas/AbstractDatum'
            inOnderzoek:
              $ref: '#/components/schemas/VerblijfstitelInOnderzoek'
    OmschrijvingVerificatie:
      type: string
      description: |
        Omschrijving van de verificatie van de rni-gegevens
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,50}$
    Verificatie:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/AbstractDatum'
        omschrijving:
          $ref: '#/components/schemas/OmschrijvingVerificatie'
    InvalidParam:
      type: object
      description: Details over fouten in opgegeven parameters
      properties:
        type:
          type: string
          format: uri
          example: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
        name:
          description: Naam van de parameter
          type: string
          pattern: ^[a-zA-Z0-9\._]{1,30}$
          example: huisnummer
        code:
          description: Systeemcode die het type fout aangeeft
          type: string
          pattern: ^[a-zA-Z0-9]{1,25}$
          example: integer
        reason:
          description: Beschrijving van de fout op de parameterwaarde
          type: string
          pattern: ^[a-zA-Z0-9\., ]{1,80}$
          example: Waarde is geen geldig getal.
    BadRequestFoutbericht:
      allOf:
        - $ref: '#/components/schemas/Foutbericht'
        - type: object
          properties:
            invalidParams:
              description: |
                Foutmelding per fout in een parameter. Alle gevonden fouten worden één keer teruggemeld.
              type: array
              items:
                $ref: '#/components/schemas/InvalidParam'
    AdresseerbaarObjectIdentificatieFilter:
      type: string
      pattern: ^(?!0{16})[0-9]{16}$
      description: |
        De identificatiecode van een adresseerbaar object uitgezonderd de standaardwaarde (0000000000000000)
      example: '0226010000038820'
    DatumFilter:
      type: string
      format: date
      example: '1964-09-24'
    Field:
      description: |
        Het pad naar een gewenst veld in punt-gescheiden formaat. Bijvoorbeeld "burgerservicenummer", "geboorte.datum", "partners.naam.voornamen".
      type: string
      pattern: ^[a-zA-Z0-9\._]{1,200}$
    GemeenteVanInschrijving:
      description: |
        Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.
      type: string
      pattern: ^[0-9]{4}$
      example: '0518'
    GeslachtFilter:
      description: |
        Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.
      type: string
      pattern: ^([Mm]|[Vv]|[Oo])$
      example: V
    GeslachtsnaamFilter:
      description: |
        De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters.** **Zoeken met tekstvelden is case-insensitive.**
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$|^[a-zA-Z0-9À-ž \.\-\']{3,199}\*{1}$
      example: Vries
    NummeraanduidingIdentificatieFilter:
      type: string
      pattern: ^(?!0{16})[0-9]{16}$
      description: |
        De unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.
      example: '0518200000366054'
    StraatFilter:
      description: |
        Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 7 letters.** **Zoeken met tekstvelden is case-insensitive.** 
      type: string
      pattern: ^[a-zA-Z0-9À-ž \-\'\.]{1,80}$|^[a-zA-Z0-9À-ž \-\'\.]{7,79}\*{1}$|^\*{1}[a-zA-Z0-9À-ž \-\'\.]{7,79}$
      example: Tulpstraat
    VoornamenOptioneelFilter:
      description: |
        De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. **Gebruik van de wildcard is toegestaan.** **Zoeken met tekstvelden is case-insensitive.**
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,199}\*{0,1}$
      example: Dirk
    VoornamenVerplichtFilter:
      description: |
        De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. **Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters.** **Zoeken met tekstvelden is case-insensitive.**
      type: string
      pattern: ^[a-zA-Z0-9À-ž \.\-\']{1,200}$|^[a-zA-Z0-9À-ž \.\-\']{3,199}\*{1}$
      example: Dirk
    VoorvoegselFilter:
      description: |
        Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. **Zoeken met tekstvelden is case-insensitive.**
      type: string
      pattern: ^[a-zA-Z \']{1,10}$
      example: de
  responses:
    '400':
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestFoutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1
            title: Ten minste één parameter moet worden opgegeven.
            status: 400
            detail: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modification.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: paramsRequired
            invalidParams:
              - type: https://www.vng.nl/realisatie/api/validaties/integer
                name: huisnummer
                code: integer
                reason: Waarde is geen geldig getal.
    '401':
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2
            title: Niet correct geauthenticeerd.
            status: 401
            detail: The request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: authentication
    '403':
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4
            title: U bent niet geautoriseerd voor deze operatie.
            status: 403
            detail: The server understood the request, but is refusing to fulfill it.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: autorisation
    '404':
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5
            title: Opgevraagde resource bestaat niet.
            status: 404
            detail: The server has not found anything matching the Request-URI.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: notFound
    '409':
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.10
            title: Conflict
            status: 409
            detail: The request could not be completed due to a conflict with the current state of the resource
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: conflict
    '410':
      description: Gone
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.11
            title: Gone
            status: 410
            detail: The requested resource is no longer available at the server and no forwarding address is known
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: gone
    '412':
      description: Precondition failed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.13
            title: Precondition Failed
            status: 412
            detail: The precondition given in one or more of the request-header fields evaluated to false when it was tested on the server.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: preconditionFailed
    '415':
      description: Unsupported Media Type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.16
            title: Unsupported Media Type
            status: 415
            detail: The server is refusing the request because the entity of the request is in a format not supported by the requested resource for the requested method.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: unsupported
    '429':
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
            title: Too many request
            status: 429
            detail: The user has sent too many requests in a given amount of time (rate limiting).
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: tooManyRequests
    '500':
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1
            title: Interne server fout.
            status: 500
            detail: The server encountered an unexpected condition which prevented it from fulfilling the request.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: serverError
    '501':
      description: Not Implemented
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.2
            title: Not Implemented
            status: 501
            detail: The server does not support the functionality required to fulfill the request.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: notImplemented
    '503':
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4
            title: Bronservice BRP is tijdelijk niet beschikbaar.
            status: 503
            detail: The service is currently unable to handle the request due to a temporary overloading or maintenance of the server.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: notAvailable
