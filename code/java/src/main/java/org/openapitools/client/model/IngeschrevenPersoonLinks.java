/*
 * Bevragen Ingeschreven Personen
 * API voor het bevragen van ingeschreven personen uit de basisregistratie personen (BRP), inclusief de registratie niet-ingezeten (RNI). Met deze API kun je personen zoeken en actuele gegevens over personen, kinderen, partners en ouders raadplegen.  Gegevens die er niet zijn of niet actueel zijn krijg je niet terug. Heeft een persoon bijvoorbeeld geen geldige nationaliteit, en alleen een beëindigd partnerschap, dan krijg je geen gegevens over nationaliteit en partner.  Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/tree/v1.0.0/features) voor nadere toelichting. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.HalLink;

/**
 * IngeschrevenPersoonLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-10-01T14:03:13.754Z[Etc/UTC]")
public class IngeschrevenPersoonLinks {
  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private HalLink self;

  public static final String SERIALIZED_NAME_OUDERS = "ouders";
  @SerializedName(SERIALIZED_NAME_OUDERS)
  private List<HalLink> ouders = null;

  public static final String SERIALIZED_NAME_REISDOCUMENTEN = "reisdocumenten";
  @SerializedName(SERIALIZED_NAME_REISDOCUMENTEN)
  private List<HalLink> reisdocumenten = null;

  public static final String SERIALIZED_NAME_KINDEREN = "kinderen";
  @SerializedName(SERIALIZED_NAME_KINDEREN)
  private List<HalLink> kinderen = null;

  public static final String SERIALIZED_NAME_PARTNERS = "partners";
  @SerializedName(SERIALIZED_NAME_PARTNERS)
  private List<HalLink> partners = null;

  public static final String SERIALIZED_NAME_PARTNERHISTORIE = "partnerhistorie";
  @SerializedName(SERIALIZED_NAME_PARTNERHISTORIE)
  private HalLink partnerhistorie;

  public static final String SERIALIZED_NAME_VERBLIJFPLAATSHISTORIE = "verblijfplaatshistorie";
  @SerializedName(SERIALIZED_NAME_VERBLIJFPLAATSHISTORIE)
  private HalLink verblijfplaatshistorie;

  public static final String SERIALIZED_NAME_VERBLIJFSTITELHISTORIE = "verblijfstitelhistorie";
  @SerializedName(SERIALIZED_NAME_VERBLIJFSTITELHISTORIE)
  private HalLink verblijfstitelhistorie;

  public static final String SERIALIZED_NAME_NATIONALITEIT_HISTORIE = "nationaliteitHistorie";
  @SerializedName(SERIALIZED_NAME_NATIONALITEIT_HISTORIE)
  private HalLink nationaliteitHistorie;

  public static final String SERIALIZED_NAME_ADRES = "adres";
  @SerializedName(SERIALIZED_NAME_ADRES)
  private HalLink adres;


  public IngeschrevenPersoonLinks self(HalLink self) {
    
    this.self = self;
    return this;
  }

   /**
   * Get self
   * @return self
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HalLink getSelf() {
    return self;
  }


  public void setSelf(HalLink self) {
    this.self = self;
  }


  public IngeschrevenPersoonLinks ouders(List<HalLink> ouders) {
    
    this.ouders = ouders;
    return this;
  }

  public IngeschrevenPersoonLinks addOudersItem(HalLink oudersItem) {
    if (this.ouders == null) {
      this.ouders = new ArrayList<>();
    }
    this.ouders.add(oudersItem);
    return this;
  }

   /**
   * De ouders van de persoon. 
   * @return ouders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De ouders van de persoon. ")

  public List<HalLink> getOuders() {
    return ouders;
  }


  public void setOuders(List<HalLink> ouders) {
    this.ouders = ouders;
  }


  public IngeschrevenPersoonLinks reisdocumenten(List<HalLink> reisdocumenten) {
    
    this.reisdocumenten = reisdocumenten;
    return this;
  }

  public IngeschrevenPersoonLinks addReisdocumentenItem(HalLink reisdocumentenItem) {
    if (this.reisdocumenten == null) {
      this.reisdocumenten = new ArrayList<>();
    }
    this.reisdocumenten.add(reisdocumentenItem);
    return this;
  }

   /**
   * De reisdocumenten die aan de persoon zijn verstrekt. 
   * @return reisdocumenten
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De reisdocumenten die aan de persoon zijn verstrekt. ")

  public List<HalLink> getReisdocumenten() {
    return reisdocumenten;
  }


  public void setReisdocumenten(List<HalLink> reisdocumenten) {
    this.reisdocumenten = reisdocumenten;
  }


  public IngeschrevenPersoonLinks kinderen(List<HalLink> kinderen) {
    
    this.kinderen = kinderen;
    return this;
  }

  public IngeschrevenPersoonLinks addKinderenItem(HalLink kinderenItem) {
    if (this.kinderen == null) {
      this.kinderen = new ArrayList<>();
    }
    this.kinderen.add(kinderenItem);
    return this;
  }

   /**
   * De kinderen van de persoon. 
   * @return kinderen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De kinderen van de persoon. ")

  public List<HalLink> getKinderen() {
    return kinderen;
  }


  public void setKinderen(List<HalLink> kinderen) {
    this.kinderen = kinderen;
  }


  public IngeschrevenPersoonLinks partners(List<HalLink> partners) {
    
    this.partners = partners;
    return this;
  }

  public IngeschrevenPersoonLinks addPartnersItem(HalLink partnersItem) {
    if (this.partners == null) {
      this.partners = new ArrayList<>();
    }
    this.partners.add(partnersItem);
    return this;
  }

   /**
   * De actuele bij de ingeschreven persoon geregistreerde huwelijken en geregistreerd partnerschappen. Een beëindigd huwelijk of geregistreerd partnerschap wordt niet teruggegeven. 
   * @return partners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De actuele bij de ingeschreven persoon geregistreerde huwelijken en geregistreerd partnerschappen. Een beëindigd huwelijk of geregistreerd partnerschap wordt niet teruggegeven. ")

  public List<HalLink> getPartners() {
    return partners;
  }


  public void setPartners(List<HalLink> partners) {
    this.partners = partners;
  }


  public IngeschrevenPersoonLinks partnerhistorie(HalLink partnerhistorie) {
    
    this.partnerhistorie = partnerhistorie;
    return this;
  }

   /**
   * Get partnerhistorie
   * @return partnerhistorie
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HalLink getPartnerhistorie() {
    return partnerhistorie;
  }


  public void setPartnerhistorie(HalLink partnerhistorie) {
    this.partnerhistorie = partnerhistorie;
  }


  public IngeschrevenPersoonLinks verblijfplaatshistorie(HalLink verblijfplaatshistorie) {
    
    this.verblijfplaatshistorie = verblijfplaatshistorie;
    return this;
  }

   /**
   * Get verblijfplaatshistorie
   * @return verblijfplaatshistorie
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HalLink getVerblijfplaatshistorie() {
    return verblijfplaatshistorie;
  }


  public void setVerblijfplaatshistorie(HalLink verblijfplaatshistorie) {
    this.verblijfplaatshistorie = verblijfplaatshistorie;
  }


  public IngeschrevenPersoonLinks verblijfstitelhistorie(HalLink verblijfstitelhistorie) {
    
    this.verblijfstitelhistorie = verblijfstitelhistorie;
    return this;
  }

   /**
   * Get verblijfstitelhistorie
   * @return verblijfstitelhistorie
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HalLink getVerblijfstitelhistorie() {
    return verblijfstitelhistorie;
  }


  public void setVerblijfstitelhistorie(HalLink verblijfstitelhistorie) {
    this.verblijfstitelhistorie = verblijfstitelhistorie;
  }


  public IngeschrevenPersoonLinks nationaliteitHistorie(HalLink nationaliteitHistorie) {
    
    this.nationaliteitHistorie = nationaliteitHistorie;
    return this;
  }

   /**
   * Get nationaliteitHistorie
   * @return nationaliteitHistorie
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HalLink getNationaliteitHistorie() {
    return nationaliteitHistorie;
  }


  public void setNationaliteitHistorie(HalLink nationaliteitHistorie) {
    this.nationaliteitHistorie = nationaliteitHistorie;
  }


  public IngeschrevenPersoonLinks adres(HalLink adres) {
    
    this.adres = adres;
    return this;
  }

   /**
   * Get adres
   * @return adres
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HalLink getAdres() {
    return adres;
  }


  public void setAdres(HalLink adres) {
    this.adres = adres;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IngeschrevenPersoonLinks ingeschrevenPersoonLinks = (IngeschrevenPersoonLinks) o;
    return Objects.equals(this.self, ingeschrevenPersoonLinks.self) &&
        Objects.equals(this.ouders, ingeschrevenPersoonLinks.ouders) &&
        Objects.equals(this.reisdocumenten, ingeschrevenPersoonLinks.reisdocumenten) &&
        Objects.equals(this.kinderen, ingeschrevenPersoonLinks.kinderen) &&
        Objects.equals(this.partners, ingeschrevenPersoonLinks.partners) &&
        Objects.equals(this.partnerhistorie, ingeschrevenPersoonLinks.partnerhistorie) &&
        Objects.equals(this.verblijfplaatshistorie, ingeschrevenPersoonLinks.verblijfplaatshistorie) &&
        Objects.equals(this.verblijfstitelhistorie, ingeschrevenPersoonLinks.verblijfstitelhistorie) &&
        Objects.equals(this.nationaliteitHistorie, ingeschrevenPersoonLinks.nationaliteitHistorie) &&
        Objects.equals(this.adres, ingeschrevenPersoonLinks.adres);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, ouders, reisdocumenten, kinderen, partners, partnerhistorie, verblijfplaatshistorie, verblijfstitelhistorie, nationaliteitHistorie, adres);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IngeschrevenPersoonLinks {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    ouders: ").append(toIndentedString(ouders)).append("\n");
    sb.append("    reisdocumenten: ").append(toIndentedString(reisdocumenten)).append("\n");
    sb.append("    kinderen: ").append(toIndentedString(kinderen)).append("\n");
    sb.append("    partners: ").append(toIndentedString(partners)).append("\n");
    sb.append("    partnerhistorie: ").append(toIndentedString(partnerhistorie)).append("\n");
    sb.append("    verblijfplaatshistorie: ").append(toIndentedString(verblijfplaatshistorie)).append("\n");
    sb.append("    verblijfstitelhistorie: ").append(toIndentedString(verblijfstitelhistorie)).append("\n");
    sb.append("    nationaliteitHistorie: ").append(toIndentedString(nationaliteitHistorie)).append("\n");
    sb.append("    adres: ").append(toIndentedString(adres)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

