/*
 * Bevragen Ingeschreven Personen
 * API voor het bevragen van ingeschreven personen uit de basisregistratie personen (BRP), inclusief de registratie niet-ingezeten (RNI). Met deze API kun je personen zoeken en actuele gegevens over personen, kinderen, partners en ouders raadplegen.  Gegevens die er niet zijn of niet actueel zijn krijg je niet terug. Heeft een persoon bijvoorbeeld geen geldige nationaliteit, en alleen een beÃ«indigd partnerschap, dan krijg je geen gegevens over nationaliteit en partner.  Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/tree/v1.1.0/features) voor nadere toelichting. 
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.DatumOnvolledig;
import org.openapitools.client.model.RedenOpschortingBijhoudingEnum;

/**
 * * **datum**: de datum waarop de bijhouding van de persoonsgegevens is gestaakt. 
 */
@ApiModel(description = "* **datum**: de datum waarop de bijhouding van de persoonsgegevens is gestaakt. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-02T09:47:37.422Z[Etc/UTC]")
public class OpschortingBijhouding {
  public static final String SERIALIZED_NAME_REDEN = "reden";
  @SerializedName(SERIALIZED_NAME_REDEN)
  private RedenOpschortingBijhoudingEnum reden;

  public static final String SERIALIZED_NAME_DATUM = "datum";
  @SerializedName(SERIALIZED_NAME_DATUM)
  private DatumOnvolledig datum;


  public OpschortingBijhouding reden(RedenOpschortingBijhoudingEnum reden) {
    
    this.reden = reden;
    return this;
  }

   /**
   * Get reden
   * @return reden
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RedenOpschortingBijhoudingEnum getReden() {
    return reden;
  }


  public void setReden(RedenOpschortingBijhoudingEnum reden) {
    this.reden = reden;
  }


  public OpschortingBijhouding datum(DatumOnvolledig datum) {
    
    this.datum = datum;
    return this;
  }

   /**
   * Get datum
   * @return datum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DatumOnvolledig getDatum() {
    return datum;
  }


  public void setDatum(DatumOnvolledig datum) {
    this.datum = datum;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpschortingBijhouding opschortingBijhouding = (OpschortingBijhouding) o;
    return Objects.equals(this.reden, opschortingBijhouding.reden) &&
        Objects.equals(this.datum, opschortingBijhouding.datum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reden, datum);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpschortingBijhouding {\n");
    sb.append("    reden: ").append(toIndentedString(reden)).append("\n");
    sb.append("    datum: ").append(toIndentedString(datum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

