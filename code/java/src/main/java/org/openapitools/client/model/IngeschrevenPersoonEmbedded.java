/*
 * Bevragingen ingeschreven personen
 * API voor het ontsluiten van gegevens van ingeschreven personen en aanverwante gegevens uit de GBA en RNI. Met deze API worden de actuele gegevens van ingeschreven personen, hun kinderen, partners en ouders ontsloten. <br> Heeft een persoon bijvoorbeeld geen geldige nationaliteit, dan wordt nationaliteit niet geretourneerd. <br> Heeft een persoon een beëindigd partnerschap of huwelijk, dan wordt de partner niet geretourneerd. <br> <br> Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/tree/master/features) voor nadere toelichting. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.KindHal;
import org.openapitools.client.model.OuderHal;
import org.openapitools.client.model.PartnerHal;

/**
 * IngeschrevenPersoonEmbedded
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-21T14:20:17.398Z[Etc/UTC]")
public class IngeschrevenPersoonEmbedded {
  public static final String SERIALIZED_NAME_OUDERS = "ouders";
  @SerializedName(SERIALIZED_NAME_OUDERS)
  private List<OuderHal> ouders = null;

  public static final String SERIALIZED_NAME_KINDEREN = "kinderen";
  @SerializedName(SERIALIZED_NAME_KINDEREN)
  private List<KindHal> kinderen = null;

  public static final String SERIALIZED_NAME_PARTNERS = "partners";
  @SerializedName(SERIALIZED_NAME_PARTNERS)
  private List<PartnerHal> partners = null;


  public IngeschrevenPersoonEmbedded ouders(List<OuderHal> ouders) {
    
    this.ouders = ouders;
    return this;
  }

  public IngeschrevenPersoonEmbedded addOudersItem(OuderHal oudersItem) {
    if (this.ouders == null) {
      this.ouders = new ArrayList<>();
    }
    this.ouders.add(oudersItem);
    return this;
  }

   /**
   * De ouders van de ingeschreven persoon, waarnaar de OUDER-KIND-RELATIE verwijst&#x60;
   * @return ouders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De ouders van de ingeschreven persoon, waarnaar de OUDER-KIND-RELATIE verwijst`")

  public List<OuderHal> getOuders() {
    return ouders;
  }


  public void setOuders(List<OuderHal> ouders) {
    this.ouders = ouders;
  }


  public IngeschrevenPersoonEmbedded kinderen(List<KindHal> kinderen) {
    
    this.kinderen = kinderen;
    return this;
  }

  public IngeschrevenPersoonEmbedded addKinderenItem(KindHal kinderenItem) {
    if (this.kinderen == null) {
      this.kinderen = new ArrayList<>();
    }
    this.kinderen.add(kinderenItem);
    return this;
  }

   /**
   * De kinderen van de ingeschreven persoon, waarnaar de KIND-OUDER-RELATIE verwijst
   * @return kinderen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De kinderen van de ingeschreven persoon, waarnaar de KIND-OUDER-RELATIE verwijst")

  public List<KindHal> getKinderen() {
    return kinderen;
  }


  public void setKinderen(List<KindHal> kinderen) {
    this.kinderen = kinderen;
  }


  public IngeschrevenPersoonEmbedded partners(List<PartnerHal> partners) {
    
    this.partners = partners;
    return this;
  }

  public IngeschrevenPersoonEmbedded addPartnersItem(PartnerHal partnersItem) {
    if (this.partners == null) {
      this.partners = new ArrayList<>();
    }
    this.partners.add(partnersItem);
    return this;
  }

   /**
   * De actuele bij de ingeschreven persoon geregistreerde huwelijken en geregistreerd partnerschappen. Een beëindigd huwelijk of geregistreerd partnerschap wordt niet teruggegeven.
   * @return partners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De actuele bij de ingeschreven persoon geregistreerde huwelijken en geregistreerd partnerschappen. Een beëindigd huwelijk of geregistreerd partnerschap wordt niet teruggegeven.")

  public List<PartnerHal> getPartners() {
    return partners;
  }


  public void setPartners(List<PartnerHal> partners) {
    this.partners = partners;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IngeschrevenPersoonEmbedded ingeschrevenPersoonEmbedded = (IngeschrevenPersoonEmbedded) o;
    return Objects.equals(this.ouders, ingeschrevenPersoonEmbedded.ouders) &&
        Objects.equals(this.kinderen, ingeschrevenPersoonEmbedded.kinderen) &&
        Objects.equals(this.partners, ingeschrevenPersoonEmbedded.partners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ouders, kinderen, partners);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IngeschrevenPersoonEmbedded {\n");
    sb.append("    ouders: ").append(toIndentedString(ouders)).append("\n");
    sb.append("    kinderen: ").append(toIndentedString(kinderen)).append("\n");
    sb.append("    partners: ").append(toIndentedString(partners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

