/*
 * Bevragingen ingeschreven personen
 * API voor het ontsluiten van gegevens van ingeschreven personen en aanverwante gegevens uit de GBA en RNI. Met deze API worden de actuele gegevens van ingeschreven personen, hun kinderen, partners en ouders ontsloten. <br> Heeft een persoon bijvoorbeeld geen geldige nationaliteit, dan wordt nationaliteit niet geretourneerd. <br> Heeft een persoon een beÃ«indigd partnerschap of huwelijk, dan wordt de partner niet geretourneerd. <br> <br> Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/tree/master/features) voor nadere toelichting. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.DatumOnvolledig;
import org.openapitools.client.model.OverlijdenInOnderzoek;
import org.openapitools.client.model.Waardetabel;

/**
 * Gegevens over het overlijden van de ingeschreven persoon.  * **datum** : Datum waarop de persoon is overleden.  * **land** : Land waar de persoon is overleden  * **plaats** : De plaats waar een persoon is overleden. Voor een plaats buiten Nederland is gemeentecode&#x3D;1999 (RNI) en gemeentenaam de buitenlandse plaatsnaam of aanduiding.
 */
@ApiModel(description = "Gegevens over het overlijden van de ingeschreven persoon.  * **datum** : Datum waarop de persoon is overleden.  * **land** : Land waar de persoon is overleden  * **plaats** : De plaats waar een persoon is overleden. Voor een plaats buiten Nederland is gemeentecode=1999 (RNI) en gemeentenaam de buitenlandse plaatsnaam of aanduiding.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-22T11:55:38.455Z[Etc/UTC]")
public class Overlijden {
  public static final String SERIALIZED_NAME_INDICATIE_OVERLEDEN = "indicatieOverleden";
  @SerializedName(SERIALIZED_NAME_INDICATIE_OVERLEDEN)
  private Boolean indicatieOverleden;

  public static final String SERIALIZED_NAME_DATUM = "datum";
  @SerializedName(SERIALIZED_NAME_DATUM)
  private DatumOnvolledig datum;

  public static final String SERIALIZED_NAME_LAND = "land";
  @SerializedName(SERIALIZED_NAME_LAND)
  private Waardetabel land;

  public static final String SERIALIZED_NAME_PLAATS = "plaats";
  @SerializedName(SERIALIZED_NAME_PLAATS)
  private Waardetabel plaats;

  public static final String SERIALIZED_NAME_IN_ONDERZOEK = "inOnderzoek";
  @SerializedName(SERIALIZED_NAME_IN_ONDERZOEK)
  private OverlijdenInOnderzoek inOnderzoek;


  public Overlijden indicatieOverleden(Boolean indicatieOverleden) {
    
    this.indicatieOverleden = indicatieOverleden;
    return this;
  }

   /**
   * Deze indicatie heeft als rol om aan te geven dat iemand is overleden (waarde true). Deze indicator wordt altijd meegeleverd als de waarde true is (dus als iemand overleden is). Als de waarde false is wordt de indicator niet meegeleverd.
   * @return indicatieOverleden
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deze indicatie heeft als rol om aan te geven dat iemand is overleden (waarde true). Deze indicator wordt altijd meegeleverd als de waarde true is (dus als iemand overleden is). Als de waarde false is wordt de indicator niet meegeleverd.")

  public Boolean getIndicatieOverleden() {
    return indicatieOverleden;
  }


  public void setIndicatieOverleden(Boolean indicatieOverleden) {
    this.indicatieOverleden = indicatieOverleden;
  }


  public Overlijden datum(DatumOnvolledig datum) {
    
    this.datum = datum;
    return this;
  }

   /**
   * Get datum
   * @return datum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DatumOnvolledig getDatum() {
    return datum;
  }


  public void setDatum(DatumOnvolledig datum) {
    this.datum = datum;
  }


  public Overlijden land(Waardetabel land) {
    
    this.land = land;
    return this;
  }

   /**
   * Get land
   * @return land
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Waardetabel getLand() {
    return land;
  }


  public void setLand(Waardetabel land) {
    this.land = land;
  }


  public Overlijden plaats(Waardetabel plaats) {
    
    this.plaats = plaats;
    return this;
  }

   /**
   * Get plaats
   * @return plaats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Waardetabel getPlaats() {
    return plaats;
  }


  public void setPlaats(Waardetabel plaats) {
    this.plaats = plaats;
  }


  public Overlijden inOnderzoek(OverlijdenInOnderzoek inOnderzoek) {
    
    this.inOnderzoek = inOnderzoek;
    return this;
  }

   /**
   * Get inOnderzoek
   * @return inOnderzoek
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OverlijdenInOnderzoek getInOnderzoek() {
    return inOnderzoek;
  }


  public void setInOnderzoek(OverlijdenInOnderzoek inOnderzoek) {
    this.inOnderzoek = inOnderzoek;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Overlijden overlijden = (Overlijden) o;
    return Objects.equals(this.indicatieOverleden, overlijden.indicatieOverleden) &&
        Objects.equals(this.datum, overlijden.datum) &&
        Objects.equals(this.land, overlijden.land) &&
        Objects.equals(this.plaats, overlijden.plaats) &&
        Objects.equals(this.inOnderzoek, overlijden.inOnderzoek);
  }

  @Override
  public int hashCode() {
    return Objects.hash(indicatieOverleden, datum, land, plaats, inOnderzoek);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Overlijden {\n");
    sb.append("    indicatieOverleden: ").append(toIndentedString(indicatieOverleden)).append("\n");
    sb.append("    datum: ").append(toIndentedString(datum)).append("\n");
    sb.append("    land: ").append(toIndentedString(land)).append("\n");
    sb.append("    plaats: ").append(toIndentedString(plaats)).append("\n");
    sb.append("    inOnderzoek: ").append(toIndentedString(inOnderzoek)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

