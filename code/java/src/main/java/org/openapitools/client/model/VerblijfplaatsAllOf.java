/*
 * Bevragingen ingeschreven personen
 * API voor het ontsluiten van gegevens van ingeschreven personen en aanverwante gegevens uit de GBA en RNI. Met deze API worden de actuele gegevens van ingeschreven personen, hun kinderen, partners en ouders ontsloten. <br> Heeft een persoon bijvoorbeeld geen geldige nationaliteit, dan wordt nationaliteit niet geretourneerd. <br> Heeft een persoon een beÃ«indigd partnerschap of huwelijk, dan wordt de partner niet geretourneerd. <br> <br> Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/tree/master/features) voor nadere toelichting. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.DatumOnvolledig;
import org.openapitools.client.model.VerblijfBuitenland;
import org.openapitools.client.model.VerblijfplaatsInOnderzoek;
import org.openapitools.client.model.Waardetabel;

/**
 * Gegevens over het verblijf en adres van de ingeschreven persoon. Dit is het adres waarop een persoon is ingeschreven.  * **datumAanvangAdreshuishouding** : De datum van aangifte of ambtshalve melding van verblijf en adres.  * **datumIngangGeldigheid** : Datum waarop de gegevens over de verblijfplaats geldig zijn geworden.  * **datumInschrijvingInGemeente**: Bij inschrijving op grond van een aangifte door de burger van zijn vestiging in een (volgende) gemeente is dit de aangiftedatum. Bij inschrijving op grond van een geboorteakte is dit de geboortedatum. Bij ambtshalve inschrijving is dit de datum waarop de betrokkene schriftelijk van het voornemen van ambtshalve opneming mededeling is gedaan.  * **datumVestigingInNederland** : Datum van inschrijving in Nederland  * **landVanWaarIngeschreven** : Het land waar de ingeschreven persoon verblijf hield voor (her)vestiging in Nederland.  * **gemeenteVanInschrijving** : Een aanduiding die aangeeft in welke gemeente de PK zich bevindt. De code kan voorloopnullen bevatten  * **landVanWaarIngeschreven** : Het LAND waar de INGESCHREVEN PERSOON verblijf hield voor (her)vestiging in Nederland.
 */
@ApiModel(description = "Gegevens over het verblijf en adres van de ingeschreven persoon. Dit is het adres waarop een persoon is ingeschreven.  * **datumAanvangAdreshuishouding** : De datum van aangifte of ambtshalve melding van verblijf en adres.  * **datumIngangGeldigheid** : Datum waarop de gegevens over de verblijfplaats geldig zijn geworden.  * **datumInschrijvingInGemeente**: Bij inschrijving op grond van een aangifte door de burger van zijn vestiging in een (volgende) gemeente is dit de aangiftedatum. Bij inschrijving op grond van een geboorteakte is dit de geboortedatum. Bij ambtshalve inschrijving is dit de datum waarop de betrokkene schriftelijk van het voornemen van ambtshalve opneming mededeling is gedaan.  * **datumVestigingInNederland** : Datum van inschrijving in Nederland  * **landVanWaarIngeschreven** : Het land waar de ingeschreven persoon verblijf hield voor (her)vestiging in Nederland.  * **gemeenteVanInschrijving** : Een aanduiding die aangeeft in welke gemeente de PK zich bevindt. De code kan voorloopnullen bevatten  * **landVanWaarIngeschreven** : Het LAND waar de INGESCHREVEN PERSOON verblijf hield voor (her)vestiging in Nederland.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-22T11:55:38.455Z[Etc/UTC]")
public class VerblijfplaatsAllOf {
  public static final String SERIALIZED_NAME_IDENTIFICATIECODE_ADRESSEERBAAR_OBJECT = "identificatiecodeAdresseerbaarObject";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATIECODE_ADRESSEERBAAR_OBJECT)
  private String identificatiecodeAdresseerbaarObject;

  public static final String SERIALIZED_NAME_INDICATIE_VESTIGING_VANUIT_BUITENLAND = "indicatieVestigingVanuitBuitenland";
  @SerializedName(SERIALIZED_NAME_INDICATIE_VESTIGING_VANUIT_BUITENLAND)
  private Boolean indicatieVestigingVanuitBuitenland;

  public static final String SERIALIZED_NAME_LOCATIEBESCHRIJVING = "locatiebeschrijving";
  @SerializedName(SERIALIZED_NAME_LOCATIEBESCHRIJVING)
  private String locatiebeschrijving;

  public static final String SERIALIZED_NAME_STRAATNAAM = "straatnaam";
  @SerializedName(SERIALIZED_NAME_STRAATNAAM)
  private String straatnaam;

  public static final String SERIALIZED_NAME_VANUIT_VERTROKKEN_ONBEKEND_WAARHEEN = "vanuitVertrokkenOnbekendWaarheen";
  @SerializedName(SERIALIZED_NAME_VANUIT_VERTROKKEN_ONBEKEND_WAARHEEN)
  private Boolean vanuitVertrokkenOnbekendWaarheen;

  public static final String SERIALIZED_NAME_DATUM_AANVANG_ADRESHOUDING = "datumAanvangAdreshouding";
  @SerializedName(SERIALIZED_NAME_DATUM_AANVANG_ADRESHOUDING)
  private DatumOnvolledig datumAanvangAdreshouding;

  public static final String SERIALIZED_NAME_DATUM_INGANG_GELDIGHEID = "datumIngangGeldigheid";
  @SerializedName(SERIALIZED_NAME_DATUM_INGANG_GELDIGHEID)
  private DatumOnvolledig datumIngangGeldigheid;

  public static final String SERIALIZED_NAME_DATUM_INSCHRIJVING_IN_GEMEENTE = "datumInschrijvingInGemeente";
  @SerializedName(SERIALIZED_NAME_DATUM_INSCHRIJVING_IN_GEMEENTE)
  private DatumOnvolledig datumInschrijvingInGemeente;

  public static final String SERIALIZED_NAME_DATUM_VESTIGING_IN_NEDERLAND = "datumVestigingInNederland";
  @SerializedName(SERIALIZED_NAME_DATUM_VESTIGING_IN_NEDERLAND)
  private DatumOnvolledig datumVestigingInNederland;

  public static final String SERIALIZED_NAME_GEMEENTE_VAN_INSCHRIJVING = "gemeenteVanInschrijving";
  @SerializedName(SERIALIZED_NAME_GEMEENTE_VAN_INSCHRIJVING)
  private Waardetabel gemeenteVanInschrijving;

  public static final String SERIALIZED_NAME_LAND_VANWAAR_INGESCHREVEN = "landVanwaarIngeschreven";
  @SerializedName(SERIALIZED_NAME_LAND_VANWAAR_INGESCHREVEN)
  private Waardetabel landVanwaarIngeschreven;

  public static final String SERIALIZED_NAME_VERBLIJF_BUITENLAND = "verblijfBuitenland";
  @SerializedName(SERIALIZED_NAME_VERBLIJF_BUITENLAND)
  private VerblijfBuitenland verblijfBuitenland;

  public static final String SERIALIZED_NAME_IN_ONDERZOEK = "inOnderzoek";
  @SerializedName(SERIALIZED_NAME_IN_ONDERZOEK)
  private VerblijfplaatsInOnderzoek inOnderzoek;


  public VerblijfplaatsAllOf identificatiecodeAdresseerbaarObject(String identificatiecodeAdresseerbaarObject) {
    
    this.identificatiecodeAdresseerbaarObject = identificatiecodeAdresseerbaarObject;
    return this;
  }

   /**
   * Een verblijfplaats kan een ligplaats, een standplaats of een verblijfsobject in een of meerdere panden zijn, waaraan respectievelijk een ligplaatsidentificatie, standplaatsidentificatie of verblijfsobjectidentificatie is toegekend. De Identificatiecode verblijfplaats is een combinatie van een viercijferige gemeentecode, een tweecijferige objecttypecode die aangeeft of de aanduiding een verblijfsobject (01), ligplaats (02) of standplaats (03) betreft en een voor het betreffende objecttype binnen een gemeente uniek tiencijferig volgnummer. Combinatie van de viercijferige &#39;gemeentecode&#39; (volgens GBA tabel 33, Gemeententabel), de tweecijferige &#39;objecttypecode&#39; en een voor het betreffende objecttype binnen een gemeente uniek tiencijferig &#39;objectvolgnummer&#39;.
   * @return identificatiecodeAdresseerbaarObject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0518200000366054", value = "Een verblijfplaats kan een ligplaats, een standplaats of een verblijfsobject in een of meerdere panden zijn, waaraan respectievelijk een ligplaatsidentificatie, standplaatsidentificatie of verblijfsobjectidentificatie is toegekend. De Identificatiecode verblijfplaats is een combinatie van een viercijferige gemeentecode, een tweecijferige objecttypecode die aangeeft of de aanduiding een verblijfsobject (01), ligplaats (02) of standplaats (03) betreft en een voor het betreffende objecttype binnen een gemeente uniek tiencijferig volgnummer. Combinatie van de viercijferige 'gemeentecode' (volgens GBA tabel 33, Gemeententabel), de tweecijferige 'objecttypecode' en een voor het betreffende objecttype binnen een gemeente uniek tiencijferig 'objectvolgnummer'.")

  public String getIdentificatiecodeAdresseerbaarObject() {
    return identificatiecodeAdresseerbaarObject;
  }


  public void setIdentificatiecodeAdresseerbaarObject(String identificatiecodeAdresseerbaarObject) {
    this.identificatiecodeAdresseerbaarObject = identificatiecodeAdresseerbaarObject;
  }


  public VerblijfplaatsAllOf indicatieVestigingVanuitBuitenland(Boolean indicatieVestigingVanuitBuitenland) {
    
    this.indicatieVestigingVanuitBuitenland = indicatieVestigingVanuitBuitenland;
    return this;
  }

   /**
   * Indicatie waarmee aangegeven wordt of de ingeschreven persoon zich vanuit het buitenland heeftingeschreven. Deze indicatie heeft als rol om aan te geven dat iemand zich vanuit het buitenland gevestigd heeft. Deze indicator wordt altijd meegeleverd als de waarde true is. Als de waarde false is wordt de indicator niet meegeleverd.
   * @return indicatieVestigingVanuitBuitenland
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicatie waarmee aangegeven wordt of de ingeschreven persoon zich vanuit het buitenland heeftingeschreven. Deze indicatie heeft als rol om aan te geven dat iemand zich vanuit het buitenland gevestigd heeft. Deze indicator wordt altijd meegeleverd als de waarde true is. Als de waarde false is wordt de indicator niet meegeleverd.")

  public Boolean getIndicatieVestigingVanuitBuitenland() {
    return indicatieVestigingVanuitBuitenland;
  }


  public void setIndicatieVestigingVanuitBuitenland(Boolean indicatieVestigingVanuitBuitenland) {
    this.indicatieVestigingVanuitBuitenland = indicatieVestigingVanuitBuitenland;
  }


  public VerblijfplaatsAllOf locatiebeschrijving(String locatiebeschrijving) {
    
    this.locatiebeschrijving = locatiebeschrijving;
    return this;
  }

   /**
   * Een geheel of gedeeltelijke omschrijving van de ligging van een object.
   * @return locatiebeschrijving
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Naast de derde brug", value = "Een geheel of gedeeltelijke omschrijving van de ligging van een object.")

  public String getLocatiebeschrijving() {
    return locatiebeschrijving;
  }


  public void setLocatiebeschrijving(String locatiebeschrijving) {
    this.locatiebeschrijving = locatiebeschrijving;
  }


  public VerblijfplaatsAllOf straatnaam(String straatnaam) {
    
    this.straatnaam = straatnaam;
    return this;
  }

   /**
   * De officiÃ«le straatnaam zoals door het bevoegd gemeentelijk orgaan is vastgesteld, zo nodig ingekort conform de specificaties van de NEN 5825. alle alfanumrieke tekens
   * @return straatnaam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "De officiÃ«le straatnaam zoals door het bevoegd gemeentelijk orgaan is vastgesteld, zo nodig ingekort conform de specificaties van de NEN 5825. alle alfanumrieke tekens")

  public String getStraatnaam() {
    return straatnaam;
  }


  public void setStraatnaam(String straatnaam) {
    this.straatnaam = straatnaam;
  }


  public VerblijfplaatsAllOf vanuitVertrokkenOnbekendWaarheen(Boolean vanuitVertrokkenOnbekendWaarheen) {
    
    this.vanuitVertrokkenOnbekendWaarheen = vanuitVertrokkenOnbekendWaarheen;
    return this;
  }

   /**
   * Indicatie waarmee aangegeven wordt dat de persoon is teruggekeerd uit een situatie van vertrokken onbekend waarheen
   * @return vanuitVertrokkenOnbekendWaarheen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicatie waarmee aangegeven wordt dat de persoon is teruggekeerd uit een situatie van vertrokken onbekend waarheen")

  public Boolean getVanuitVertrokkenOnbekendWaarheen() {
    return vanuitVertrokkenOnbekendWaarheen;
  }


  public void setVanuitVertrokkenOnbekendWaarheen(Boolean vanuitVertrokkenOnbekendWaarheen) {
    this.vanuitVertrokkenOnbekendWaarheen = vanuitVertrokkenOnbekendWaarheen;
  }


  public VerblijfplaatsAllOf datumAanvangAdreshouding(DatumOnvolledig datumAanvangAdreshouding) {
    
    this.datumAanvangAdreshouding = datumAanvangAdreshouding;
    return this;
  }

   /**
   * Get datumAanvangAdreshouding
   * @return datumAanvangAdreshouding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DatumOnvolledig getDatumAanvangAdreshouding() {
    return datumAanvangAdreshouding;
  }


  public void setDatumAanvangAdreshouding(DatumOnvolledig datumAanvangAdreshouding) {
    this.datumAanvangAdreshouding = datumAanvangAdreshouding;
  }


  public VerblijfplaatsAllOf datumIngangGeldigheid(DatumOnvolledig datumIngangGeldigheid) {
    
    this.datumIngangGeldigheid = datumIngangGeldigheid;
    return this;
  }

   /**
   * Get datumIngangGeldigheid
   * @return datumIngangGeldigheid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DatumOnvolledig getDatumIngangGeldigheid() {
    return datumIngangGeldigheid;
  }


  public void setDatumIngangGeldigheid(DatumOnvolledig datumIngangGeldigheid) {
    this.datumIngangGeldigheid = datumIngangGeldigheid;
  }


  public VerblijfplaatsAllOf datumInschrijvingInGemeente(DatumOnvolledig datumInschrijvingInGemeente) {
    
    this.datumInschrijvingInGemeente = datumInschrijvingInGemeente;
    return this;
  }

   /**
   * Get datumInschrijvingInGemeente
   * @return datumInschrijvingInGemeente
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DatumOnvolledig getDatumInschrijvingInGemeente() {
    return datumInschrijvingInGemeente;
  }


  public void setDatumInschrijvingInGemeente(DatumOnvolledig datumInschrijvingInGemeente) {
    this.datumInschrijvingInGemeente = datumInschrijvingInGemeente;
  }


  public VerblijfplaatsAllOf datumVestigingInNederland(DatumOnvolledig datumVestigingInNederland) {
    
    this.datumVestigingInNederland = datumVestigingInNederland;
    return this;
  }

   /**
   * Get datumVestigingInNederland
   * @return datumVestigingInNederland
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DatumOnvolledig getDatumVestigingInNederland() {
    return datumVestigingInNederland;
  }


  public void setDatumVestigingInNederland(DatumOnvolledig datumVestigingInNederland) {
    this.datumVestigingInNederland = datumVestigingInNederland;
  }


  public VerblijfplaatsAllOf gemeenteVanInschrijving(Waardetabel gemeenteVanInschrijving) {
    
    this.gemeenteVanInschrijving = gemeenteVanInschrijving;
    return this;
  }

   /**
   * Get gemeenteVanInschrijving
   * @return gemeenteVanInschrijving
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Waardetabel getGemeenteVanInschrijving() {
    return gemeenteVanInschrijving;
  }


  public void setGemeenteVanInschrijving(Waardetabel gemeenteVanInschrijving) {
    this.gemeenteVanInschrijving = gemeenteVanInschrijving;
  }


  public VerblijfplaatsAllOf landVanwaarIngeschreven(Waardetabel landVanwaarIngeschreven) {
    
    this.landVanwaarIngeschreven = landVanwaarIngeschreven;
    return this;
  }

   /**
   * Get landVanwaarIngeschreven
   * @return landVanwaarIngeschreven
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Waardetabel getLandVanwaarIngeschreven() {
    return landVanwaarIngeschreven;
  }


  public void setLandVanwaarIngeschreven(Waardetabel landVanwaarIngeschreven) {
    this.landVanwaarIngeschreven = landVanwaarIngeschreven;
  }


  public VerblijfplaatsAllOf verblijfBuitenland(VerblijfBuitenland verblijfBuitenland) {
    
    this.verblijfBuitenland = verblijfBuitenland;
    return this;
  }

   /**
   * Get verblijfBuitenland
   * @return verblijfBuitenland
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VerblijfBuitenland getVerblijfBuitenland() {
    return verblijfBuitenland;
  }


  public void setVerblijfBuitenland(VerblijfBuitenland verblijfBuitenland) {
    this.verblijfBuitenland = verblijfBuitenland;
  }


  public VerblijfplaatsAllOf inOnderzoek(VerblijfplaatsInOnderzoek inOnderzoek) {
    
    this.inOnderzoek = inOnderzoek;
    return this;
  }

   /**
   * Get inOnderzoek
   * @return inOnderzoek
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VerblijfplaatsInOnderzoek getInOnderzoek() {
    return inOnderzoek;
  }


  public void setInOnderzoek(VerblijfplaatsInOnderzoek inOnderzoek) {
    this.inOnderzoek = inOnderzoek;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerblijfplaatsAllOf verblijfplaatsAllOf = (VerblijfplaatsAllOf) o;
    return Objects.equals(this.identificatiecodeAdresseerbaarObject, verblijfplaatsAllOf.identificatiecodeAdresseerbaarObject) &&
        Objects.equals(this.indicatieVestigingVanuitBuitenland, verblijfplaatsAllOf.indicatieVestigingVanuitBuitenland) &&
        Objects.equals(this.locatiebeschrijving, verblijfplaatsAllOf.locatiebeschrijving) &&
        Objects.equals(this.straatnaam, verblijfplaatsAllOf.straatnaam) &&
        Objects.equals(this.vanuitVertrokkenOnbekendWaarheen, verblijfplaatsAllOf.vanuitVertrokkenOnbekendWaarheen) &&
        Objects.equals(this.datumAanvangAdreshouding, verblijfplaatsAllOf.datumAanvangAdreshouding) &&
        Objects.equals(this.datumIngangGeldigheid, verblijfplaatsAllOf.datumIngangGeldigheid) &&
        Objects.equals(this.datumInschrijvingInGemeente, verblijfplaatsAllOf.datumInschrijvingInGemeente) &&
        Objects.equals(this.datumVestigingInNederland, verblijfplaatsAllOf.datumVestigingInNederland) &&
        Objects.equals(this.gemeenteVanInschrijving, verblijfplaatsAllOf.gemeenteVanInschrijving) &&
        Objects.equals(this.landVanwaarIngeschreven, verblijfplaatsAllOf.landVanwaarIngeschreven) &&
        Objects.equals(this.verblijfBuitenland, verblijfplaatsAllOf.verblijfBuitenland) &&
        Objects.equals(this.inOnderzoek, verblijfplaatsAllOf.inOnderzoek);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identificatiecodeAdresseerbaarObject, indicatieVestigingVanuitBuitenland, locatiebeschrijving, straatnaam, vanuitVertrokkenOnbekendWaarheen, datumAanvangAdreshouding, datumIngangGeldigheid, datumInschrijvingInGemeente, datumVestigingInNederland, gemeenteVanInschrijving, landVanwaarIngeschreven, verblijfBuitenland, inOnderzoek);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerblijfplaatsAllOf {\n");
    sb.append("    identificatiecodeAdresseerbaarObject: ").append(toIndentedString(identificatiecodeAdresseerbaarObject)).append("\n");
    sb.append("    indicatieVestigingVanuitBuitenland: ").append(toIndentedString(indicatieVestigingVanuitBuitenland)).append("\n");
    sb.append("    locatiebeschrijving: ").append(toIndentedString(locatiebeschrijving)).append("\n");
    sb.append("    straatnaam: ").append(toIndentedString(straatnaam)).append("\n");
    sb.append("    vanuitVertrokkenOnbekendWaarheen: ").append(toIndentedString(vanuitVertrokkenOnbekendWaarheen)).append("\n");
    sb.append("    datumAanvangAdreshouding: ").append(toIndentedString(datumAanvangAdreshouding)).append("\n");
    sb.append("    datumIngangGeldigheid: ").append(toIndentedString(datumIngangGeldigheid)).append("\n");
    sb.append("    datumInschrijvingInGemeente: ").append(toIndentedString(datumInschrijvingInGemeente)).append("\n");
    sb.append("    datumVestigingInNederland: ").append(toIndentedString(datumVestigingInNederland)).append("\n");
    sb.append("    gemeenteVanInschrijving: ").append(toIndentedString(gemeenteVanInschrijving)).append("\n");
    sb.append("    landVanwaarIngeschreven: ").append(toIndentedString(landVanwaarIngeschreven)).append("\n");
    sb.append("    verblijfBuitenland: ").append(toIndentedString(verblijfBuitenland)).append("\n");
    sb.append("    inOnderzoek: ").append(toIndentedString(inOnderzoek)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

