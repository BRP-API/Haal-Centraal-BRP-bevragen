/* 
 * Bevragingen ingeschreven personen
 *
 * API voor het ontsluiten van gegevens van ingeschreven personen en aanverwante gegevens uit de GBA en RNI. Met deze API worden de actuele gegevens van ingeschreven personen, hun kinderen, partners en ouders ontsloten. <br> Heeft een persoon bijvoorbeeld geen geldige nationaliteit, dan wordt nationaliteit niet geretourneerd. <br> Heeft een persoon een beÃ«indigd partnerschap of huwelijk, dan wordt de partner niet geretourneerd. <br> <br> Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/tree/master/features) voor nadere toelichting. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Indicators om aan te geven dat de gegevens over het verblijf en adres van de INGESCHREVEN NATUURLIJK PERSOON in onderzoek zijn. Elementen van het GBA-adres zelf (Dat zou eigenlijk een BAG-adres moeten zijn) kunnen niet in onderzoek zijn. Wel de relatie naar de nummeraanduding. Dat wordt gedaan door de identificatiecodeNummeraanduiding in onderzoek te zetten. Zie de [functionele specificaties](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/blob/master/features/in_onderzoek.feature)
    /// </summary>
    [DataContract]
    public partial class VerblijfplaatsInOnderzoek :  IEquatable<VerblijfplaatsInOnderzoek>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VerblijfplaatsInOnderzoek" /> class.
        /// </summary>
        /// <param name="aanduidingBijHuisnummer">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="datumAanvangAdreshouding">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="datumIngangGeldigheid">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="datumInschrijvingInGemeente">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="datumVestigingInNederland">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="functieAdres">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="gemeenteVanInschrijving">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="huisletter">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="huisnummer">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="huisnummertoevoeging">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="identificatiecodeNummeraanduiding">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="identificatiecodeAdresseerbaarObject">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="landVanwaarIngeschreven">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="locatiebeschrijving">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="naamOpenbareRuimte">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="postcode">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="straatnaam">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="verblijfBuitenland">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="woonplaatsnaam">Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is..</param>
        /// <param name="datumIngangOnderzoek">datumIngangOnderzoek.</param>
        public VerblijfplaatsInOnderzoek(bool aanduidingBijHuisnummer = default(bool), bool datumAanvangAdreshouding = default(bool), bool datumIngangGeldigheid = default(bool), bool datumInschrijvingInGemeente = default(bool), bool datumVestigingInNederland = default(bool), bool functieAdres = default(bool), bool gemeenteVanInschrijving = default(bool), bool huisletter = default(bool), bool huisnummer = default(bool), bool huisnummertoevoeging = default(bool), bool identificatiecodeNummeraanduiding = default(bool), bool identificatiecodeAdresseerbaarObject = default(bool), bool landVanwaarIngeschreven = default(bool), bool locatiebeschrijving = default(bool), bool naamOpenbareRuimte = default(bool), bool postcode = default(bool), bool straatnaam = default(bool), bool verblijfBuitenland = default(bool), bool woonplaatsnaam = default(bool), DatumOnvolledig datumIngangOnderzoek = default(DatumOnvolledig))
        {
            this.AanduidingBijHuisnummer = aanduidingBijHuisnummer;
            this.DatumAanvangAdreshouding = datumAanvangAdreshouding;
            this.DatumIngangGeldigheid = datumIngangGeldigheid;
            this.DatumInschrijvingInGemeente = datumInschrijvingInGemeente;
            this.DatumVestigingInNederland = datumVestigingInNederland;
            this.FunctieAdres = functieAdres;
            this.GemeenteVanInschrijving = gemeenteVanInschrijving;
            this.Huisletter = huisletter;
            this.Huisnummer = huisnummer;
            this.Huisnummertoevoeging = huisnummertoevoeging;
            this.IdentificatiecodeNummeraanduiding = identificatiecodeNummeraanduiding;
            this.IdentificatiecodeAdresseerbaarObject = identificatiecodeAdresseerbaarObject;
            this.LandVanwaarIngeschreven = landVanwaarIngeschreven;
            this.Locatiebeschrijving = locatiebeschrijving;
            this.NaamOpenbareRuimte = naamOpenbareRuimte;
            this.Postcode = postcode;
            this.Straatnaam = straatnaam;
            this.VerblijfBuitenland = verblijfBuitenland;
            this.Woonplaatsnaam = woonplaatsnaam;
            this.DatumIngangOnderzoek = datumIngangOnderzoek;
        }
        
        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="aanduidingBijHuisnummer", EmitDefaultValue=false)]
        public bool AanduidingBijHuisnummer { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="datumAanvangAdreshouding", EmitDefaultValue=false)]
        public bool DatumAanvangAdreshouding { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="datumIngangGeldigheid", EmitDefaultValue=false)]
        public bool DatumIngangGeldigheid { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="datumInschrijvingInGemeente", EmitDefaultValue=false)]
        public bool DatumInschrijvingInGemeente { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="datumVestigingInNederland", EmitDefaultValue=false)]
        public bool DatumVestigingInNederland { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="functieAdres", EmitDefaultValue=false)]
        public bool FunctieAdres { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="gemeenteVanInschrijving", EmitDefaultValue=false)]
        public bool GemeenteVanInschrijving { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="huisletter", EmitDefaultValue=false)]
        public bool Huisletter { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="huisnummer", EmitDefaultValue=false)]
        public bool Huisnummer { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="huisnummertoevoeging", EmitDefaultValue=false)]
        public bool Huisnummertoevoeging { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="identificatiecodeNummeraanduiding", EmitDefaultValue=false)]
        public bool IdentificatiecodeNummeraanduiding { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="identificatiecodeAdresseerbaarObject", EmitDefaultValue=false)]
        public bool IdentificatiecodeAdresseerbaarObject { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="landVanwaarIngeschreven", EmitDefaultValue=false)]
        public bool LandVanwaarIngeschreven { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="locatiebeschrijving", EmitDefaultValue=false)]
        public bool Locatiebeschrijving { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="naamOpenbareRuimte", EmitDefaultValue=false)]
        public bool NaamOpenbareRuimte { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="postcode", EmitDefaultValue=false)]
        public bool Postcode { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="straatnaam", EmitDefaultValue=false)]
        public bool Straatnaam { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="verblijfBuitenland", EmitDefaultValue=false)]
        public bool VerblijfBuitenland { get; set; }

        /// <summary>
        /// Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.
        /// </summary>
        /// <value>Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.</value>
        [DataMember(Name="woonplaatsnaam", EmitDefaultValue=false)]
        public bool Woonplaatsnaam { get; set; }

        /// <summary>
        /// Gets or Sets DatumIngangOnderzoek
        /// </summary>
        [DataMember(Name="datumIngangOnderzoek", EmitDefaultValue=false)]
        public DatumOnvolledig DatumIngangOnderzoek { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class VerblijfplaatsInOnderzoek {\n");
            sb.Append("  AanduidingBijHuisnummer: ").Append(AanduidingBijHuisnummer).Append("\n");
            sb.Append("  DatumAanvangAdreshouding: ").Append(DatumAanvangAdreshouding).Append("\n");
            sb.Append("  DatumIngangGeldigheid: ").Append(DatumIngangGeldigheid).Append("\n");
            sb.Append("  DatumInschrijvingInGemeente: ").Append(DatumInschrijvingInGemeente).Append("\n");
            sb.Append("  DatumVestigingInNederland: ").Append(DatumVestigingInNederland).Append("\n");
            sb.Append("  FunctieAdres: ").Append(FunctieAdres).Append("\n");
            sb.Append("  GemeenteVanInschrijving: ").Append(GemeenteVanInschrijving).Append("\n");
            sb.Append("  Huisletter: ").Append(Huisletter).Append("\n");
            sb.Append("  Huisnummer: ").Append(Huisnummer).Append("\n");
            sb.Append("  Huisnummertoevoeging: ").Append(Huisnummertoevoeging).Append("\n");
            sb.Append("  IdentificatiecodeNummeraanduiding: ").Append(IdentificatiecodeNummeraanduiding).Append("\n");
            sb.Append("  IdentificatiecodeAdresseerbaarObject: ").Append(IdentificatiecodeAdresseerbaarObject).Append("\n");
            sb.Append("  LandVanwaarIngeschreven: ").Append(LandVanwaarIngeschreven).Append("\n");
            sb.Append("  Locatiebeschrijving: ").Append(Locatiebeschrijving).Append("\n");
            sb.Append("  NaamOpenbareRuimte: ").Append(NaamOpenbareRuimte).Append("\n");
            sb.Append("  Postcode: ").Append(Postcode).Append("\n");
            sb.Append("  Straatnaam: ").Append(Straatnaam).Append("\n");
            sb.Append("  VerblijfBuitenland: ").Append(VerblijfBuitenland).Append("\n");
            sb.Append("  Woonplaatsnaam: ").Append(Woonplaatsnaam).Append("\n");
            sb.Append("  DatumIngangOnderzoek: ").Append(DatumIngangOnderzoek).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VerblijfplaatsInOnderzoek);
        }

        /// <summary>
        /// Returns true if VerblijfplaatsInOnderzoek instances are equal
        /// </summary>
        /// <param name="input">Instance of VerblijfplaatsInOnderzoek to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VerblijfplaatsInOnderzoek input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AanduidingBijHuisnummer == input.AanduidingBijHuisnummer ||
                    this.AanduidingBijHuisnummer.Equals(input.AanduidingBijHuisnummer)
                ) && 
                (
                    this.DatumAanvangAdreshouding == input.DatumAanvangAdreshouding ||
                    this.DatumAanvangAdreshouding.Equals(input.DatumAanvangAdreshouding)
                ) && 
                (
                    this.DatumIngangGeldigheid == input.DatumIngangGeldigheid ||
                    this.DatumIngangGeldigheid.Equals(input.DatumIngangGeldigheid)
                ) && 
                (
                    this.DatumInschrijvingInGemeente == input.DatumInschrijvingInGemeente ||
                    this.DatumInschrijvingInGemeente.Equals(input.DatumInschrijvingInGemeente)
                ) && 
                (
                    this.DatumVestigingInNederland == input.DatumVestigingInNederland ||
                    this.DatumVestigingInNederland.Equals(input.DatumVestigingInNederland)
                ) && 
                (
                    this.FunctieAdres == input.FunctieAdres ||
                    this.FunctieAdres.Equals(input.FunctieAdres)
                ) && 
                (
                    this.GemeenteVanInschrijving == input.GemeenteVanInschrijving ||
                    this.GemeenteVanInschrijving.Equals(input.GemeenteVanInschrijving)
                ) && 
                (
                    this.Huisletter == input.Huisletter ||
                    this.Huisletter.Equals(input.Huisletter)
                ) && 
                (
                    this.Huisnummer == input.Huisnummer ||
                    this.Huisnummer.Equals(input.Huisnummer)
                ) && 
                (
                    this.Huisnummertoevoeging == input.Huisnummertoevoeging ||
                    this.Huisnummertoevoeging.Equals(input.Huisnummertoevoeging)
                ) && 
                (
                    this.IdentificatiecodeNummeraanduiding == input.IdentificatiecodeNummeraanduiding ||
                    this.IdentificatiecodeNummeraanduiding.Equals(input.IdentificatiecodeNummeraanduiding)
                ) && 
                (
                    this.IdentificatiecodeAdresseerbaarObject == input.IdentificatiecodeAdresseerbaarObject ||
                    this.IdentificatiecodeAdresseerbaarObject.Equals(input.IdentificatiecodeAdresseerbaarObject)
                ) && 
                (
                    this.LandVanwaarIngeschreven == input.LandVanwaarIngeschreven ||
                    this.LandVanwaarIngeschreven.Equals(input.LandVanwaarIngeschreven)
                ) && 
                (
                    this.Locatiebeschrijving == input.Locatiebeschrijving ||
                    this.Locatiebeschrijving.Equals(input.Locatiebeschrijving)
                ) && 
                (
                    this.NaamOpenbareRuimte == input.NaamOpenbareRuimte ||
                    this.NaamOpenbareRuimte.Equals(input.NaamOpenbareRuimte)
                ) && 
                (
                    this.Postcode == input.Postcode ||
                    this.Postcode.Equals(input.Postcode)
                ) && 
                (
                    this.Straatnaam == input.Straatnaam ||
                    this.Straatnaam.Equals(input.Straatnaam)
                ) && 
                (
                    this.VerblijfBuitenland == input.VerblijfBuitenland ||
                    this.VerblijfBuitenland.Equals(input.VerblijfBuitenland)
                ) && 
                (
                    this.Woonplaatsnaam == input.Woonplaatsnaam ||
                    this.Woonplaatsnaam.Equals(input.Woonplaatsnaam)
                ) && 
                (
                    this.DatumIngangOnderzoek == input.DatumIngangOnderzoek ||
                    (this.DatumIngangOnderzoek != null &&
                    this.DatumIngangOnderzoek.Equals(input.DatumIngangOnderzoek))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.AanduidingBijHuisnummer.GetHashCode();
                hashCode = hashCode * 59 + this.DatumAanvangAdreshouding.GetHashCode();
                hashCode = hashCode * 59 + this.DatumIngangGeldigheid.GetHashCode();
                hashCode = hashCode * 59 + this.DatumInschrijvingInGemeente.GetHashCode();
                hashCode = hashCode * 59 + this.DatumVestigingInNederland.GetHashCode();
                hashCode = hashCode * 59 + this.FunctieAdres.GetHashCode();
                hashCode = hashCode * 59 + this.GemeenteVanInschrijving.GetHashCode();
                hashCode = hashCode * 59 + this.Huisletter.GetHashCode();
                hashCode = hashCode * 59 + this.Huisnummer.GetHashCode();
                hashCode = hashCode * 59 + this.Huisnummertoevoeging.GetHashCode();
                hashCode = hashCode * 59 + this.IdentificatiecodeNummeraanduiding.GetHashCode();
                hashCode = hashCode * 59 + this.IdentificatiecodeAdresseerbaarObject.GetHashCode();
                hashCode = hashCode * 59 + this.LandVanwaarIngeschreven.GetHashCode();
                hashCode = hashCode * 59 + this.Locatiebeschrijving.GetHashCode();
                hashCode = hashCode * 59 + this.NaamOpenbareRuimte.GetHashCode();
                hashCode = hashCode * 59 + this.Postcode.GetHashCode();
                hashCode = hashCode * 59 + this.Straatnaam.GetHashCode();
                hashCode = hashCode * 59 + this.VerblijfBuitenland.GetHashCode();
                hashCode = hashCode * 59 + this.Woonplaatsnaam.GetHashCode();
                if (this.DatumIngangOnderzoek != null)
                    hashCode = hashCode * 59 + this.DatumIngangOnderzoek.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
