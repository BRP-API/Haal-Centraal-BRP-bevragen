/* 
 * Bevragingen ingeschreven personen
 *
 * API voor het ontsluiten van gegevens van ingeschreven personen en aanverwante gegevens uit de GBA en RNI. Met deze API worden de actuele gegevens van ingeschreven personen, hun kinderen, partners en ouders ontsloten. <br> Heeft een persoon bijvoorbeeld geen geldige nationaliteit, dan wordt nationaliteit niet geretourneerd. <br> Heeft een persoon een beÃ«indigd partnerschap of huwelijk, dan wordt de partner niet geretourneerd. <br> <br> Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/tree/master/features) voor nadere toelichting. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IHistorieApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de nationaliteithistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de nationaliteit geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de nationaliteiten geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle nationaliteiten van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>NationaliteithistorieHalCollectie</returns>
        NationaliteithistorieHalCollectie Getnationaliteithistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de nationaliteithistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de nationaliteit geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de nationaliteiten geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle nationaliteiten van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of NationaliteithistorieHalCollectie</returns>
        ApiResponse<NationaliteithistorieHalCollectie> GetnationaliteithistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de partnerhistorie van een ingeschreven persoon. Van een ingeschreven persoon worden partners waarmee in het verleden relaties geregistreerd zijn geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet).&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>PartnerhistorieHalCollectie</returns>
        PartnerhistorieHalCollectie Getpartnerhistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de partnerhistorie van een ingeschreven persoon. Van een ingeschreven persoon worden partners waarmee in het verleden relaties geregistreerd zijn geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet).&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of PartnerhistorieHalCollectie</returns>
        ApiResponse<PartnerhistorieHalCollectie> GetpartnerhistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd waar de persoon binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet) heeft verbleven. Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>VerblijfplaatshistorieHalCollectie</returns>
        VerblijfplaatshistorieHalCollectie Getverblijfplaatshistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd waar de persoon binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet) heeft verbleven. Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of VerblijfplaatshistorieHalCollectie</returns>
        ApiResponse<VerblijfplaatshistorieHalCollectie> GetverblijfplaatshistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfstitelhistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfstitel geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de verblijfstitels geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfstitels van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>VerblijfstitelhistorieHalCollectie</returns>
        VerblijfstitelhistorieHalCollectie Getverblijfstitelhistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfstitelhistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfstitel geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de verblijfstitels geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfstitels van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of VerblijfstitelhistorieHalCollectie</returns>
        ApiResponse<VerblijfstitelhistorieHalCollectie> GetverblijfstitelhistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IHistorieApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de nationaliteithistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de nationaliteit geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de nationaliteiten geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle nationaliteiten van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of NationaliteithistorieHalCollectie</returns>
        System.Threading.Tasks.Task<NationaliteithistorieHalCollectie> GetnationaliteithistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de nationaliteithistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de nationaliteit geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de nationaliteiten geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle nationaliteiten van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of ApiResponse (NationaliteithistorieHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<NationaliteithistorieHalCollectie>> GetnationaliteithistorieAsyncWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de partnerhistorie van een ingeschreven persoon. Van een ingeschreven persoon worden partners waarmee in het verleden relaties geregistreerd zijn geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet).&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of PartnerhistorieHalCollectie</returns>
        System.Threading.Tasks.Task<PartnerhistorieHalCollectie> GetpartnerhistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de partnerhistorie van een ingeschreven persoon. Van een ingeschreven persoon worden partners waarmee in het verleden relaties geregistreerd zijn geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet).&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of ApiResponse (PartnerhistorieHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<PartnerhistorieHalCollectie>> GetpartnerhistorieAsyncWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd waar de persoon binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet) heeft verbleven. Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of VerblijfplaatshistorieHalCollectie</returns>
        System.Threading.Tasks.Task<VerblijfplaatshistorieHalCollectie> GetverblijfplaatshistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd waar de persoon binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet) heeft verbleven. Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of ApiResponse (VerblijfplaatshistorieHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<VerblijfplaatshistorieHalCollectie>> GetverblijfplaatshistorieAsyncWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfstitelhistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfstitel geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de verblijfstitels geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfstitels van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of VerblijfstitelhistorieHalCollectie</returns>
        System.Threading.Tasks.Task<VerblijfstitelhistorieHalCollectie> GetverblijfstitelhistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfstitelhistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfstitel geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de verblijfstitels geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfstitels van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of ApiResponse (VerblijfstitelhistorieHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<VerblijfstitelhistorieHalCollectie>> GetverblijfstitelhistorieAsyncWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IHistorieApi : IHistorieApiSync, IHistorieApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class HistorieApi : IHistorieApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="HistorieApi"/> class.
        /// </summary>
        /// <returns></returns>
        public HistorieApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HistorieApi"/> class.
        /// </summary>
        /// <returns></returns>
        public HistorieApi(String basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HistorieApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public HistorieApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HistorieApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public HistorieApi(Org.OpenAPITools.Client.ISynchronousClient client,Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de nationaliteithistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de nationaliteit geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de nationaliteiten geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle nationaliteiten van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>NationaliteithistorieHalCollectie</returns>
        public NationaliteithistorieHalCollectie Getnationaliteithistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
             Org.OpenAPITools.Client.ApiResponse<NationaliteithistorieHalCollectie> localVarResponse = GetnationaliteithistorieWithHttpInfo(burgerservicenummer, fields, peildatum, datumvan, datumtotenmet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de nationaliteithistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de nationaliteit geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de nationaliteiten geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle nationaliteiten van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of NationaliteithistorieHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse< NationaliteithistorieHalCollectie > GetnationaliteithistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'burgerservicenummer' when calling HistorieApi->Getnationaliteithistorie");

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("burgerservicenummer", Org.OpenAPITools.Client.ClientUtils.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumvan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumvan", datumvan));
            }
            if (datumtotenmet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumtotenmet", datumtotenmet));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get< NationaliteithistorieHalCollectie >("/ingeschrevenpersonen/{burgerservicenummer}/nationaliteithistorie", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getnationaliteithistorie", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de nationaliteithistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de nationaliteit geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de nationaliteiten geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle nationaliteiten van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of NationaliteithistorieHalCollectie</returns>
        public async System.Threading.Tasks.Task<NationaliteithistorieHalCollectie> GetnationaliteithistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
             Org.OpenAPITools.Client.ApiResponse<NationaliteithistorieHalCollectie> localVarResponse = await GetnationaliteithistorieAsyncWithHttpInfo(burgerservicenummer, fields, peildatum, datumvan, datumtotenmet);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de nationaliteithistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de nationaliteit geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de nationaliteiten geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle nationaliteiten van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of ApiResponse (NationaliteithistorieHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<NationaliteithistorieHalCollectie>> GetnationaliteithistorieAsyncWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'burgerservicenummer' when calling HistorieApi->Getnationaliteithistorie");


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("burgerservicenummer", Org.OpenAPITools.Client.ClientUtils.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumvan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumvan", datumvan));
            }
            if (datumtotenmet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumtotenmet", datumtotenmet));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<NationaliteithistorieHalCollectie>("/ingeschrevenpersonen/{burgerservicenummer}/nationaliteithistorie", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getnationaliteithistorie", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de partnerhistorie van een ingeschreven persoon. Van een ingeschreven persoon worden partners waarmee in het verleden relaties geregistreerd zijn geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet).&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>PartnerhistorieHalCollectie</returns>
        public PartnerhistorieHalCollectie Getpartnerhistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
             Org.OpenAPITools.Client.ApiResponse<PartnerhistorieHalCollectie> localVarResponse = GetpartnerhistorieWithHttpInfo(burgerservicenummer, fields, peildatum, datumvan, datumtotenmet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de partnerhistorie van een ingeschreven persoon. Van een ingeschreven persoon worden partners waarmee in het verleden relaties geregistreerd zijn geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet).&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of PartnerhistorieHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse< PartnerhistorieHalCollectie > GetpartnerhistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'burgerservicenummer' when calling HistorieApi->Getpartnerhistorie");

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("burgerservicenummer", Org.OpenAPITools.Client.ClientUtils.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumvan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumvan", datumvan));
            }
            if (datumtotenmet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumtotenmet", datumtotenmet));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get< PartnerhistorieHalCollectie >("/ingeschrevenpersonen/{burgerservicenummer}/partnerhistorie", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getpartnerhistorie", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de partnerhistorie van een ingeschreven persoon. Van een ingeschreven persoon worden partners waarmee in het verleden relaties geregistreerd zijn geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet).&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of PartnerhistorieHalCollectie</returns>
        public async System.Threading.Tasks.Task<PartnerhistorieHalCollectie> GetpartnerhistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
             Org.OpenAPITools.Client.ApiResponse<PartnerhistorieHalCollectie> localVarResponse = await GetpartnerhistorieAsyncWithHttpInfo(burgerservicenummer, fields, peildatum, datumvan, datumtotenmet);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de partnerhistorie van een ingeschreven persoon. Van een ingeschreven persoon worden partners waarmee in het verleden relaties geregistreerd zijn geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet).&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of ApiResponse (PartnerhistorieHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<PartnerhistorieHalCollectie>> GetpartnerhistorieAsyncWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'burgerservicenummer' when calling HistorieApi->Getpartnerhistorie");


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("burgerservicenummer", Org.OpenAPITools.Client.ClientUtils.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumvan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumvan", datumvan));
            }
            if (datumtotenmet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumtotenmet", datumtotenmet));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<PartnerhistorieHalCollectie>("/ingeschrevenpersonen/{burgerservicenummer}/partnerhistorie", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getpartnerhistorie", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd waar de persoon binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet) heeft verbleven. Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>VerblijfplaatshistorieHalCollectie</returns>
        public VerblijfplaatshistorieHalCollectie Getverblijfplaatshistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
             Org.OpenAPITools.Client.ApiResponse<VerblijfplaatshistorieHalCollectie> localVarResponse = GetverblijfplaatshistorieWithHttpInfo(burgerservicenummer, fields, peildatum, datumvan, datumtotenmet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd waar de persoon binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet) heeft verbleven. Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of VerblijfplaatshistorieHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse< VerblijfplaatshistorieHalCollectie > GetverblijfplaatshistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'burgerservicenummer' when calling HistorieApi->Getverblijfplaatshistorie");

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("burgerservicenummer", Org.OpenAPITools.Client.ClientUtils.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumvan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumvan", datumvan));
            }
            if (datumtotenmet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumtotenmet", datumtotenmet));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get< VerblijfplaatshistorieHalCollectie >("/ingeschrevenpersonen/{burgerservicenummer}/verblijfplaatshistorie", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getverblijfplaatshistorie", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd waar de persoon binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet) heeft verbleven. Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of VerblijfplaatshistorieHalCollectie</returns>
        public async System.Threading.Tasks.Task<VerblijfplaatshistorieHalCollectie> GetverblijfplaatshistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
             Org.OpenAPITools.Client.ApiResponse<VerblijfplaatshistorieHalCollectie> localVarResponse = await GetverblijfplaatshistorieAsyncWithHttpInfo(burgerservicenummer, fields, peildatum, datumvan, datumtotenmet);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd waar de persoon binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet) heeft verbleven. Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of ApiResponse (VerblijfplaatshistorieHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<VerblijfplaatshistorieHalCollectie>> GetverblijfplaatshistorieAsyncWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'burgerservicenummer' when calling HistorieApi->Getverblijfplaatshistorie");


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("burgerservicenummer", Org.OpenAPITools.Client.ClientUtils.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumvan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumvan", datumvan));
            }
            if (datumtotenmet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumtotenmet", datumtotenmet));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<VerblijfplaatshistorieHalCollectie>("/ingeschrevenpersonen/{burgerservicenummer}/verblijfplaatshistorie", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getverblijfplaatshistorie", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfstitelhistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfstitel geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de verblijfstitels geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfstitels van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>VerblijfstitelhistorieHalCollectie</returns>
        public VerblijfstitelhistorieHalCollectie Getverblijfstitelhistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
             Org.OpenAPITools.Client.ApiResponse<VerblijfstitelhistorieHalCollectie> localVarResponse = GetverblijfstitelhistorieWithHttpInfo(burgerservicenummer, fields, peildatum, datumvan, datumtotenmet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfstitelhistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfstitel geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de verblijfstitels geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfstitels van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of VerblijfstitelhistorieHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse< VerblijfstitelhistorieHalCollectie > GetverblijfstitelhistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'burgerservicenummer' when calling HistorieApi->Getverblijfstitelhistorie");

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("burgerservicenummer", Org.OpenAPITools.Client.ClientUtils.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumvan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumvan", datumvan));
            }
            if (datumtotenmet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumtotenmet", datumtotenmet));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get< VerblijfstitelhistorieHalCollectie >("/ingeschrevenpersonen/{burgerservicenummer}/verblijfstitelhistorie", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getverblijfstitelhistorie", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfstitelhistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfstitel geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de verblijfstitels geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfstitels van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of VerblijfstitelhistorieHalCollectie</returns>
        public async System.Threading.Tasks.Task<VerblijfstitelhistorieHalCollectie> GetverblijfstitelhistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
             Org.OpenAPITools.Client.ApiResponse<VerblijfstitelhistorieHalCollectie> localVarResponse = await GetverblijfstitelhistorieAsyncWithHttpInfo(burgerservicenummer, fields, peildatum, datumvan, datumtotenmet);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  &lt;body&gt;&lt;p&gt;Het ophalen van de verblijfstitelhistorie van een ingeschreven persoon. Van een ingeschreven persoon wordt de verblijfstitel geretourneerd die de persoon had op de (optioneel) opgegeven peildatum of worden de verblijfstitels geretourneerd die de persoon had binnen de (optioneel) opgegeven periode (datumvan tot en met datumtotenmet). Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfstitels van de persoon teruggegeven.&lt;/p&gt;&lt;p&gt;Er wordt aflopend gesorteerd op datumingang, zodat de meest actuele bovenaan staat.&lt;/p&gt;&lt;/body&gt;
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer"></param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.1.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumvan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumtotenmet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>Task of ApiResponse (VerblijfstitelhistorieHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<VerblijfstitelhistorieHalCollectie>> GetverblijfstitelhistorieAsyncWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumvan = default(DateTime?), DateTime? datumtotenmet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'burgerservicenummer' when calling HistorieApi->Getverblijfstitelhistorie");


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("burgerservicenummer", Org.OpenAPITools.Client.ClientUtils.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "fields", fields));
            }
            if (peildatum != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "peildatum", peildatum));
            }
            if (datumvan != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumvan", datumvan));
            }
            if (datumtotenmet != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "datumtotenmet", datumtotenmet));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<VerblijfstitelhistorieHalCollectie>("/ingeschrevenpersonen/{burgerservicenummer}/verblijfstitelhistorie", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Getverblijfstitelhistorie", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
