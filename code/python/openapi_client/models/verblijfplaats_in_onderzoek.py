# coding: utf-8

"""
    Bevragen Ingeschreven Personen

    API voor het bevragen van ingeschreven personen uit de basisregistratie personen (BRP), inclusief de registratie niet-ingezeten (RNI). Met deze API kun je personen zoeken en actuele gegevens over personen, kinderen, partners en ouders raadplegen.  Gegevens die er niet zijn of niet actueel zijn krijg je niet terug. Heeft een persoon bijvoorbeeld geen geldige nationaliteit, en alleen een beÃ«indigd partnerschap, dan krijg je geen gegevens over nationaliteit en partner.  Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/tree/v1.0.0/features) voor nadere toelichting.   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class VerblijfplaatsInOnderzoek(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'aanduiding_bij_huisnummer': 'bool',
        'datum_aanvang_adreshouding': 'bool',
        'datum_ingang_geldigheid': 'bool',
        'datum_inschrijving_in_gemeente': 'bool',
        'datum_vestiging_in_nederland': 'bool',
        'functie_adres': 'bool',
        'gemeente_van_inschrijving': 'bool',
        'huisletter': 'bool',
        'huisnummer': 'bool',
        'huisnummertoevoeging': 'bool',
        'nummeraanduiding_identificatie': 'bool',
        'adresseerbaar_object_identificatie': 'bool',
        'land_vanwaar_ingeschreven': 'bool',
        'locatiebeschrijving': 'bool',
        'straat': 'bool',
        'postcode': 'bool',
        'korte_naam': 'bool',
        'verblijf_buitenland': 'bool',
        'woonplaats': 'bool',
        'datum_ingang_onderzoek': 'DatumOnvolledig'
    }

    attribute_map = {
        'aanduiding_bij_huisnummer': 'aanduidingBijHuisnummer',
        'datum_aanvang_adreshouding': 'datumAanvangAdreshouding',
        'datum_ingang_geldigheid': 'datumIngangGeldigheid',
        'datum_inschrijving_in_gemeente': 'datumInschrijvingInGemeente',
        'datum_vestiging_in_nederland': 'datumVestigingInNederland',
        'functie_adres': 'functieAdres',
        'gemeente_van_inschrijving': 'gemeenteVanInschrijving',
        'huisletter': 'huisletter',
        'huisnummer': 'huisnummer',
        'huisnummertoevoeging': 'huisnummertoevoeging',
        'nummeraanduiding_identificatie': 'nummeraanduidingIdentificatie',
        'adresseerbaar_object_identificatie': 'adresseerbaarObjectIdentificatie',
        'land_vanwaar_ingeschreven': 'landVanwaarIngeschreven',
        'locatiebeschrijving': 'locatiebeschrijving',
        'straat': 'straat',
        'postcode': 'postcode',
        'korte_naam': 'korteNaam',
        'verblijf_buitenland': 'verblijfBuitenland',
        'woonplaats': 'woonplaats',
        'datum_ingang_onderzoek': 'datumIngangOnderzoek'
    }

    def __init__(self, aanduiding_bij_huisnummer=None, datum_aanvang_adreshouding=None, datum_ingang_geldigheid=None, datum_inschrijving_in_gemeente=None, datum_vestiging_in_nederland=None, functie_adres=None, gemeente_van_inschrijving=None, huisletter=None, huisnummer=None, huisnummertoevoeging=None, nummeraanduiding_identificatie=None, adresseerbaar_object_identificatie=None, land_vanwaar_ingeschreven=None, locatiebeschrijving=None, straat=None, postcode=None, korte_naam=None, verblijf_buitenland=None, woonplaats=None, datum_ingang_onderzoek=None, local_vars_configuration=None):  # noqa: E501
        """VerblijfplaatsInOnderzoek - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._aanduiding_bij_huisnummer = None
        self._datum_aanvang_adreshouding = None
        self._datum_ingang_geldigheid = None
        self._datum_inschrijving_in_gemeente = None
        self._datum_vestiging_in_nederland = None
        self._functie_adres = None
        self._gemeente_van_inschrijving = None
        self._huisletter = None
        self._huisnummer = None
        self._huisnummertoevoeging = None
        self._nummeraanduiding_identificatie = None
        self._adresseerbaar_object_identificatie = None
        self._land_vanwaar_ingeschreven = None
        self._locatiebeschrijving = None
        self._straat = None
        self._postcode = None
        self._korte_naam = None
        self._verblijf_buitenland = None
        self._woonplaats = None
        self._datum_ingang_onderzoek = None
        self.discriminator = None

        if aanduiding_bij_huisnummer is not None:
            self.aanduiding_bij_huisnummer = aanduiding_bij_huisnummer
        if datum_aanvang_adreshouding is not None:
            self.datum_aanvang_adreshouding = datum_aanvang_adreshouding
        if datum_ingang_geldigheid is not None:
            self.datum_ingang_geldigheid = datum_ingang_geldigheid
        if datum_inschrijving_in_gemeente is not None:
            self.datum_inschrijving_in_gemeente = datum_inschrijving_in_gemeente
        if datum_vestiging_in_nederland is not None:
            self.datum_vestiging_in_nederland = datum_vestiging_in_nederland
        if functie_adres is not None:
            self.functie_adres = functie_adres
        if gemeente_van_inschrijving is not None:
            self.gemeente_van_inschrijving = gemeente_van_inschrijving
        if huisletter is not None:
            self.huisletter = huisletter
        if huisnummer is not None:
            self.huisnummer = huisnummer
        if huisnummertoevoeging is not None:
            self.huisnummertoevoeging = huisnummertoevoeging
        if nummeraanduiding_identificatie is not None:
            self.nummeraanduiding_identificatie = nummeraanduiding_identificatie
        if adresseerbaar_object_identificatie is not None:
            self.adresseerbaar_object_identificatie = adresseerbaar_object_identificatie
        if land_vanwaar_ingeschreven is not None:
            self.land_vanwaar_ingeschreven = land_vanwaar_ingeschreven
        if locatiebeschrijving is not None:
            self.locatiebeschrijving = locatiebeschrijving
        if straat is not None:
            self.straat = straat
        if postcode is not None:
            self.postcode = postcode
        if korte_naam is not None:
            self.korte_naam = korte_naam
        if verblijf_buitenland is not None:
            self.verblijf_buitenland = verblijf_buitenland
        if woonplaats is not None:
            self.woonplaats = woonplaats
        if datum_ingang_onderzoek is not None:
            self.datum_ingang_onderzoek = datum_ingang_onderzoek

    @property
    def aanduiding_bij_huisnummer(self):
        """Gets the aanduiding_bij_huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The aanduiding_bij_huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._aanduiding_bij_huisnummer

    @aanduiding_bij_huisnummer.setter
    def aanduiding_bij_huisnummer(self, aanduiding_bij_huisnummer):
        """Sets the aanduiding_bij_huisnummer of this VerblijfplaatsInOnderzoek.


        :param aanduiding_bij_huisnummer: The aanduiding_bij_huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._aanduiding_bij_huisnummer = aanduiding_bij_huisnummer

    @property
    def datum_aanvang_adreshouding(self):
        """Gets the datum_aanvang_adreshouding of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The datum_aanvang_adreshouding of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._datum_aanvang_adreshouding

    @datum_aanvang_adreshouding.setter
    def datum_aanvang_adreshouding(self, datum_aanvang_adreshouding):
        """Sets the datum_aanvang_adreshouding of this VerblijfplaatsInOnderzoek.


        :param datum_aanvang_adreshouding: The datum_aanvang_adreshouding of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._datum_aanvang_adreshouding = datum_aanvang_adreshouding

    @property
    def datum_ingang_geldigheid(self):
        """Gets the datum_ingang_geldigheid of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The datum_ingang_geldigheid of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._datum_ingang_geldigheid

    @datum_ingang_geldigheid.setter
    def datum_ingang_geldigheid(self, datum_ingang_geldigheid):
        """Sets the datum_ingang_geldigheid of this VerblijfplaatsInOnderzoek.


        :param datum_ingang_geldigheid: The datum_ingang_geldigheid of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._datum_ingang_geldigheid = datum_ingang_geldigheid

    @property
    def datum_inschrijving_in_gemeente(self):
        """Gets the datum_inschrijving_in_gemeente of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The datum_inschrijving_in_gemeente of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._datum_inschrijving_in_gemeente

    @datum_inschrijving_in_gemeente.setter
    def datum_inschrijving_in_gemeente(self, datum_inschrijving_in_gemeente):
        """Sets the datum_inschrijving_in_gemeente of this VerblijfplaatsInOnderzoek.


        :param datum_inschrijving_in_gemeente: The datum_inschrijving_in_gemeente of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._datum_inschrijving_in_gemeente = datum_inschrijving_in_gemeente

    @property
    def datum_vestiging_in_nederland(self):
        """Gets the datum_vestiging_in_nederland of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The datum_vestiging_in_nederland of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._datum_vestiging_in_nederland

    @datum_vestiging_in_nederland.setter
    def datum_vestiging_in_nederland(self, datum_vestiging_in_nederland):
        """Sets the datum_vestiging_in_nederland of this VerblijfplaatsInOnderzoek.


        :param datum_vestiging_in_nederland: The datum_vestiging_in_nederland of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._datum_vestiging_in_nederland = datum_vestiging_in_nederland

    @property
    def functie_adres(self):
        """Gets the functie_adres of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The functie_adres of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._functie_adres

    @functie_adres.setter
    def functie_adres(self, functie_adres):
        """Sets the functie_adres of this VerblijfplaatsInOnderzoek.


        :param functie_adres: The functie_adres of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._functie_adres = functie_adres

    @property
    def gemeente_van_inschrijving(self):
        """Gets the gemeente_van_inschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The gemeente_van_inschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._gemeente_van_inschrijving

    @gemeente_van_inschrijving.setter
    def gemeente_van_inschrijving(self, gemeente_van_inschrijving):
        """Sets the gemeente_van_inschrijving of this VerblijfplaatsInOnderzoek.


        :param gemeente_van_inschrijving: The gemeente_van_inschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._gemeente_van_inschrijving = gemeente_van_inschrijving

    @property
    def huisletter(self):
        """Gets the huisletter of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The huisletter of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._huisletter

    @huisletter.setter
    def huisletter(self, huisletter):
        """Sets the huisletter of this VerblijfplaatsInOnderzoek.


        :param huisletter: The huisletter of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._huisletter = huisletter

    @property
    def huisnummer(self):
        """Gets the huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._huisnummer

    @huisnummer.setter
    def huisnummer(self, huisnummer):
        """Sets the huisnummer of this VerblijfplaatsInOnderzoek.


        :param huisnummer: The huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._huisnummer = huisnummer

    @property
    def huisnummertoevoeging(self):
        """Gets the huisnummertoevoeging of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The huisnummertoevoeging of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._huisnummertoevoeging

    @huisnummertoevoeging.setter
    def huisnummertoevoeging(self, huisnummertoevoeging):
        """Sets the huisnummertoevoeging of this VerblijfplaatsInOnderzoek.


        :param huisnummertoevoeging: The huisnummertoevoeging of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._huisnummertoevoeging = huisnummertoevoeging

    @property
    def nummeraanduiding_identificatie(self):
        """Gets the nummeraanduiding_identificatie of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The nummeraanduiding_identificatie of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._nummeraanduiding_identificatie

    @nummeraanduiding_identificatie.setter
    def nummeraanduiding_identificatie(self, nummeraanduiding_identificatie):
        """Sets the nummeraanduiding_identificatie of this VerblijfplaatsInOnderzoek.


        :param nummeraanduiding_identificatie: The nummeraanduiding_identificatie of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._nummeraanduiding_identificatie = nummeraanduiding_identificatie

    @property
    def adresseerbaar_object_identificatie(self):
        """Gets the adresseerbaar_object_identificatie of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The adresseerbaar_object_identificatie of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._adresseerbaar_object_identificatie

    @adresseerbaar_object_identificatie.setter
    def adresseerbaar_object_identificatie(self, adresseerbaar_object_identificatie):
        """Sets the adresseerbaar_object_identificatie of this VerblijfplaatsInOnderzoek.


        :param adresseerbaar_object_identificatie: The adresseerbaar_object_identificatie of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._adresseerbaar_object_identificatie = adresseerbaar_object_identificatie

    @property
    def land_vanwaar_ingeschreven(self):
        """Gets the land_vanwaar_ingeschreven of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The land_vanwaar_ingeschreven of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._land_vanwaar_ingeschreven

    @land_vanwaar_ingeschreven.setter
    def land_vanwaar_ingeschreven(self, land_vanwaar_ingeschreven):
        """Sets the land_vanwaar_ingeschreven of this VerblijfplaatsInOnderzoek.


        :param land_vanwaar_ingeschreven: The land_vanwaar_ingeschreven of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._land_vanwaar_ingeschreven = land_vanwaar_ingeschreven

    @property
    def locatiebeschrijving(self):
        """Gets the locatiebeschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The locatiebeschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._locatiebeschrijving

    @locatiebeschrijving.setter
    def locatiebeschrijving(self, locatiebeschrijving):
        """Sets the locatiebeschrijving of this VerblijfplaatsInOnderzoek.


        :param locatiebeschrijving: The locatiebeschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._locatiebeschrijving = locatiebeschrijving

    @property
    def straat(self):
        """Gets the straat of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The straat of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._straat

    @straat.setter
    def straat(self, straat):
        """Sets the straat of this VerblijfplaatsInOnderzoek.


        :param straat: The straat of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._straat = straat

    @property
    def postcode(self):
        """Gets the postcode of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The postcode of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this VerblijfplaatsInOnderzoek.


        :param postcode: The postcode of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._postcode = postcode

    @property
    def korte_naam(self):
        """Gets the korte_naam of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The korte_naam of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._korte_naam

    @korte_naam.setter
    def korte_naam(self, korte_naam):
        """Sets the korte_naam of this VerblijfplaatsInOnderzoek.


        :param korte_naam: The korte_naam of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._korte_naam = korte_naam

    @property
    def verblijf_buitenland(self):
        """Gets the verblijf_buitenland of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The verblijf_buitenland of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._verblijf_buitenland

    @verblijf_buitenland.setter
    def verblijf_buitenland(self, verblijf_buitenland):
        """Sets the verblijf_buitenland of this VerblijfplaatsInOnderzoek.


        :param verblijf_buitenland: The verblijf_buitenland of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._verblijf_buitenland = verblijf_buitenland

    @property
    def woonplaats(self):
        """Gets the woonplaats of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The woonplaats of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._woonplaats

    @woonplaats.setter
    def woonplaats(self, woonplaats):
        """Sets the woonplaats of this VerblijfplaatsInOnderzoek.


        :param woonplaats: The woonplaats of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._woonplaats = woonplaats

    @property
    def datum_ingang_onderzoek(self):
        """Gets the datum_ingang_onderzoek of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The datum_ingang_onderzoek of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: DatumOnvolledig
        """
        return self._datum_ingang_onderzoek

    @datum_ingang_onderzoek.setter
    def datum_ingang_onderzoek(self, datum_ingang_onderzoek):
        """Sets the datum_ingang_onderzoek of this VerblijfplaatsInOnderzoek.


        :param datum_ingang_onderzoek: The datum_ingang_onderzoek of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: DatumOnvolledig
        """

        self._datum_ingang_onderzoek = datum_ingang_onderzoek

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VerblijfplaatsInOnderzoek):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VerblijfplaatsInOnderzoek):
            return True

        return self.to_dict() != other.to_dict()
