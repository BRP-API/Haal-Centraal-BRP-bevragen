# coding: utf-8

"""
    Bevragingen ingeschreven personen

    API voor het ontsluiten van gegevens van ingeschreven personen en aanverwante gegevens uit de GBA en RNI. Met deze API worden de actuele gegevens van ingeschreven personen, hun kinderen, partners en ouders ontsloten. <br> Heeft een persoon bijvoorbeeld geen geldige nationaliteit, dan wordt nationaliteit niet geretourneerd. <br> Heeft een persoon een beÃ«indigd partnerschap of huwelijk, dan wordt de partner niet geretourneerd. <br> <br> Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Bevragingen-ingeschreven-personen/tree/master/features) voor nadere toelichting. <br>   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class VerblijfplaatsInOnderzoek(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'aanduiding_bij_huisnummer': 'bool',
        'datum_aanvang_adreshouding': 'bool',
        'datum_ingang_geldigheid': 'bool',
        'datum_inschrijving_in_gemeente': 'bool',
        'datum_vestiging_in_nederland': 'bool',
        'functie_adres': 'bool',
        'gemeente_van_inschrijving': 'bool',
        'huisletter': 'bool',
        'huisnummer': 'bool',
        'huisnummertoevoeging': 'bool',
        'identificatiecode_nummeraanduiding': 'bool',
        'identificatiecode_adresseerbaar_object': 'bool',
        'land_vanwaar_ingeschreven': 'bool',
        'locatiebeschrijving': 'bool',
        'naam_openbare_ruimte': 'bool',
        'postcode': 'bool',
        'straatnaam': 'bool',
        'verblijf_buitenland': 'bool',
        'woonplaatsnaam': 'bool',
        'datum_ingang_onderzoek': 'DatumOnvolledig'
    }

    attribute_map = {
        'aanduiding_bij_huisnummer': 'aanduidingBijHuisnummer',
        'datum_aanvang_adreshouding': 'datumAanvangAdreshouding',
        'datum_ingang_geldigheid': 'datumIngangGeldigheid',
        'datum_inschrijving_in_gemeente': 'datumInschrijvingInGemeente',
        'datum_vestiging_in_nederland': 'datumVestigingInNederland',
        'functie_adres': 'functieAdres',
        'gemeente_van_inschrijving': 'gemeenteVanInschrijving',
        'huisletter': 'huisletter',
        'huisnummer': 'huisnummer',
        'huisnummertoevoeging': 'huisnummertoevoeging',
        'identificatiecode_nummeraanduiding': 'identificatiecodeNummeraanduiding',
        'identificatiecode_adresseerbaar_object': 'identificatiecodeAdresseerbaarObject',
        'land_vanwaar_ingeschreven': 'landVanwaarIngeschreven',
        'locatiebeschrijving': 'locatiebeschrijving',
        'naam_openbare_ruimte': 'naamOpenbareRuimte',
        'postcode': 'postcode',
        'straatnaam': 'straatnaam',
        'verblijf_buitenland': 'verblijfBuitenland',
        'woonplaatsnaam': 'woonplaatsnaam',
        'datum_ingang_onderzoek': 'datumIngangOnderzoek'
    }

    def __init__(self, aanduiding_bij_huisnummer=None, datum_aanvang_adreshouding=None, datum_ingang_geldigheid=None, datum_inschrijving_in_gemeente=None, datum_vestiging_in_nederland=None, functie_adres=None, gemeente_van_inschrijving=None, huisletter=None, huisnummer=None, huisnummertoevoeging=None, identificatiecode_nummeraanduiding=None, identificatiecode_adresseerbaar_object=None, land_vanwaar_ingeschreven=None, locatiebeschrijving=None, naam_openbare_ruimte=None, postcode=None, straatnaam=None, verblijf_buitenland=None, woonplaatsnaam=None, datum_ingang_onderzoek=None, local_vars_configuration=None):  # noqa: E501
        """VerblijfplaatsInOnderzoek - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._aanduiding_bij_huisnummer = None
        self._datum_aanvang_adreshouding = None
        self._datum_ingang_geldigheid = None
        self._datum_inschrijving_in_gemeente = None
        self._datum_vestiging_in_nederland = None
        self._functie_adres = None
        self._gemeente_van_inschrijving = None
        self._huisletter = None
        self._huisnummer = None
        self._huisnummertoevoeging = None
        self._identificatiecode_nummeraanduiding = None
        self._identificatiecode_adresseerbaar_object = None
        self._land_vanwaar_ingeschreven = None
        self._locatiebeschrijving = None
        self._naam_openbare_ruimte = None
        self._postcode = None
        self._straatnaam = None
        self._verblijf_buitenland = None
        self._woonplaatsnaam = None
        self._datum_ingang_onderzoek = None
        self.discriminator = None

        if aanduiding_bij_huisnummer is not None:
            self.aanduiding_bij_huisnummer = aanduiding_bij_huisnummer
        if datum_aanvang_adreshouding is not None:
            self.datum_aanvang_adreshouding = datum_aanvang_adreshouding
        if datum_ingang_geldigheid is not None:
            self.datum_ingang_geldigheid = datum_ingang_geldigheid
        if datum_inschrijving_in_gemeente is not None:
            self.datum_inschrijving_in_gemeente = datum_inschrijving_in_gemeente
        if datum_vestiging_in_nederland is not None:
            self.datum_vestiging_in_nederland = datum_vestiging_in_nederland
        if functie_adres is not None:
            self.functie_adres = functie_adres
        if gemeente_van_inschrijving is not None:
            self.gemeente_van_inschrijving = gemeente_van_inschrijving
        if huisletter is not None:
            self.huisletter = huisletter
        if huisnummer is not None:
            self.huisnummer = huisnummer
        if huisnummertoevoeging is not None:
            self.huisnummertoevoeging = huisnummertoevoeging
        if identificatiecode_nummeraanduiding is not None:
            self.identificatiecode_nummeraanduiding = identificatiecode_nummeraanduiding
        if identificatiecode_adresseerbaar_object is not None:
            self.identificatiecode_adresseerbaar_object = identificatiecode_adresseerbaar_object
        if land_vanwaar_ingeschreven is not None:
            self.land_vanwaar_ingeschreven = land_vanwaar_ingeschreven
        if locatiebeschrijving is not None:
            self.locatiebeschrijving = locatiebeschrijving
        if naam_openbare_ruimte is not None:
            self.naam_openbare_ruimte = naam_openbare_ruimte
        if postcode is not None:
            self.postcode = postcode
        if straatnaam is not None:
            self.straatnaam = straatnaam
        if verblijf_buitenland is not None:
            self.verblijf_buitenland = verblijf_buitenland
        if woonplaatsnaam is not None:
            self.woonplaatsnaam = woonplaatsnaam
        if datum_ingang_onderzoek is not None:
            self.datum_ingang_onderzoek = datum_ingang_onderzoek

    @property
    def aanduiding_bij_huisnummer(self):
        """Gets the aanduiding_bij_huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The aanduiding_bij_huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._aanduiding_bij_huisnummer

    @aanduiding_bij_huisnummer.setter
    def aanduiding_bij_huisnummer(self, aanduiding_bij_huisnummer):
        """Sets the aanduiding_bij_huisnummer of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param aanduiding_bij_huisnummer: The aanduiding_bij_huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._aanduiding_bij_huisnummer = aanduiding_bij_huisnummer

    @property
    def datum_aanvang_adreshouding(self):
        """Gets the datum_aanvang_adreshouding of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The datum_aanvang_adreshouding of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._datum_aanvang_adreshouding

    @datum_aanvang_adreshouding.setter
    def datum_aanvang_adreshouding(self, datum_aanvang_adreshouding):
        """Sets the datum_aanvang_adreshouding of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param datum_aanvang_adreshouding: The datum_aanvang_adreshouding of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._datum_aanvang_adreshouding = datum_aanvang_adreshouding

    @property
    def datum_ingang_geldigheid(self):
        """Gets the datum_ingang_geldigheid of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The datum_ingang_geldigheid of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._datum_ingang_geldigheid

    @datum_ingang_geldigheid.setter
    def datum_ingang_geldigheid(self, datum_ingang_geldigheid):
        """Sets the datum_ingang_geldigheid of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param datum_ingang_geldigheid: The datum_ingang_geldigheid of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._datum_ingang_geldigheid = datum_ingang_geldigheid

    @property
    def datum_inschrijving_in_gemeente(self):
        """Gets the datum_inschrijving_in_gemeente of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The datum_inschrijving_in_gemeente of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._datum_inschrijving_in_gemeente

    @datum_inschrijving_in_gemeente.setter
    def datum_inschrijving_in_gemeente(self, datum_inschrijving_in_gemeente):
        """Sets the datum_inschrijving_in_gemeente of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param datum_inschrijving_in_gemeente: The datum_inschrijving_in_gemeente of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._datum_inschrijving_in_gemeente = datum_inschrijving_in_gemeente

    @property
    def datum_vestiging_in_nederland(self):
        """Gets the datum_vestiging_in_nederland of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The datum_vestiging_in_nederland of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._datum_vestiging_in_nederland

    @datum_vestiging_in_nederland.setter
    def datum_vestiging_in_nederland(self, datum_vestiging_in_nederland):
        """Sets the datum_vestiging_in_nederland of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param datum_vestiging_in_nederland: The datum_vestiging_in_nederland of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._datum_vestiging_in_nederland = datum_vestiging_in_nederland

    @property
    def functie_adres(self):
        """Gets the functie_adres of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The functie_adres of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._functie_adres

    @functie_adres.setter
    def functie_adres(self, functie_adres):
        """Sets the functie_adres of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param functie_adres: The functie_adres of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._functie_adres = functie_adres

    @property
    def gemeente_van_inschrijving(self):
        """Gets the gemeente_van_inschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The gemeente_van_inschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._gemeente_van_inschrijving

    @gemeente_van_inschrijving.setter
    def gemeente_van_inschrijving(self, gemeente_van_inschrijving):
        """Sets the gemeente_van_inschrijving of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param gemeente_van_inschrijving: The gemeente_van_inschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._gemeente_van_inschrijving = gemeente_van_inschrijving

    @property
    def huisletter(self):
        """Gets the huisletter of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The huisletter of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._huisletter

    @huisletter.setter
    def huisletter(self, huisletter):
        """Sets the huisletter of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param huisletter: The huisletter of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._huisletter = huisletter

    @property
    def huisnummer(self):
        """Gets the huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._huisnummer

    @huisnummer.setter
    def huisnummer(self, huisnummer):
        """Sets the huisnummer of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param huisnummer: The huisnummer of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._huisnummer = huisnummer

    @property
    def huisnummertoevoeging(self):
        """Gets the huisnummertoevoeging of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The huisnummertoevoeging of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._huisnummertoevoeging

    @huisnummertoevoeging.setter
    def huisnummertoevoeging(self, huisnummertoevoeging):
        """Sets the huisnummertoevoeging of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param huisnummertoevoeging: The huisnummertoevoeging of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._huisnummertoevoeging = huisnummertoevoeging

    @property
    def identificatiecode_nummeraanduiding(self):
        """Gets the identificatiecode_nummeraanduiding of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The identificatiecode_nummeraanduiding of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._identificatiecode_nummeraanduiding

    @identificatiecode_nummeraanduiding.setter
    def identificatiecode_nummeraanduiding(self, identificatiecode_nummeraanduiding):
        """Sets the identificatiecode_nummeraanduiding of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param identificatiecode_nummeraanduiding: The identificatiecode_nummeraanduiding of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._identificatiecode_nummeraanduiding = identificatiecode_nummeraanduiding

    @property
    def identificatiecode_adresseerbaar_object(self):
        """Gets the identificatiecode_adresseerbaar_object of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The identificatiecode_adresseerbaar_object of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._identificatiecode_adresseerbaar_object

    @identificatiecode_adresseerbaar_object.setter
    def identificatiecode_adresseerbaar_object(self, identificatiecode_adresseerbaar_object):
        """Sets the identificatiecode_adresseerbaar_object of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param identificatiecode_adresseerbaar_object: The identificatiecode_adresseerbaar_object of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._identificatiecode_adresseerbaar_object = identificatiecode_adresseerbaar_object

    @property
    def land_vanwaar_ingeschreven(self):
        """Gets the land_vanwaar_ingeschreven of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The land_vanwaar_ingeschreven of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._land_vanwaar_ingeschreven

    @land_vanwaar_ingeschreven.setter
    def land_vanwaar_ingeschreven(self, land_vanwaar_ingeschreven):
        """Sets the land_vanwaar_ingeschreven of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param land_vanwaar_ingeschreven: The land_vanwaar_ingeschreven of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._land_vanwaar_ingeschreven = land_vanwaar_ingeschreven

    @property
    def locatiebeschrijving(self):
        """Gets the locatiebeschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The locatiebeschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._locatiebeschrijving

    @locatiebeschrijving.setter
    def locatiebeschrijving(self, locatiebeschrijving):
        """Sets the locatiebeschrijving of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param locatiebeschrijving: The locatiebeschrijving of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._locatiebeschrijving = locatiebeschrijving

    @property
    def naam_openbare_ruimte(self):
        """Gets the naam_openbare_ruimte of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The naam_openbare_ruimte of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._naam_openbare_ruimte

    @naam_openbare_ruimte.setter
    def naam_openbare_ruimte(self, naam_openbare_ruimte):
        """Sets the naam_openbare_ruimte of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param naam_openbare_ruimte: The naam_openbare_ruimte of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._naam_openbare_ruimte = naam_openbare_ruimte

    @property
    def postcode(self):
        """Gets the postcode of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The postcode of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param postcode: The postcode of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._postcode = postcode

    @property
    def straatnaam(self):
        """Gets the straatnaam of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The straatnaam of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._straatnaam

    @straatnaam.setter
    def straatnaam(self, straatnaam):
        """Sets the straatnaam of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param straatnaam: The straatnaam of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._straatnaam = straatnaam

    @property
    def verblijf_buitenland(self):
        """Gets the verblijf_buitenland of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The verblijf_buitenland of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._verblijf_buitenland

    @verblijf_buitenland.setter
    def verblijf_buitenland(self, verblijf_buitenland):
        """Sets the verblijf_buitenland of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param verblijf_buitenland: The verblijf_buitenland of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._verblijf_buitenland = verblijf_buitenland

    @property
    def woonplaatsnaam(self):
        """Gets the woonplaatsnaam of this VerblijfplaatsInOnderzoek.  # noqa: E501

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :return: The woonplaatsnaam of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: bool
        """
        return self._woonplaatsnaam

    @woonplaatsnaam.setter
    def woonplaatsnaam(self, woonplaatsnaam):
        """Sets the woonplaatsnaam of this VerblijfplaatsInOnderzoek.

        Indicator die aangeeft of het corresponderende gegeven voor deze persoon in onderzoek is.  # noqa: E501

        :param woonplaatsnaam: The woonplaatsnaam of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: bool
        """

        self._woonplaatsnaam = woonplaatsnaam

    @property
    def datum_ingang_onderzoek(self):
        """Gets the datum_ingang_onderzoek of this VerblijfplaatsInOnderzoek.  # noqa: E501


        :return: The datum_ingang_onderzoek of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :rtype: DatumOnvolledig
        """
        return self._datum_ingang_onderzoek

    @datum_ingang_onderzoek.setter
    def datum_ingang_onderzoek(self, datum_ingang_onderzoek):
        """Sets the datum_ingang_onderzoek of this VerblijfplaatsInOnderzoek.


        :param datum_ingang_onderzoek: The datum_ingang_onderzoek of this VerblijfplaatsInOnderzoek.  # noqa: E501
        :type: DatumOnvolledig
        """

        self._datum_ingang_onderzoek = datum_ingang_onderzoek

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VerblijfplaatsInOnderzoek):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VerblijfplaatsInOnderzoek):
            return True

        return self.to_dict() != other.to_dict()
