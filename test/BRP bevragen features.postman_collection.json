{
	"info": {
		"_postman_id": "553aed89-f4f8-4015-bfdb-c750f4c21206",
		"name": "BRP bevragen features",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "case insensitive zoeken",
			"item": [
				{
					"name": "Zoeken op geslachtsnaam is case-insensitive",
					"item": [
						{
							"name": "juiste hoofdletters en diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Tjon á Jon\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1974-02-21\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=Tjon á Jon",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "kleine letters en diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Tjon á Jon\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1974-02-21\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=tjon á jon",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "tjon á jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "hoofdletters en diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Tjon á Jon\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1974-02-21\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=TJON Á JON",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "TJON Á JON",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "kleine letters geen diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Tjon á Jon\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1974-02-21\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=tjon a jon",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "tjon a jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "hoofdletters geen diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Tjon á Jon\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1974-02-21\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=TJON A JON",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "TJON A JON",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Zoeken op voornamen is case-insensitive",
					"item": [
						{
							"name": "juiste hoofdletters en kleine letters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Wellingasterveen\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1963-12-04\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Antonius Johannes Joseph\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1963-12-04&naam__geslachtsnaam=Wellingasterveen&naam__voornamen=Antonius Johannes Joseph",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1963-12-04",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Wellingasterveen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Antonius Johannes Joseph",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "kleine letters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Wellingasterveen\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1963-12-04\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Antonius Johannes Joseph\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1963-12-04&naam__geslachtsnaam=Wellingasterveen&naam__voornamen=antonius johannes joseph",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1963-12-04",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Wellingasterveen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "antonius johannes joseph",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "hoofdletters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Wellingasterveen\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1963-12-04\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Antonius Johannes Joseph\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1963-12-04&naam__geslachtsnaam=Wellingasterveen&naam__voornamen=ANTONIUS JOHANNES JOSEPH",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1963-12-04",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Wellingasterveen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "ANTONIUS JOHANNES JOSEPH",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "mix",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Wellingasterveen\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.eql(\"1963-12-04\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Antonius Johannes Joseph\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1963-12-04&naam__geslachtsnaam=Wellingasterveen&naam__voornamen=aNTONiUS jOHANnEs jOSEPh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1963-12-04",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Wellingasterveen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "aNTONiUS jOHANnEs jOSEPh",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Zoeken op voorvoegsel is case-insensitive",
					"item": [
						{
							"name": "juiste hoofdletters en kleine letters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"do Livramento de La Salete Jansz.\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Lisanty Teresita del niño Jesús Virgen\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=do Livramento de La Salete Jansz.&naam__voorvoegsel=De las&verblijfplaats__gemeenteVanInschrijving=1681",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "do Livramento de La Salete Jansz.",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "De las",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1681",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "kleine letters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"do Livramento de La Salete Jansz.\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Lisanty Teresita del niño Jesús Virgen\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=do Livramento de La Salete Jansz.&naam__voorvoegsel=de las&verblijfplaats__gemeenteVanInschrijving=1681",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "do Livramento de La Salete Jansz.",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "de las",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1681",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "hoofdletters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"do Livramento de La Salete Jansz.\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Lisanty Teresita del niño Jesús Virgen\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=do Livramento de La Salete Jansz.&naam__voorvoegsel=DE LAS&verblijfplaats__gemeenteVanInschrijving=1681",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "do Livramento de La Salete Jansz.",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "DE LAS",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1681",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Onjuiste hoofd- of kleine letters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"do Livramento de La Salete Jansz.\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Lisanty Teresita del niño Jesús Virgen\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=do Livramento de La Salete Jansz.&naam__voorvoegsel=de Las&verblijfplaats__gemeenteVanInschrijving=1681",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "do Livramento de La Salete Jansz.",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "de Las",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1681",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Zoeken op straat is case-insensitive",
					"item": [
						{
							"name": "juiste hoofdletters en diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Pal&verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisnummer=4&verblijfplaats__straat=Heer Daniëlstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Pal",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "4",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Heer Daniëlstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "kleine letters en diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											"",
											"pm.test(\"[0].verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											"",
											"pm.test(\"[1].verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Pal&verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisnummer=4&verblijfplaats__straat=heer daniëlstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Pal",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "4",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "heer daniëlstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "kleine letters geen diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											"",
											"pm.test(\"[0].verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											"",
											"pm.test(\"[1].verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Pal&verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisnummer=4&verblijfplaats__straat=heer danielstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Pal",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "4",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "heer danielstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "juiste hoofdletters en geen diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"[0].verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											"",
											"pm.test(\"[1].verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Pal&verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisnummer=4&verblijfplaats__straat=Heer Danielstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Pal",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "4",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Heer Danielstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "hoofdletters geen diakrieten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											"",
											"pm.test(\"[0].verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											"",
											"pm.test(\"[1].verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].verblijfplaats.straat).to.eql(\"Heer Daniëlstraat\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Pal&verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisnummer=4&verblijfplaats__straat=HEER DANIELSTRAAT",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Pal",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "4",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "HEER DANIELSTRAAT",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Zoeken op huisletter is case-insensitive",
					"item": [
						{
							"name": "juiste case klein",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisletter\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisletter).to.eql(\"a\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1982-07-12&naam__voornamen=Albert&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=10&verblijfplaats__postcode=1017GS",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1982-07-12",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Albert",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "10",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "1017GS",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "onjuiste case hoofdletter",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisletter\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisletter).to.eql(\"a\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1982-07-12&naam__voornamen=Albert&verblijfplaats__huisletter=A&verblijfplaats__huisnummer=10&verblijfplaats__postcode=1017GS",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1982-07-12",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Albert",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "A",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "10",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "1017GS",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "juiste case hoofdletter",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisletter\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisletter).to.eql(\"L\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Brink&verblijfplaats__gemeenteVanInschrijving=0344&verblijfplaats__huisletter=L&verblijfplaats__huisnummer=400&verblijfplaats__straat=St. Jacobsstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Brink",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0344",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "L",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "400",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "St. Jacobsstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "onjuiste case klein",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisletter\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisletter).to.eql(\"L\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Brink&verblijfplaats__gemeenteVanInschrijving=0344&verblijfplaats__huisletter=l&verblijfplaats__huisnummer=400&verblijfplaats__straat=St. Jacobsstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Brink",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0344",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "l",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "400",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "St. Jacobsstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Zoeken op huisnummertoevoeging is case-insensitive",
					"item": [
						{
							"name": "juiste hoofdletters en kleine letters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummertoevoeging\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisnummertoevoeging).to.eql(\"Toe\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Brink&verblijfplaats__gemeenteVanInschrijving=0344&verblijfplaats__huisnummer=400&verblijfplaats__huisnummertoevoeging=Toe&verblijfplaats__straat=St. Jacobsstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Brink",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0344",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "400",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "Toe",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "St. Jacobsstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "kleine letters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummertoevoeging\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisnummertoevoeging).to.eql(\"Toe\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Brink&verblijfplaats__gemeenteVanInschrijving=0344&verblijfplaats__huisnummer=400&verblijfplaats__huisnummertoevoeging=toe&verblijfplaats__straat=St. Jacobsstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Brink",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0344",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "400",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "toe",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "St. Jacobsstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "hoofdletters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummertoevoeging\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisnummertoevoeging).to.eql(\"Toe\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Brink&verblijfplaats__gemeenteVanInschrijving=0344&verblijfplaats__huisnummer=400&verblijfplaats__huisnummertoevoeging=TOE&verblijfplaats__straat=St. Jacobsstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Brink",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0344",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "400",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "TOE",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "St. Jacobsstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "wildcard",
			"item": [
				{
					"name": "geslachtsnaam",
					"item": [
						{
							"name": "eindigt met wildcard",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam = Jansons\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.naam.geslachtsnaam=='Jansons').naam.geslachtsnaam).to.eql(\"Jansons\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam = Jansens\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.naam.geslachtsnaam=='Jansens').naam.geslachtsnaam).to.eql(\"Jansens\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=jans*&verblijfplaats__gemeenteVanInschrijving=1901",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "jans*",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1901",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "voornamen",
					"item": [
						{
							"name": "eindigt met wildcard",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(3);",
											"});",
											"",
											"pm.test(\"naam.voornamen == Jaffe\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.naam.voornamen=='Jaffe').naam.geslachtsnaam).to.eql(\"Jager\");",
											"});",
											"",
											"pm.test(\"naam.voornamen == Jael\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.naam.voornamen=='Jael').naam.geslachtsnaam).to.eql(\"Jager\");",
											"});",
											"",
											"pm.test(\"naam.voornamen == Jan\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.naam.voornamen=='Jan').naam.geslachtsnaam).to.eql(\"Jager\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Jager&naam__voornamen=Ja*&verblijfplaats__gemeenteVanInschrijving=0518",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Jager",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Ja*",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0518",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "straat",
					"item": [
						{
							"name": "eindigt met wildcard",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(3);",
											"});",
											"",
											"pm.test(\"straat1\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Burgemeester Le Fèvre de Montignylaan\");",
											"});",
											"",
											"pm.test(\"straat2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].verblijfplaats.straat).to.eql(\"Burgemeester Le Fèvre de Montignylaan\");",
											"});",
											"",
											"pm.test(\"straat3\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[2].verblijfplaats.straat).to.eql(\"Burgemeester Le Fèvre de Montignylaan\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisnummer=5&verblijfplaats__straat=burgemeester*",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "5",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "burgemeester*",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "fouten",
					"item": [
						{
							"name": "wildcard in het midden",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?naam\\_\\_geslachtsnaam\\=Jans.*ns\\&verblijfplaats\\_\\_gemeenteVanInschrijving\\=1901$/);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"naam__geslachtsnaam\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"wildcard\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.match(/^Incorrect\\ gebruik\\ van\\ wildcard\\ karakter\\ .*\\.$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Jans*ns&verblijfplaats__gemeenteVanInschrijving=1901",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Jans*ns",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1901",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "overleden personen zoeken",
			"item": [
				{
					"name": "inclusiefOverledenPersonen",
					"item": [
						{
							"name": "zonder inclusiefOverledenPersonen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"overlijden Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence Match 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].overlijden).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1991-05-05&naam__geslachtsnaam=Thursen&verblijfplaats__gemeenteVanInschrijving=0530",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1991-05-05",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Thursen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0530",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "inclusiefOverledenPersonen=false",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"overlijden Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence Match 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].overlijden).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1991-05-05&inclusiefOverledenPersonen=false&naam__geslachtsnaam=Thursen&verblijfplaats__gemeenteVanInschrijving=0530",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1991-05-05",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "false",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Thursen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0530",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "inclusiefOverledenPersonen=true",
							"event": [
								{
									"script": {
										"id": "23cdd564-0095-43e7-9ea7-0688364b2d76",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(3);",
											"});",
											"",
											"pm.test(\"burgerservicenummer (levende 1)\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999994864').burgerservicenummer).to.eql(\"999994864\");",
											"});",
											"",
											"pm.test(\"overlijden Existence Match (levende 1)\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999994864').overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"burgerservicenummer (overleden persoon)\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991693').burgerservicenummer).to.eql(\"999991693\");",
											"});",
											"",
											"pm.test(\"overlijden Existence Match (overleden persoon)\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991693').overlijden).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"burgerservicenummer (levende 2)\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999995212').burgerservicenummer).to.eql(\"999995212\");",
											"});",
											"",
											"pm.test(\"overlijden Existence Match (levende 2)\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer==999995212).overlijden).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1991-05-05&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Thursen&verblijfplaats__gemeenteVanInschrijving=0530",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1991-05-05",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Thursen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0530",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "inclusiefOverledenPersonen=true zonder geslachtsnaam",
							"event": [
								{
									"script": {
										"id": "a7a99ae5-9aa1-4ff5-a131-48840a8b44b1",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(3);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Minimale combinatie van parameters moet worden opgegeven.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"detail\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).to.eql(\"Voor zoeken naar overleden personen moet minimaal burgerservicenummer of de geslachtsnaam in combinatie met de gemeente van inschrijving of in combinatie met geboortedatum worden opgegeven.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?geboorte__datum=1991-05-05&inclusiefOverledenPersonen=true&verblijfplaats__gemeenteVanInschrijving=0530&verblijfplaats__huisnummer=555&verblijfplaats__postcode=3225TD\");",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1991-05-05&inclusiefOverledenPersonen=true&verblijfplaats__gemeenteVanInschrijving=0530&verblijfplaats__huisnummer=555&verblijfplaats__postcode=3225TD",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1991-05-05",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0530",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "555",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "3225TD",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "inclusiefOverledenPersonen=true zonder gemeente van inschrijving",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(3);",
											"});",
											"",
											"pm.test(\"Check count of [ingeschrevenpersonen]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'].length).to.eql(3);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1991-05-05&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Thursen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1991-05-05",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Thursen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "burgerservicenummer overleden persoon",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"JSONPath Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).not.to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999992077",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999992077",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "burgerservicenummer en inclusiefOverledenPersonen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"JSONPath Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).not.to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ingeschrevenpersonen[0]['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['_links']['self']['href']).to.match(/^.*\\/ingeschrevenpersonen\\/999992077$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999992077&inclusiefOverledenPersonen=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999992077",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "burgerservicenummer levende persoon en inclusiefOverledenPersonen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"JSONPath Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).not.to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ingeschrevenpersonen[0]['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['_links']['self']['href']).to.match(/^.*\\/ingeschrevenpersonen\\/999995212$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999995212&inclusiefOverledenPersonen=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999995212",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "burgerservicenummer levende persoon zonder inclusiefOverledenPersonen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"JSONPath Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).not.to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ingeschrevenpersonen[0]['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['_links']['self']['href']).to.match(/^.*\\/ingeschrevenpersonen\\/999995212$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999995212",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999995212",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "parametercombinaties",
			"item": [
				{
					"name": "minimale combinaties van zoekparameters",
					"item": [
						{
							"name": "geslachtsnaam+geboortedatum",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=Tjon á Jon",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "geslachtsnaam+geboortedatum+optionele parameter",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=Tjon á Jon&naam__voornamen=Wei Wei",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Wei Wei",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "geslachtsnaam+geboortedatum+inclusiefOverledenPersonen (GBA-V)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"type equals\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test.skip(\"title equals\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Minimale combinatie van parameters moet worden opgegeven.\");",
											"});",
											"",
											"pm.test.skip(\"status equals\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test.skip(\"detail equals\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).to.eql(\"Voor zoeken naar overleden personen moet minimaal burgerservicenummer of de geslachtsnaam in combinatie met de gemeente van inschrijving worden opgegeven.\");",
											"});",
											"",
											"pm.test.skip(\"instance equals\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?naam__geslachtsnaam=Tjon%20%C3%A1%20Jon&geboorte__datum=1974-02-21&inclusiefOverledenPersonen=true\");",
											"});",
											"",
											"pm.test.skip(\"code equals\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											"",
											"",
											"pm.test(\"Match content of [geslachtsnaam]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['naam']['geslachtsnaam']).to.eql(\"Tjon á Jon\");",
											"});",
											"",
											"pm.test(\"Match content of [datum]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['geboorte']['datum']['datum']).to.eql(\"1974-02-21\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Tjon á Jon",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "geslachtsnaam+geboortedatum+inclusiefOverledenPersonen+gemeentevaninschrijving",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Tjon á Jon&verblijfplaats__gemeenteVanInschrijving=0599",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "alle naam en geboorte parameters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "geslachtsnaam+geboortedatum + gedeelte andere combinatie",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=Tjon á Jon&verblijfplaats__postcode=3077XJ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "3077XJ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "geslachtsnaam+gemeentevaninschrijving",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Tjon á Jon&verblijfplaats__gemeenteVanInschrijving=0599",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "meerdere minimale combinaties in één aanroep",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__geslachtsnaam=Tjon á Jon&verblijfplaats__huisnummer=36&verblijfplaats__postcode=3077XJ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "36",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "3077XJ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Fout: meerdere minimale combinaties gedeeltelijk",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Tjon á Jon&naam__voornamen=Wei Wei&verblijfplaats__postcode=3077XJ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Wei Wei",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "3077XJ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Fout: alle optionele + gedeeltelijk min. combinaties",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__plaats=0411&geslachtsaanduiding=vrouw&naam__geslachtsnaam=Tjon á Jon&naam__voorvoegsel=van&naam__voornamen=Wei Wei&verblijfplaats__huisletter=a&verblijfplaats__huisnummertoevoeging=to&verblijfplaats__straat=Maurickerf&verblijfplaats__postcode=3077XJ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "0411",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Tjon á Jon",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Wei Wei",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "to",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Maurickerf",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "3077XJ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "postcode+huisnummer",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__huisnummer=36&verblijfplaats__postcode=3077XJ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "36",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "3077XJ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "postcode+huisnummer+postcode+huisnummer + optionele parameters",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&naam__voorvoegsel=van der&naam__voornamen=Wei Wei&verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisletter=B&verblijfplaats__huisnummer=36&verblijfplaats__huisnummertoevoeging=to&verblijfplaats__postcode=3077XJ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Wei Wei",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "B",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "36",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "to",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "3077XJ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "strijdige zoekparameters op verblijfplaats",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisletter=A&verblijfplaats__huisnummer=1&verblijfplaats__huisnummertoevoeging=to&verblijfplaats__nummeraanduidingIdentificatie=1810200010001001&verblijfplaats__straat=Van Wijngaerdenstraat&verblijfplaats__postcode=2596TW",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "A",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "to",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "1810200010001001",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Van Wijngaerdenstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "2596TW",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "gemeentevaninschrijving + openbareruimtenaam + huisnummer",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0599&verblijfplaats__huisnummer=72&verblijfplaats__straat=Goudsesingel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "72",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Goudsesingel",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Fout: verblijfplaats zonder huisnummer",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=1810&verblijfplaats__straat=Van Wijngaerdenstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1810",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Van Wijngaerdenstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Fout: verblijfplaats zonder openbareruimtenaam",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=1810&verblijfplaats__huisnummer=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1810",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Fout: verblijfplaats zonder gemeentevaninschrijving",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__huisnummer=1&verblijfplaats__straat=Van Wijngaerdenstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Van Wijngaerdenstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Fout: gemeentevaninschrijving zonder geslachtsnaam of openbare ruimtenaam",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__voornamen=Wei Wei&verblijfplaats__gemeenteVanInschrijving=0518&verblijfplaats__huisnummer=36",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Wei Wei",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0518",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "36",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Fout: gemeentevaninschrijving zonder geslachtsnaam of huisnummer",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__voornamen=Wei Wei&verblijfplaats__gemeenteVanInschrijving=0518&verblijfplaats__straat=Maurickerf",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Wei Wei",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0518",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Maurickerf",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "nummeraanduidingIdentificatie",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__nummeraanduidingIdentificatie=0518200250037001",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0518200250037001",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "burgerservicenummer",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999993653",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999993653",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "burgerservicenummer (bestaat niet)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"JSONPath Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).not.to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999990000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999990000",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "meerdere burgerservicenummers",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"Match content of [burgerservicenummer]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['burgerservicenummer']).to.eql(\"999993653\");",
											"});",
											"",
											"pm.test(\"Match content of [burgerservicenummer]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][1]['burgerservicenummer']).to.eql(\"999990469\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999993653,999990469",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999993653,999990469",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "burgerservicenummer en inclusiefOverledenPersonen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JSONPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999993653&inclusiefOverledenPersonen=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999993653",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "leeg=null=niet opgegeven",
					"item": [
						{
							"name": "niet opgenomen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});"
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__voornamen=Wei Wei",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Wei Wei",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ouders",
			"item": [
				{
					"name": "ouders",
					"item": [
						{
							"name": "geen ouders",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders"
									],
									"variable": [
										{
											"id": "c37cb0ba-224b-4e6d-b1a8-263d0426d1bf",
											"key": "burgerservicenummer",
											"value": "999990457",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de ouders van een persoon\n"
							},
							"response": []
						},
						{
							"name": "één ouder (wel document ouder2)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"naam Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].ingeschrevenpersonen Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2')['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].self Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2')['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/999992326/ouders/2\");",
											"});",
											"",
											"pm.test(\"ouder = 1\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].ouderAanduiding).to.eql(\"ouder1\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders"
									],
									"variable": [
										{
											"id": "870b9cfc-cd85-4145-801f-ad0768606f39",
											"key": "burgerservicenummer",
											"value": "999992326",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de ouders van een persoon\n"
							},
							"response": []
						},
						{
							"name": "één ouder (wel akte ouder2)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"naam Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"registergemeenteAkte.code Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').registergemeenteAkte.code).to.eql(\"0262\");",
											"});",
											"",
											"pm.test.skip(\"registergemeenteAkte.naam Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').registergemeenteAkte.naam).to.eql(\"Lochem\");",
											"});",
											"",
											"pm.test.skip(\"aktenummer Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').aktenummer).to.eql(\"10A1234\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].self Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2')['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/ouders/2\");",
											"});",
											"",
											"pm.test(\"ouder = 1\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].ouderAanduiding).to.eql(\"ouder1\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders"
									],
									"variable": [
										{
											"id": "3771d7e9-1e3e-44b8-9897-905ef3050b16",
											"key": "burgerservicenummer",
											"value": "999993793",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de ouders van een persoon\n"
							},
							"response": []
						},
						{
							"name": "een ingeschreven ouder en een niet-ingeschreven ouder",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"ouder1.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').burgerservicenummer).to.eql(\"999991322\");",
											"});",
											"",
											"pm.test(\"ouder2.burgerservicenummer Existance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2['_links'].ingeschrevenpersonen Existance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2')['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders"
									],
									"variable": [
										{
											"id": "7bf2dd0c-5c19-4c2d-a545-c79bdc978b64",
											"key": "burgerservicenummer",
											"value": "999993586",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de ouders van een persoon\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ingeschrevenpersonen",
					"item": [
						{
							"name": "geen ouders",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "d0d6be2b-6161-4802-9529-13e0363c7b93",
											"key": "burgerservicenummer",
											"value": "999990457",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "één ouder (wel document ouder2)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_embedded'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"ouder = 1\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].ouderAanduiding).to.eql(\"ouder1\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "679b63ff-338a-4ea6-936a-ac4c26b6b51d",
											"key": "burgerservicenummer",
											"value": "999992326",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "één ouder (wel akte ouder2)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_embedded'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"ouder = 1\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].ouderAanduiding).to.eql(\"ouder1\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "0174379f-4fba-4617-bce3-cacbc931bc23",
											"key": "burgerservicenummer",
											"value": "999993793",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "een ingeschreven ouder en een niet-ingeschreven ouder",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_embedded'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_embedded'].ouders[ouder1].burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').burgerservicenummer).to.eql(\"999991322\");",
											"});",
											"",
											"pm.test(\"['_embedded'].ouders[ouder2].burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "4fbda1ce-805c-4d48-8a84-46174ccb6fcc",
											"key": "burgerservicenummer",
											"value": "999993586",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "partners",
			"item": [
				{
					"name": "partners",
					"item": [
						{
							"name": "geen partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "5fd19544-8ed7-43d5-93d1-143a64f09bb0",
											"key": "burgerservicenummer",
											"value": "999993483",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						},
						{
							"name": "één partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "f8d8de58-8ed1-47e6-b07d-b5b3e55f168e",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						},
						{
							"name": "beëindigde relatie",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "f84ae67d-1566-431a-a225-4d10c3ce6d73",
											"key": "burgerservicenummer",
											"value": "999992806",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						},
						{
							"name": "onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "8d8a24ac-3fd4-43eb-a6cc-bdfe665878e8",
											"key": "burgerservicenummer",
											"value": "999993008",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						},
						{
							"name": "een actuele en een beëindigde partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999992405\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "aacfd7df-6b5d-4acd-9269-722f06e258a1",
											"key": "burgerservicenummer",
											"value": "999991553",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						},
						{
							"name": "een beëindigde en een actuele partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"JsonPath Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999992260\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "cc689949-9351-473b-9f72-1ddb84b4bb34",
											"key": "burgerservicenummer",
											"value": "999995182",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						},
						{
							"name": "gescheiden, hertrouwd, gescheiden en hertrouwd met eerste partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Jacoba Magdalena\");",
											"});",
											"",
											"pm.test(\"aangaanHuwelijk_Partnerschap.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijkPartnerschap.datum.datum).to.eql(\"1977-04-18\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "e90a5740-0150-4210-a7d1-e5688eca8aa2",
											"key": "burgerservicenummer",
											"value": "999993926",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ingeschrevenpersonen",
					"item": [
						{
							"name": "geen partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "f8bc9a67-aee5-4e69-8e6a-90d455eee30f",
											"key": "burgerservicenummer",
											"value": "999993483",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "geen partner (wel ouders)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(2);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners,ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners,ouders",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "23dba6a5-c708-4b20-82ea-dda2fb518844",
											"key": "burgerservicenummer",
											"value": "999993483",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "één partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "fe3fc9c7-5d94-44b0-beeb-eb87d9a9c620",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "beëindigde relatie",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "2248c7bc-257b-40ac-be6d-2ab2b305bcbe",
											"key": "burgerservicenummer",
											"value": "999992806",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "77897f2c-06cc-4224-a965-5066ddc65b2c",
											"key": "burgerservicenummer",
											"value": "999993008",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "een actuele en een beëindigde partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999992405\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "e133d46c-b4cd-4101-abd2-d6b772fcedf0",
											"key": "burgerservicenummer",
											"value": "999991553",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "een beëindigde en een actuele partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999992260\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "c6ba3271-5356-4297-839f-5ce39e58a047",
											"key": "burgerservicenummer",
											"value": "999995182",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "gescheiden, hertrouwd, gescheiden en hertrouwd met eerste partner",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Jacoba Magdalena\");",
											"});",
											"",
											"pm.test(\"aangaanHuwelijk_Partnerschap.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijkPartnerschap.datum.datum).to.eql(\"1977-04-18\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a3201237-2c2a-41ee-af41-5799cdbc0635",
											"key": "burgerservicenummer",
											"value": "999993926",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "kinderen",
			"item": [
				{
					"name": "kinderen",
					"item": [
						{
							"name": "geen kind",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "5d3cac0e-e6e7-4caa-9d6a-47c2f109bf44",
											"key": "burgerservicenummer",
											"value": "999993653",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						},
						{
							"name": "één kind",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "3dbec946-7ffb-4fe0-81b7-b2f971e0f279",
											"key": "burgerservicenummer",
											"value": "999992260",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						},
						{
							"name": "veel kinderen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen.length).to.eql(8);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "de57cca5-466c-43da-8026-05d1242a4bf7",
											"key": "burgerservicenummer",
											"value": "999994931",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						},
						{
							"name": "onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "475315aa-e5c2-4aaf-9598-5a3f63ed8d4e",
											"key": "burgerservicenummer",
											"value": "999991449",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ingeschrevenpersonen",
					"item": [
						{
							"name": "geen kind",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "e26f504b-ec44-46ba-bae2-29052031aeac",
											"key": "burgerservicenummer",
											"value": "999993653",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "één kind",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_embedded'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "69591e13-2cf7-4f99-8fc6-fcbeeb566b35",
											"key": "burgerservicenummer",
											"value": "999992260",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "veel kinderen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(8);",
											"});",
											"",
											"pm.test(\"['_embedded'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen.length).to.eql(8);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "78806f14-691c-4346-a3c0-7b3c1f5dd822",
											"key": "burgerservicenummer",
											"value": "999994931",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "d08fa5c1-0da4-48f6-a795-b64b87553c7a",
											"key": "burgerservicenummer",
											"value": "999991449",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "naam samenstelling",
			"item": [
				{
					"name": "met tussenvoegsel",
					"item": [
						{
							"name": "E (voorvoegsel met kleine letters)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999991802\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Frans\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"in 't\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Veld\");",
											"});",
											"",
											"pm.test(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"eigen\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"F. in 't Veld\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte heer In 't Veld\");",
											"});",
											"",
											"pm.test(\"naam.gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"de heer In 't Veld\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "61adf6ad-be00-40e0-9ede-18e1acb998c8",
											"key": "burgerservicenummer",
											"value": "999991802",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "E (2)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999994542\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Gerrit\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"den\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Braber\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"G. den Braber\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte heer Den Braber\");",
											"});",
											"",
											"pm.test(\"naam.gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"de heer Den Braber\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "1135d4f4-892a-4b0d-959e-7385194c4c77",
											"key": "burgerservicenummer",
											"value": "999994542",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "E (voorvoegsel met hoofdletter)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Lisanty Teresita del niño Jesús Virgen\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"De las\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"do Livramento de La Salete Jansz.\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"L.T.d.n.J.V. De las do Livramento de La Salete Jansz.\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw De las do Livramento de La Salete Jansz.\");",
											"});",
											"",
											"pm.test(\"naam.gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"mevrouw De las do Livramento de La Salete Jansz.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "52f415fb-e73e-463c-8aee-3c81175d5b8b",
											"key": "burgerservicenummer",
											"value": "999990482",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "E (voorvoegsels met hoofdletters)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"Van Der\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"B\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"P.D.B.B.M.J.K. baron Van Der B\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Hoogwelgeboren heer\");",
											"});",
											"",
											"pm.test(\"naam.gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"baron Van Der B\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "1795dcd0-377c-4d96-854d-477b8accf66e",
											"key": "burgerservicenummer",
											"value": "999992004",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "V (persoon met voorvoegsel kleine letters)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999992387\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Caroline Ilse\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"partner_eigen\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"C.I. Tjon á Jon-du Burck\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw Tjon á Jon-du Burck\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"mevrouw Tjon á Jon-du Burck\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam&fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "2a2e25db-1e02-4487-8245-9d34f423b1ba",
											"key": "burgerservicenummer",
											"value": "999992387",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "V (partner met voorvoegsel kleine letter)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"V\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"J.D. du Burck-Maassen\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw Du Burck-Maassen\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"mevrouw Du Burck-Maassen\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam&fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "12683525-12e2-469d-8e52-990ac05eed40",
											"key": "burgerservicenummer",
											"value": "999993239",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "N (persoon voorvoegsel met enkel aanhalingsteken)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"'S\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Streeveld\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"Jonkvrouw Ż.Å.Đ. 'S Streeveld-te Schaars\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw 'S Streeveld-te Schaars\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"jonkvrouw 'S Streeveld-te Schaars\");",
											"});",
											"",
											"pm.test(\"aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['naam']['aanduidingNaamgebruik']).to.eql(\"eigen_partner\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam&fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "704a2613-8bc9-401e-974c-9c2f13d5f719",
											"key": "burgerservicenummer",
											"value": "999994669",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "P (partner voorvoegsel met hoofdletter)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"'S\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Sigurðardóttir\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"G.S. gravin De Marchant et d'Ansembourg\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Hooggeboren vrouwe\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"gravin De Marchant et d'Ansembourg\");",
											"});",
											"",
											"pm.test(\"aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['naam']['aanduidingNaamgebruik']).to.eql(\"partner\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam&fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "7a1f1cae-cd38-4032-8e94-dd55ebad8bc1",
											"key": "burgerservicenummer",
											"value": "999991553",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "zonder tussenvoegsel",
					"item": [
						{
							"name": "E",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990858\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Lance\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Smit\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"L. Smit\");",
											"});",
											"",
											"pm.test(\"aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte heer Smit\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"de heer Smit\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "0cf439c7-5079-4b80-bab6-824a9f7160b9",
											"key": "burgerservicenummer",
											"value": "999990858",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "V",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999995078\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Christina Maria\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"V\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"C.M. Kierkegaard-Maassen\");",
											"});",
											"",
											"pm.test(\"aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw Kierkegaard-Maassen\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"mevrouw Kierkegaard-Maassen\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a18fe79c-0dca-44a4-a53f-51604d11a753",
											"key": "burgerservicenummer",
											"value": "999995078",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "P",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999991188\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Milošević\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Petrovic\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. Bilgiç\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw Bilgiç\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"mevrouw Bilgiç\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "78a46ee7-c7ea-4a78-8160-f9b1b8338d2a",
											"key": "burgerservicenummer",
											"value": "999991188",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "E geslacht onbekend en voornamen ontbreekt",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999991310\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Lance\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Debrabandere\");",
											"});",
											"",
											"pm.test(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"eigen\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"Debrabandere\");",
											"});",
											"",
											"pm.test(\"aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte Debrabandere\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"Debrabandere\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"onbekend\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "ff918701-1489-488c-bcfd-48319881598d",
											"key": "burgerservicenummer",
											"value": "999991310",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "voornamen naar voorletters",
					"item": [
						{
							"name": "Voornaam met twee-letter klank",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990561\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Thomas Christoffel Nicolaas Maria\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Thuisloos\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"T.C.N.M. Thuisloos\");",
											"});",
											"",
											"pm.test(\"naam.voorletters\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorletters).to.eql(\"T.C.N.M.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "fd8021e8-9f86-4cfc-ba46-87f9eccc18c2",
											"key": "burgerservicenummer",
											"value": "999990561",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Dubbele voornaam met verbindingsteken",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999993872\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Peter-Jan\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Thuisloos\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"P. van der Meijden\");",
											"});",
											"",
											"pm.test(\"naam.voorletters\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorletters).to.eql(\"P.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "badfa323-b531-402b-990a-6792e9b6b8f1",
											"key": "burgerservicenummer",
											"value": "999993872",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Geen voornaam",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999994074\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Peter-Jan\");",
											"});",
											"",
											"pm.test(\"naam.voornamen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Obbadah\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"Obbadah\");",
											"});",
											"",
											"/*",
											"    TODO: Toevoegen test \"naam.voorletters\"",
											"    Assertion van type Undefined is niet automatisch toegevoegd.",
											"*/",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "060035b1-e05e-4e11-a6fc-49bb321356dd",
											"key": "burgerservicenummer",
											"value": "999994074",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "voornaam van 1 letter",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990913\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Jérôme G J P R C 17 Mai Joannes Jantje KarelTheo Jindrich IV Willem Tikan dICKsen Roeland Jan P@r Jan Peter\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"uijt te de\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"St.James St. Helier-Mc.Arthur\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"J.G J P R C 1.M.J.J.K.J.I.W.T.d.R.J.P.J.P. uijt te de St.James St. Helier-Mc.Arthur\");",
											"});",
											"",
											"pm.test(\"naam.voorletters\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorletters).to.eql(\"J.G J P R C 1.M.J.J.K.J.I.W.T.d.R.J.P.J.P.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "ad577095-a761-462a-9d00-6130aaa5cf22",
											"key": "burgerservicenummer",
											"value": "999990913",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "voornaam van 1 letter met punt en voornamen eindigt op spatie",
							"event": [
								{
									"script": {
										"id": "969831ff-13cf-4b20-a858-281a2d62ce33",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"000009830\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Theodoor-Christiaan R. Philip \");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"G\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"van der\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Ven-Van Roedelrode tot Broekzucht\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"T.R.P. graaf van der Ven-Van Roedelrode tot Broekzucht\");",
											"});",
											"",
											"pm.test(\"naam.voorletters\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorletters).to.eql(\"T.R.P.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "3f124bb0-135f-46c4-b3df-56038e37a70c",
											"key": "burgerservicenummer",
											"value": "000009830",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "adelijke titels en predikaat",
					"item": [
						{
							"name": "| -  | AT | E |",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990172\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Żywiałowska\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"van der\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Żywiałowska\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"R.M. Żywiałowska\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw Żywiałowska\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"mevrouw Żywiałowska\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "bd3f3130-95a4-4e6b-8964-5e0f7f37e06d",
											"key": "burgerservicenummer",
											"value": "999990172",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "| -  | AT | P |",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999991553\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Żywiałowska\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"van der\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Sigurðardóttir\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"P\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"G.S. gravin De Marchant et d'Ansembourg\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Hooggeboren vrouwe\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"gravin De Marchant et d'Ansembourg\");",
											"});",
											"",
											"pm.test(\"naam.regelVoorafgaandAanAanschrijfwijzet Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.regelVoorafgaandAanAanschrijfwijze).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam,partners.geslachtsaanduiding&fields=burgerservicenummer,naam,geslachtsaanduiding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam,partners.geslachtsaanduiding",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam,geslachtsaanduiding",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "446f9ddf-4434-4bd0-9319-a46f5c7c924f",
											"key": "burgerservicenummer",
											"value": "999991553",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "| AT | -  | E |",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999993483\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Żywiałowska\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"GI\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"van der\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Schaars\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"J.M. gravin te Schaars\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Hooggeboren vrouwe\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"gravin Te Schaars\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam,geslachtsaanduiding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam,geslachtsaanduiding",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "5020082a-7c0e-4529-9e62-b997bb837ea1",
											"key": "burgerservicenummer",
											"value": "999993483",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "| PK | -  | E |",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999994827\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Żywiałowska\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"van der\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Slechte\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"Jonkvrouw Ż.Å.Đ. S Slechte\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Hoogwelgeboren vrouwe\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"jonkvrouw S Slechte\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam,partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam,partners",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "15c85348-6222-462f-8c91-3485a4392d78",
											"key": "burgerservicenummer",
											"value": "999994827",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "| PK | AT gravin | N |",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999994669\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Żáïŀëñøŕ Åłéèç Đëļŧå\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"'S\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Streeveld\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"N\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"Jonkvrouw Ż.Å.Đ. 'S Streeveld-te Schaars\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw 'S Streeveld-te Schaars\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"jonkvrouw 'S Streeveld-te Schaars\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam&fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "3f22339d-3baa-4918-88ca-ecd301bfab5c",
											"key": "burgerservicenummer",
											"value": "999994669",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "| AT | AT | E |",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990160\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Żywiałowska\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"R\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"van der\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Brink\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"H.J. ridder de Brink\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Hoogwelgeboren heer\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"ridder De Brink\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "2859e550-cfa8-47d8-a91f-269f63fc913c",
											"key": "burgerservicenummer",
											"value": "999990160",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "| AT | AT | P |",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999993951\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Żywiałowska\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"R\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"van der\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Naersen\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"P\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"C. barones Van Nassau la Lecq\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Hoogwelgeboren vrouwe\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"barones Van Nassau la Lecq\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam&fields=burgerservicenummer,naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "57bf6b84-6898-4124-a250-d09733eb18c9",
											"key": "burgerservicenummer",
											"value": "999993951",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "meerdere en/of ontbonden huwelijken",
					"item": [
						{
							"name": "P: 1 actuele partner, 1 ontbonden huwelijk",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999995182\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Anna Maria Petra\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Jansma\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"P\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"A.M.P. Vermeulen\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw Vermeulen\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"mevrouw Vermeulen\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a2d10fca-fe7a-4171-9bad-bcaf06dcde57",
											"key": "burgerservicenummer",
											"value": "999995182",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "V: 1 ontbonden huwelijk",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999992806\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Roukshana Najia\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat.adellijkeTitel_predikaat).to.eql(\"JV\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Bhutto\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"V\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"R.N. Al-Muwallad-Bhutto\");",
											"});",
											"",
											"pm.test(\"naam.aanhef\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanhef).to.eql(\"Geachte mevrouw Al-Muwallad-Bhutto\");",
											"});",
											"",
											"pm.test(\"gebruikInLopendeTekst\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.gebruikInLopendeTekst).to.eql(\"mevrouw Al-Muwallad-Bhutto\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "5463a879-b930-4f80-b645-a9cafc9fc2c5",
											"key": "burgerservicenummer",
											"value": "999992806",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "in onderzoek",
			"item": [
				{
					"name": "ingeschrevenpersonen",
					"item": [
						{
							"name": "Hele categorie Persoon (010000)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.burgerservicenummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.geslachtsaanduiding).to.eql(true);",
											"});",
											"",
											"pm.test(\"datumIngangOnderzoek.datum Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.datumIngangOnderzoek.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.datumIngangOnderzoek.maand).to.eql(10);",
											"});",
											"",
											"pm.test(\"inOnderzoek.datumIngangOnderzoek.dag Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.datumIngangOnderzoek.dag).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.voornamen).to.eql(true);",
											"});",
											"",
											"pm.test.skip(\"adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.adellijkeTitel_predikaat).to.eql(\"true\");",
											"});",
											"",
											"pm.test(\"voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.voorvoegsel).to.eql(true);",
											"});",
											"",
											"pm.test(\"geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.geslachtsnaam).to.eql(true);",
											"});",
											"",
											"pm.test.skip(\"aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.aanduidingNaamgebruik).to.eql(\"true\");",
											"});",
											"",
											"pm.test(\"naam..datumIngangOnderzoek.datum Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.datumIngangOnderzoek.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam..datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"naam..datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.datumIngangOnderzoek.maand).to.eql(10);",
											"});",
											"",
											"pm.test(\"naam..datumIngangOnderzoek.dag Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.datumIngangOnderzoek.dag).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboortedatum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datum).to.eql(true);",
											"});",
											"",
											"pm.test(\"geboorteplaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.plaats).to.eql(true);",
											"});",
											"",
											"pm.test(\"geboorteland\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.land).to.eql(true);",
											"});",
											"",
											"pm.test(\"geboorte..datumIngangOnderzoek.datum Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte..datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"geboorte..datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.maand).to.eql(10);",
											"});",
											"",
											"pm.test(\"geboorte..datumIngangOnderzoek.dag Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.dag).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaltieit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "b0cffb30-f0d6-4359-b585-f930e3fdf369",
											"key": "burgerservicenummer",
											"value": "999991449",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Hele groep Naam (010200)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.voornamen).to.eql(true);",
											"});",
											"",
											"pm.test.skip(\"adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.adellijkeTitel_predikaat).to.eql(\"true\");",
											"});",
											"",
											"pm.test(\"voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.voorvoegsel).to.eql(true);",
											"});",
											"",
											"pm.test(\"geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.geslachtsnaam).to.eql(true);",
											"});",
											"",
											"pm.test(\"aanduidingNaamgebruik Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.aanduidingNaamgebruik).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.inOnderzoek.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-10\");",
											"});",
											"",
											"pm.test(\"naam.inOnderzoek.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"naam.inOnderzoek.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.datumIngangOnderzoek.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"naam.inOnderzoek.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek.datumIngangOnderzoek.dag).to.eql(10);",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaltieit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "5a5e3683-9f4f-4a29-b664-1b0586c684c0",
											"key": "burgerservicenummer",
											"value": "999992466",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Element (010310)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datum).to.eql(true);",
											"});",
											"",
											"pm.test(\"geboorte.plaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.plaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.land Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.inOnderzoek.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"2010-01-01\");",
											"});",
											"",
											"pm.test(\"geboorte.inOnderzoek.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(2010);",
											"});",
											"",
											"pm.test(\"geboorte.inOnderzoek.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.maand).to.eql(1);",
											"});",
											"",
											"pm.test(\"geboorte.inOnderzoek.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.dag).to.eql(1);",
											"});",
											"",
											"pm.test(\"nationaltieit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "80b1cdaa-0baf-409d-9901-db70e5fe0c95",
											"key": "burgerservicenummer",
											"value": "999994086",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Element (010410)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.geslachtsaanduiding).to.eql(true);",
											"});",
											"",
											"pm.test(\"inOnderzoek.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"2010-08-22\");",
											"});",
											"",
											"pm.test(\"inOnderzoek.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(2010);",
											"});",
											"",
											"pm.test(\"inOnderzoek.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.datumIngangOnderzoek.maand).to.eql(8);",
											"});",
											"",
											"pm.test(\"inOnderzoek.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.datumIngangOnderzoek.dag).to.eql(22);",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaltieit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "9fa0641e-25a4-49e9-802f-81dda408ac5b",
											"key": "burgerservicenummer",
											"value": "999991310",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "onderzoek beëindigd (categorie 010000)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaltieit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "38750659-d965-418e-bc44-d5538183d0f9",
											"key": "burgerservicenummer",
											"value": "999994888",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "onderzoek beëindigd (element 010240)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaltieit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "53911e71-1864-4b4d-abc5-8f3de195de75",
											"key": "burgerservicenummer",
											"value": "999994402",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Hele categorie Nationaliteit (040000)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek.nationaliteit).to.eql(true);",
											"});",
											"",
											"pm.test(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek.redenOpname).to.eql(true);",
											"});",
											"",
											"pm.test(\"nationaliteit.aanduidingBijzonderNederlanderschap\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek.aanduidingBijzonderNederlanderschap).to.eql(true);",
											"});",
											"",
											"pm.test(\"nationaliteit..datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"2010-08-22\");",
											"});",
											"",
											"pm.test(\"nationaliteit..datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek.datumIngangOnderzoek.jaar).to.eql(2010);",
											"});",
											"",
											"pm.test(\"nationaliteit..datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek.datumIngangOnderzoek.maand).to.eql(8);",
											"});",
											"",
											"pm.test(\"nationaliteit..datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek.datumIngangOnderzoek.dag).to.eql(22);",
											"});",
											"",
											"pm.test(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datum).to.eql(true);",
											"});",
											"",
											"pm.test(\"geboorte.plaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.plaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.land Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte..datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"2010-08-22\");",
											"});",
											"",
											"pm.test(\"geboorte..datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(2010);",
											"});",
											"",
											"pm.test(\"geboorte..datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.maand).to.eql(8);",
											"});",
											"",
											"pm.test(\"geboorte..datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek.datumIngangOnderzoek.dag).to.eql(22);",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "9aa2f594-3b84-4fde-b244-60ab953c0743",
											"key": "burgerservicenummer",
											"value": "999990482",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Hele categorie Verblijfplaats (080000)",
							"event": [
								{
									"script": {
										"id": "e8c79d41-7a79-4d03-86be-83499acc0db7",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumInschrijvingInGemeente).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.functieAdres).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumAanvangAdreshouding).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.korteNaam).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.straat).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisnummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisletter\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisletter).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummertoevoeging\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisnummertoevoeging).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.aanduidingBijHuisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.aanduidingBijHuisnummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.postcode).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.woonplaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.woonplaats).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.adresseerbaarObjectIdentificatie\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.adresseerbaarObjectIdentificatie).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.nummeraanduidingIdentificatie\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.nummeraanduidingIdentificatie).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.locatiebeschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.locatiebeschrijving).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.verblijfBuitenland\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.verblijfBuitenland).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumVestigingInNederland\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumVestigingInNederland).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.landVanWaarIngeschreven\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.landVanWaarIngeschreven).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangGeldigheid).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.maand).to.eql(9);",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.dag).to.eql(30);",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "1f92bf3e-e1a5-4d67-84b1-7adefd50999f",
											"key": "burgerservicenummer",
											"value": "999990561",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Hele groep Adres (081100)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.korteNaam).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.straat).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisnummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisletter\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisletter).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummertoevoeging\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisnummertoevoeging).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.aanduidingBijHuisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.aanduidingBijHuisnummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.postcode).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.woonplaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.woonplaats).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.adresseerbaarObjectIdentificatie\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.adresseerbaarObjectIdentificatie).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.nummeraanduidingIdentificatie\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.nummeraanduidingIdentificatie).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumInschrijvingInGemeente Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumInschrijvingInGemeente).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.functieAdres Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.functieAdres).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumAanvangAdreshouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumAanvangAdreshouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.locatiebeschrijving Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.locatiebeschrijving).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.verblijfBuitenland Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.verblijfBuitenland).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.landVanWaarIngeschreven Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.landVanWaarIngeschreven).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumVestigingInNederland Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumVestigingInNederland).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumIngangGeldigheid Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangGeldigheid).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"2010-01-04\");",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(2010);",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.maand).to.eql(1);",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.dag).to.eql(4);",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "b6cd7a87-bfd5-4f5f-88ff-566982c71ee9",
											"key": "burgerservicenummer",
											"value": "999995091",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Hele groep Immigratie (081400)",
							"event": [
								{
									"script": {
										"id": "e2e31728-1b8a-4a5c-b70b-8a12a5f39e6c",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumInschrijvingInGemeente Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumInschrijvingInGemeente).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.functieAdres Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.functieAdres).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumAanvangAdreshouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumAanvangAdreshouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.korteNaam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.korteNaam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.straat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisnummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisletter Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisletter).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummertoevoeging Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.huisnummertoevoeging).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.aanduidingBijHuisnummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.aanduidingBijHuisnummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.postcode Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.postcode).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.woonplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.woonplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.identificatiecodeVerblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.identificatiecodeVerblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.nummeraanduidingIdentificatie Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.nummeraanduidingIdentificatie).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.locatiebeschrijving Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.locatiebeschrijving).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.verblijfBuitenland Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.verblijfBuitenland).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.landVanWaarIngeschreven\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.landVanWaarIngeschreven).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumVestigingInNederland\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumVestigingInNederland).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumIngangGeldigheid Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangGeldigheid).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"2000-03-27\");",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(2000);",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"verblijfplaats..datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek.datumIngangOnderzoek.dag).to.eql(27);",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "737b2224-0c07-4f26-a03e-e53c5cc20031",
											"key": "burgerservicenummer",
											"value": "999990792",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Onderzoek verblijfplaats beëindigd",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"gezagsverhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.gezagsverhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfstitel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfstitel).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a54cc26b-9bce-4f67-83d0-d5b23ecc6f47",
											"key": "burgerservicenummer",
											"value": "999992831",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "partners",
					"item": [
						{
							"name": "Hele categorie (050000)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].inOnderzoek.burgerservicenummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1995-11-11\");",
											"});",
											"",
											"pm.test(\"datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1995);",
											"});",
											"",
											"pm.test(\"datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].inOnderzoek.datumIngangOnderzoek.maand).to.eql(11);",
											"});",
											"",
											"pm.test(\"datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].inOnderzoek.datumIngangOnderzoek.dag).to.eql(11);",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.voornamen).to.eql(true);",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.adellijkeTitel_predikaat).to.eql(\"true\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.voorvoegsel).to.eql(true);",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.geslachtsnaam).to.eql(true);",
											"});",
											"",
											"pm.test(\"naam.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1995-11-11\");",
											"});",
											"",
											"pm.test(\"naam.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1995);",
											"});",
											"",
											"pm.test(\"naam.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.datumIngangOnderzoek.maand).to.eql(11);",
											"});",
											"",
											"pm.test(\"naam.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.datumIngangOnderzoek.dag).to.eql(11);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "11778c05-1bca-4945-9a06-ff1f96c6ed3f",
											"key": "burgerservicenummer",
											"value": "999991139",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ouders",
					"item": [
						{
							"name": "Hele categorie ouder1 (020000) en ouder2 (030000)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ouder1.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek.burgerservicenummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder1.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek.geslachtsaanduiding).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder1.datumIngangFamilierechtelijkeBetrekking\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek.datumIngangFamilierechtelijkeBetrekking).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder1.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-11\");",
											"});",
											"",
											"pm.test(\"ouder1.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"ouder1.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek.datumIngangOnderzoek.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"ouder1.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek.datumIngangOnderzoek.dag).to.eql(11);",
											"});",
											"",
											"pm.test(\"ouder1.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek.voornamen).to.eql(true);",
											"});",
											"",
											"pm.test.skip(\"ouder1.naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek.adellijkeTitel_predikaat).to.eql(\"true\");",
											"});",
											"",
											"pm.test(\"ouder1.naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek.voorvoegsel).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder1.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek.geslachtsnaam).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder1.naam.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-11\");",
											"});",
											"",
											"pm.test(\"ouder1.naam.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"ouder1.naam.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek.datumIngangOnderzoek.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"ouder1.naam.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek.datumIngangOnderzoek.dag).to.eql(11);",
											"});",
											"",
											"pm.test(\"ouder2.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.burgerservicenummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.geslachtsaanduiding).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangFamilierechtelijkeBetrekking\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangFamilierechtelijkeBetrekking).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-11\");",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangOnderzoek.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangOnderzoek.dag).to.eql(11);",
											"});",
											"",
											"pm.test(\"ouder2.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.voornamen).to.eql(true);",
											"});",
											"",
											"pm.test.skip(\"ouder2.naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.adellijkeTitel_predikaat).to.eql(\"true\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.voorvoegsel).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.geslachtsnaam).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.naam.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-11\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"ouder2.naam.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.datumIngangOnderzoek.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"ouder2.naam.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.datumIngangOnderzoek.dag).to.eql(11);",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.inOnderzoek.datum).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.inOnderzoek.plaats).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.inOnderzoek.land).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-11\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders"
									],
									"variable": [
										{
											"id": "3a3753e7-1c30-471e-9b47-bc7821f0a480",
											"key": "burgerservicenummer",
											"value": "999990378",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de ouders van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Hele categorie ouder2 (030000)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ouder2.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.burgerservicenummer).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.geslachtsaanduiding).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangFamilierechtelijkeBetrekking\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangFamilierechtelijkeBetrekking).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-10\");",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangOnderzoek.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek.datumIngangOnderzoek.dag).to.eql(10);",
											"});",
											"",
											"pm.test(\"ouder2.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.voornamen).to.eql(true);",
											"});",
											"",
											"pm.test.skip(\"ouder2.naam.adellijkeTitel_predikaat\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.adellijkeTitel_predikaat).to.eql(\"true\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.voorvoegsel).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.geslachtsnaam).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.naam.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-10\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.datumIngangOnderzoek.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.datumIngangOnderzoek.jaar).to.eql(1994);",
											"});",
											"",
											"pm.test(\"ouder2.naam.datumIngangOnderzoek.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.datumIngangOnderzoek.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"ouder2.naam.datumIngangOnderzoek.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek.datumIngangOnderzoek.dag).to.eql(10);",
											"});",
											"",
											"pm.test(\"ouder1.inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.naam.inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.inOnderzoek.datum).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.inOnderzoek.plaats).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.inOnderzoek.land).to.eql(true);",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].geboorte.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.datumIngangOnderzoek.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.inOnderzoek.datumIngangOnderzoek.datum).to.eql(\"1994-03-10\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders"
									],
									"variable": [
										{
											"id": "f585cd56-7788-4cea-a73f-0d5248e34fa5",
											"key": "burgerservicenummer",
											"value": "999992466",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de ouders van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Onderzoek beëindigd ouder2 (030240)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ouder1.inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.naam.inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].inOnderzoek).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.inOnderzoek Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam.inOnderzoek).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders"
									],
									"variable": [
										{
											"id": "6d1cf6f3-e6d6-428d-9335-c30902d05295",
											"key": "burgerservicenummer",
											"value": "999994402",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de ouders van een persoon\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "expand",
			"item": [
				{
					"name": "raadplegen",
					"item": [
						{
							"name": "partners",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijkPartnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"huwelijk\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"vrouw\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(31);",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].ingeschrevenpersonen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].ingeschrevenPersoon.href).to.match(/^.*\\/ingeschrevenpersonen\\/999993239$/);",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a7eddaa8-f9a2-4e12-a5bf-314fe73d4616",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "partners en ouders",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijkPartnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"['_embedded'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"ouder.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').burgerservicenummer).to.eql(\"999991425\");",
											"});",
											"",
											"pm.test(\"ouder.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').naam.voornamen).to.eql(\"Maria Christina\");",
											"});",
											"",
											"pm.test(\"ouder.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').naam.geslachtsnaam).to.eql(\"Ophuijsen\");",
											"});",
											"",
											"pm.test(\"ouder.geboorte.plaats.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').geboorte.plaats.code).to.eql(\"1265\");",
											"});",
											"",
											"pm.test(\"ouder.geboorte.plaats.omschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').geboorte.plaats.omschrijving).to.eql(\"Meeuwen, Hill en Babyloniënbroek\");",
											"});",
											"",
											"pm.test.skip(\"ouder.datumIngangFamilierechtelijkeBetrekking.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').datumIngangFamilierechtelijkeBetrekking.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').naam.voornamen).to.eql(\"Johannes Laurens\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geboorte.datum.datum).to.eql(\"1901-02-02\");",
											"});",
											"",
											"pm.test.skip(\"ouder2.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geslachtsaanduiding).to.eql(\"man\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners,ouders&fields=burgerservicenummer,ouders,partners,kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners,ouders",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,ouders,partners,kinderen",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "26f8fad1-da98-4d04-a4ad-ba515541fdb3",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "ouders + partners",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijkPartnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"['_embedded'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"ouder.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').burgerservicenummer).to.eql(\"999991425\");",
											"});",
											"",
											"pm.test(\"ouder.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').naam.voornamen).to.eql(\"Maria Christina\");",
											"});",
											"",
											"pm.test(\"ouder.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').naam.geslachtsnaam).to.eql(\"Ophuijsen\");",
											"});",
											"",
											"pm.test(\"ouder.geboorte.plaats.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').geboorte.plaats.code).to.eql(\"1265\");",
											"});",
											"",
											"pm.test(\"ouder.geboorte.plaats.omschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').geboorte.plaats.omschrijving).to.eql(\"Meeuwen, Hill en Babyloniënbroek\");",
											"});",
											"",
											"pm.test.skip(\"ouder.datumIngangFamilierechtelijkeBetrekking.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').datumIngangFamilierechtelijkeBetrekking.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').naam.voornamen).to.eql(\"Johannes Laurens\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"ouder2.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geboorte.datum.datum).to.eql(\"1901-02-02\");",
											"});",
											"",
											"pm.test.skip(\"ouder2.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geslachtsaanduiding).to.eql(\"man\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=ouders,partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders,partners",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "4f1e88a6-6290-49e2-a7d7-f1ea4deb8a79",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "specifieke elementen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(31);",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"huwelijk\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"vrouw\");",
											"});",
											"",
											"pm.test(\"partner['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"man\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.burgerservicenummer,partners.soortVerbintenis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.burgerservicenummer,partners.soortVerbintenis",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "e0543d3e-c1fb-4930-a79d-398c467f8640",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "hele gegevensgroep",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(31);",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"partner.soortVerbintenis Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"H\");",
											"});",
											"",
											"pm.test(\"partner.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"V\");",
											"});",
											"",
											"pm.test(\"partner['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "784b56a5-52ed-457e-8307-1ceee7c0793b",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "attributen binnen een groep",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(31);",
											"});",
											"",
											"pm.test(\"partner.geboorte.plaats Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.plaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.land Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"partner.soortVerbintenis Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"H\");",
											"});",
											"",
											"pm.test(\"partner.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"V\");",
											"});",
											"",
											"pm.test(\"partner['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam.voornamen,partners.geboorte.datum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam.voornamen,partners.geboorte.datum",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "4caeb220-ee83-46d6-8ea2-1a965c626c88",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "link",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(31);",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.plaats Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.plaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"partner.soortVerbintenis Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"H\");",
											"});",
											"",
											"pm.test(\"partner.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"V\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											"",
											"pm.test.skip(\"partner['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].ingeschrevenPersoon\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].ingeschrevenPersoon.href).to.match(/^.*\\/ingeschrevenpersonen\\/999993239$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.ingeschrevenPersoon&fields=burgerservicenummer,ouders,partners,kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.ingeschrevenPersoon",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,ouders,partners,kinderen",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "7cf0bc22-6795-4fb2-8e04-1f2655a557cc",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "combinatie",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(31);",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"huwelijk\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"vrouw\");",
											"});",
											"",
											"pm.test(\"partner['_links'].ingeschrevenPersoon Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].ingeschrevenPersoon).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											"",
											"pm.test(\"ouder1.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.ouderAanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].ouderAanduiding).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.datumIngangFamilierechtelijkeBetrekking Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].datumIngangFamilierechtelijkeBetrekking).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.datum Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].geboorte.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.plaats.code Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].geboorte.plaats.code).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.plaats.naam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').geboorte.plaats.omschrijving).to.eql(\"Meeuwen, Hill en Babyloniënbroek\");",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.land Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0].geboorte.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"ouder['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ouder1['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/ouders\\/.*$/);",
											"});",
											"",
											"pm.test(\"ouder1['_links'].ingeschrevenPersoon\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1')['_links'].ingeschrevenPersoon.href).to.eql(baseUrl + \"/ingeschrevenpersonen/999991425\");",
											"});",
											"",
											"pm.test(\"ouder2.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.ouderAanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].ouderAanduiding).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangFamilierechtelijkeBetrekking Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].datumIngangFamilierechtelijkeBetrekking).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.datum Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.plaats.code Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.plaats.code).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.plaats.naam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geboorte.plaats.omschrijving).to.eql(\"Meeuwen, Hill en Babyloniënbroek\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.land Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1].geboorte.land).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ouder2['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[1]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/ouders\\/.*$/);",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ouder2['_links'].ingeschrevenPersoon\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2')['_links'].ingeschrevenPersoon.href).to.match(/^.*\\/ingeschrevenpersonen\\/999994803$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.burgerservicenummer,ouders.geboorte.plaats.omschrijving,partners.soortVerbintenis,partners.naam,ouders.ingeschrevenPersoon,ouders.ouderAanduiding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.burgerservicenummer,ouders.geboorte.plaats.omschrijving,partners.soortVerbintenis,partners.naam,ouders.ingeschrevenPersoon,ouders.ouderAanduiding",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "5e686a00-7c5c-4d39-b3a3-c72cea37afa1",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "inOnderzoek",
							"event": [
								{
									"script": {
										"id": "34e05d67-e577-4561-a925-70530f9e8101",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"huwelijk\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"inOnderzoek.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].inOnderzoek.soortVerbintenis).to.eql(true);",
											"});",
											"",
											"pm.test(\"inOnderzoek.geslachtsaanduiding Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].inOnderzoek.geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Ayaan Nasra Si'id Ahmed\");",
											"});",
											"",
											"pm.test(\"naam.inOnderzoek.voornamen Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.voornamen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.inOnderzoek.adellijkeTitel_predikaat Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.inOnderzoek.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.voorvoegsel).to.eql(true);",
											"});",
											"",
											"pm.test(\"naam.inOnderzoek.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.inOnderzoek.geslachtsnaam).to.eql(true);",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999991139\\/partners\\/.*$/);",
											"});",
											"",
											"pm.test(\"['_links'].ingeschrevenpersonen Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.naam.geslachtsnaam,partners.naam.voorvoegsel,partners.soortVerbintenis&fields=burgerservicenummer,geslachtsaanduiding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam.geslachtsnaam,partners.naam.voorvoegsel,partners.soortVerbintenis",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,geslachtsaanduiding",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "a8765f7c-78d4-4f5b-8bd9-f6b3f60507dd",
											"key": "burgerservicenummer",
											"value": "999991139",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "zoeken",
					"item": [
						{
							"name": "specifieke elementen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(\"31\");",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].soortVerbintenis).to.eql(\"huwelijk\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"vrouw\");",
											"});",
											"",
											"pm.test(\"partner['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geslachtsaanduiding).to.eql(\"man\");",
											"});",
											"",
											"pm.test(\"naam.voorletters\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voorletters).to.eql(\"M.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?expand=partners.burgerservicenummer,partners.geboorte.datum&fields=burgerservicenummer,geslachtsaanduiding,naam.voorletters&burgerservicenummer=999990639&geboorte__datum=1922-09-25&naam__geslachtsnaam=Burck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.burgerservicenummer,partners.geboorte.datum",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,geslachtsaanduiding,naam.voorletters",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "999990639",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "1922-09-25",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Burck",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "hele gegevensgroep",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(\"31\");",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"partner.soortVerbintenis Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].soortVerbintenis).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"H\");",
											"});",
											"",
											"pm.test(\"partner.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"V\");",
											"});",
											"",
											"pm.test(\"partner['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?expand=partners.naam&fields=burgerservicenummer,partners&burgerservicenummer=999990639&geboorte__datum=1922-09-25&naam__geslachtsnaam=Burck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,partners",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "999990639",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "1922-09-25",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Burck",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "attributen binnen een groep",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].naam.geslachtsnaam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geboorte.datum.dag).to.eql(31);",
											"});",
											"",
											"pm.test(\"partner.geboorte.plaats Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geboorte.plaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.geboorte.land Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geboorte.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap.land.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].aangaanHuwelijk_Partnerschap.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"partner.soortVerbintenis Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].soortVerbintenis).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].soortVerbintenis).to.eql(\"H\");",
											"});",
											"",
											"pm.test(\"partner.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"V\");",
											"});",
											"",
											"pm.test(\"partner['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?expand=partners.naam.voornamen,partners.geboorte.datum&fields=burgerservicenummer&burgerservicenummer=999990639&geboorte__datum=1922-09-25&naam__geslachtsnaam=Burck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.naam.voornamen,partners.geboorte.datum",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "999990639",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "1922-09-25",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Burck",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "combinatie",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"partner.burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].burgerservicenummer).to.eql(\"999993239\");",
											"});",
											"",
											"pm.test(\"partner.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].naam.voornamen).to.eql(\"Johanna Dingena\");",
											"});",
											"",
											"pm.test(\"partner.naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].naam.geslachtsnaam).to.eql(\"Maassen\");",
											"});",
											"",
											"pm.test(\"partner.geboorte Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.datum).to.eql(\"1925-08-31\");",
											"});",
											"",
											"pm.test.skip(\"partner.geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners[0].geboorte.datum.dag).to.eql(\"31\");",
											"});",
											"",
											"pm.test.skip(\"partner.aangaanHuwelijk_Partnerschap Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].aangaanHuwelijk_Partnerschap).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"partner.aangaanHuwelijkPartnerschap.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].aangaanHuwelijkPartnerschap.datum.datum).to.eql(\"1950-01-15\");",
											"});",
											"",
											"pm.test.skip(\"partner.soortVerbintenis\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].soortVerbintenis).to.eql(\"huwelijk\");",
											"});",
											"",
											"pm.test.skip(\"partner.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0].geslachtsaanduiding).to.eql(\"vrouw\");",
											"});",
											"",
											"pm.test(\"partner['_links'].ingeschrevenPersoon Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0]['_links'].ingeschrevenPersoon).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"partner['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].partners[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/partners\\/.*$/);",
											"});",
											"",
											"pm.test(\"ouder1.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.ouderAanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0].ouderAanduiding).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.datumIngangFamilierechtelijkeBetrekking Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0].datumIngangFamilierechtelijkeBetrekking).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.datum Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0].geboorte.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.plaats.code Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0].geboorte.plaats.code).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.plaats.omschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1').geboorte.plaats.omschrijving).to.eql(\"Meeuwen, Hill en Babyloniënbroek\");",
											"});",
											"",
											"pm.test(\"ouder1.geboorte.land Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0].geboorte.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"ouder['_links'].ingeschrevenpersonen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders[0]['_links'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ouder1['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[0]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/ouders\\/.*$/);",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ouder1['_links'].ingeschrevenPersoon\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder1')['_links'].ingeschrevenPersoon.href).to.match(/^.*\\/ingeschrevenpersonen\\/999991425$/);",
											"});",
											"",
											"pm.test(\"ouder2.burgerservicenummer Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geslachtsaanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.ouderAanduiding Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].ouderAanduiding).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.datumIngangFamilierechtelijkeBetrekking Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].datumIngangFamilierechtelijkeBetrekking).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.naam Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.datum Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].geboorte.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.plaats.code Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].geboorte.plaats.code).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.plaats.omschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2').geboorte.plaats.omschrijving).to.eql(\"Meeuwen, Hill en Babyloniënbroek\");",
											"});",
											"",
											"pm.test(\"ouder2.geboorte.land Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1].geboorte.land).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ouder2['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders[1]['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999990639\\/ouders\\/.*$/);",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"ouder2['_links'].ingeschrevenPersoon\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_embedded'].ouders.find(item => item.ouderAanduiding=='ouder2')['_links'].ingeschrevenPersoon.href).to.match(/^.*\\/ingeschrevenpersonen\\/999994803$/);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?expand=partners.aangaanHuwelijkPartnerschap,ouders.geboorte.plaats.omschrijving,partners.soortVerbintenis,partners.naam,ouders.ingeschrevenPersoon,ouders.ouderAanduiding&fields=partners&burgerservicenummer=999990639&geboorte__datum=1922-09-25&naam__geslachtsnaam=Burck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.aangaanHuwelijkPartnerschap,ouders.geboorte.plaats.omschrijving,partners.soortVerbintenis,partners.naam,ouders.ingeschrevenPersoon,ouders.ouderAanduiding",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "partners",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "999990639",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "1922-09-25",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Burck",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "fouten",
					"item": [
						{
							"name": "geen expand",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"_['_embedded'] Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "1b8361c8-21c6-4449-980c-4956a706c17e",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "expand=true",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: true.\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "true",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "91b8627c-6403-422e-ad90-9bf299afcf19",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "expand=True",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: True.\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=True",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "True",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "2b67e8d5-858c-4da6-b2ca-e286cb22da6f",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "resource bestaat niet",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: bestaatniet.\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=ouders,bestaatniet,kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders,bestaatniet,kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "dd53cd47-139f-4e27-8552-40598411435e",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "element bestaat niet",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: partners.bestaatniet.\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=partners.burgerservicenummer,partners.bestaatniet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "partners.burgerservicenummer,partners.bestaatniet",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "ea5168c0-9507-446c-88db-5fa76a6da3f5",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "expand van reisdocumenten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: reisdocumenten.\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=reisdocumenten",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "reisdocumenten",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "79b399b7-b0f0-4f48-89b0-6e95824afcb9",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "meerdere fouten",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: bestaatniet.\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=ouders,bestaatniet,kinderen,partners.geenElement,partners.naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders,bestaatniet,kinderen,partners.geenElement,partners.naam",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "9fbac8d1-3ac8-4bc6-a46a-9bc56ed0d115",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "resource bestaat niet (zoeken op naam)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: bestaatniet.\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?expand=ouders,bestaatniet,kinderen&burgerservicenummer=999990639&geboorte__datum=1922-09-25&naam__geslachtsnaam=Burck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders,bestaatniet,kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999990639",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "1922-09-25",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Burck",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "resource bestaat niet (zoeken op adres)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].kinderen Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].partners Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"_['_embedded'].ouders Existence \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: bestaatniet.\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?expand=ouders,bestaatniet,kinderen&burgerservicenummer=999990639&verblijfplaats__huisnummer=132&verblijfplaats__postcode=2584BZ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders,bestaatniet,kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999990639",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "132",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "2584BZ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "fields",
			"item": [
				{
					"name": "ingeschrevenpersonen raadplegen",
					"item": [
						{
							"name": "geen fields",
							"event": [
								{
									"script": {
										"id": "33d463c2-93b2-448b-a45f-e692598c24f3",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"man\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.code).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"woonadres\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "2069a290-f8dc-4690-b867-1e51eb792b88",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "één enkel attribuut",
							"event": [
								{
									"script": {
										"id": "7fb132df-3f09-41be-8eb0-d6117ca5c1f9",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"man\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=geslachtsaanduiding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "geslachtsaanduiding",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "771c534d-6ccf-4680-be10-76806bd468e1",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "meerdere attributen",
							"event": [
								{
									"script": {
										"id": "e4e79a78-6f25-422d-b412-4122c3c658aa",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"man\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geheimhoudingPersoonsgegevens\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geheimhoudingPersoonsgegevens).to.eql(false);",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=geslachtsaanduiding,burgerservicenummer,geheimhoudingPersoonsgegevens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "geslachtsaanduiding,burgerservicenummer,geheimhoudingPersoonsgegevens",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "d5d16c47-2a51-4e28-bd09-85cfeb324e7d",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "hele groep",
							"event": [
								{
									"script": {
										"id": "2ff2029a-ad68-4808-b5a7-a9fdc8dc1fac",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test.skip(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"M\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "7865cf30-9440-4669-b10c-7e29128634a6",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "enkele attributen van groep",
							"event": [
								{
									"script": {
										"id": "3dbec1f4-32a6-47a1-bafd-729e4cd8cab9",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test.skip(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voornamen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test(\"naam.aanduidingNaamgebruik Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test.skip(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).to.eql(1922);",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.dag Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.plaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test(\"geboorte.land Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"M\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].nationaliteit.code Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit.nationaliteit.omschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.omschrijving).to.eql(\"Nederlandse\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].redenOpname Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].datumIngangGeldigheid Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=naam.aanschrijfwijze,nationaliteiten.nationaliteit.omschrijving,geboorte.datum.jaar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "naam.aanschrijfwijze,nationaliteiten.nationaliteit.omschrijving,geboorte.datum.jaar",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "44b07ecf-0bca-49b4-8a2e-67b227044a3b",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "een relatie (link)",
							"event": [
								{
									"script": {
										"id": "4c5775e5-c252-410d-bf09-46088458894d",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"M\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "ouders",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "200b1615-e861-486c-9fbd-5dd713ecf5fc",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "combinatie",
							"event": [
								{
									"script": {
										"id": "81f4c340-7965-497d-9e72-e01ef7723c17",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test.skip(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voornamen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test(\"naam.aanduidingNaamgebruik Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"M\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].nationaliteit.code Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit.nationaliteit.omschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.omschrijving).to.eql(\"Nederlandse\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].redenOpname Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].datumIngangGeldigheid Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=naam.aanschrijfwijze,nationaliteiten.nationaliteit.omschrijving,kinderen,burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "naam.aanschrijfwijze,nationaliteiten.nationaliteit.omschrijving,kinderen,burgerservicenummer",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "2608fbf1-74b8-458b-bcbb-8321c86518d2",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "gevraagd attribuut of groep heeft geen waarde",
							"event": [
								{
									"script": {
										"id": "97c040eb-51c4-42f8-9de1-c152dafb65f0",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test.skip(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test(\"naam.aanduidingNaamgebruik Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"M\");",
											"});",
											"",
											"pm.test(\"opschortingBijhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.opschortingBijhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,naam.voornamen,naam.voorvoegsel,naam.geslachtsnaam,overlijden,opschortingBijhouding.reden",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam.voornamen,naam.voorvoegsel,naam.geslachtsnaam,overlijden,opschortingBijhouding.reden",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "e42a3518-4bd9-4ab3-a11f-688465eaabff",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "geen enkel gevraagd attribuut heeft een waarde",
							"event": [
								{
									"script": {
										"id": "587e5b19-9bfd-42fd-ae5f-66c6630657a0",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test.skip(\"naam.adellijkeTitel_predikaat Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.adellijkeTitel_predikaat).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanschrijfwijze Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"overlijden Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.overlijden).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"M\");",
											"});",
											"",
											"pm.test(\"redenOpschortingBijhouding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.redenOpschortingBijhouding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=overlijden",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "overlijden",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "3684ce15-5965-4622-a7e0-cd857722ea83",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "inOnderzoek",
							"event": [
								{
									"script": {
										"id": "617f87a5-9904-4d7f-bbb3-240fa2f192a9",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"onbekend\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"inOnderzoek.burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"inOnderzoek.geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.inOnderzoek.geslachtsaanduiding).to.eql(true);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=geslachtsaanduiding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "geslachtsaanduiding",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "653d0165-065f-41fc-a5ba-5d9896166d8f",
											"key": "burgerservicenummer",
											"value": "999991449",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "indicatieGeheim",
							"event": [
								{
									"script": {
										"id": "2b938ce2-cb8d-4f2f-88ed-68856205a214",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.eql(\"999990639\");",
											"});",
											"",
											"pm.test(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanschrijfwijze).to.eql(\"M. du Burck\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"vrouw\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geheimhoudingPersoonsgegevens\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geheimhoudingPersoonsgegevens).to.eql(true);",
											"});",
											"",
											"pm.test(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.nationaliteit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].nationaliteit.code).to.eql(\"0001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(132);",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    let burgerservicenummer = pm.variables.get(\"burgerservicenummer\");",
											"    pm.expect(jsonData['_links'].self.href).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + burgerservicenummer);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].kinderen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].kinderen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].kinderen.length).to.eql(4);",
											"});",
											"",
											"pm.test(\"opschortingBijhouding.reden\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.opschortingBijhouding.reden).to.eql(\"emigratie\");",
											"});",
											"",
											"pm.test(\"opschortingBijhouding.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.opschortingBijhouding.datum.datum).to.eql(\"2014-07-02\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=geslachtsaanduiding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "geslachtsaanduiding",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "a3fa29b4-93bc-4759-9e77-43e0312e0df3",
											"key": "burgerservicenummer",
											"value": "999993483",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "attribuut in groep",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"geboorte.plaats.omschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.omschrijving).to.eql(\"Meeuwen\");",
											"});",
											"",
											"pm.test(\"geboorte.plaats.code Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=geboorte.plaats.omschrijving",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "geboorte.plaats.omschrijving",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "76b3ddfb-2fb6-4469-8f35-3131445e4b49",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ingeschrevenpersonen zoeken",
					"item": [
						{
							"name": "combinatie",
							"event": [
								{
									"script": {
										"id": "40f5167a-e59a-42e4-9b7b-714be32aff12",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"ingeschrevenpersonen Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(2);",
											"});",
											"",
											"pm.test.skip(\"burgerservicenummer Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.burgerservicenummer).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999992739').burgerservicenummer).to.eql(\"999992739\");",
											"});",
											"",
											"pm.test.skip(\"naam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voornamen Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voornamen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voornamen).to.eql(\"Mattheus\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.voorvoegsel\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.voorvoegsel).to.eql(\"du\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.geslachtsnaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.geslachtsnaam).to.eql(\"Burck\");",
											"});",
											"",
											"pm.test(\"naam.aanduidingNaamgebruik Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999992739').naam.aanduidingNaamgebruik).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.naam.aanduidingNaamgebruik).to.eql(\"E\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999992739').naam.aanschrijfwijze).to.eql(\"P. Holthuizen\");",
											"});",
											"",
											"pm.test(\"geboorte Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.plaats\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.plaats.code).to.eql(\"1111\");",
											"});",
											"",
											"pm.test.skip(\"geboorte.land\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.land.code).to.eql(\"6030\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"geslachtsaanduiding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geslachtsaanduiding).to.eql(\"M\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"datumEersteInschrijvingGBA\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.datumEersteInschrijvingGBA.datum).to.eql(\"1994-09-30\");",
											"});",
											"",
											"pm.test(\"indicatieGeheim Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geheimhoudingPersoonsgegevens).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"indicatieGeheim\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.indicatieGeheim).to.eql(\"0\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteit).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].nationaliteit.code Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].nationaliteiten[0].nationaliteit.code).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit.nationaliteit.omschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].nationaliteiten[0].nationaliteit.omschrijving).to.eql(\"Nederlandse\");",
											"});",
											"",
											"/*",
											"    TODO: Toevoegen test \"nationaliteit.nationaliteit.code\"",
											"    Assertion van type Undefined is niet automatisch toegevoegd.",
											"*/",
											"",
											"pm.test(\"nationaliteiten[0].redenOpname Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].nationaliteiten[0].redenOpname).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.redenOpname\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].redenOpname.reden).to.eql(\"001\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].datumIngangGeldigheid Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].nationaliteiten[0].datumIngangGeldigheid).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"nationaliteit.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.nationaliteiten[0].datumIngangGeldigheid.datum).to.eql(\"1922-09-25\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.gemeenteVanInschrijving\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.gemeenteVanInschrijving.code).to.eql(\"0518\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumInschrijvingInGemeente\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumInschrijvingInGemeente.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.functieAdres\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.functieAdres).to.eql(\"W\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumAanvangAdreshouding\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumAanvangAdreshouding.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.korteNaam\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.korteNaam).to.eql(\"Zeeruststraat\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.huisnummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.huisnummer).to.eql(\"132\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.postcode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.postcode).to.eql(\"2584BZ\");",
											"});",
											"",
											"pm.test.skip(\"verblijfplaats.datumIngangGeldigheid\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.datumIngangGeldigheid.datum).to.eql(\"1996-03-19\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999992739')['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999992739$/);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999992739')['_links'].ouders).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999992739')['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"['_links'].partners Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_links'].partners.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0]['_links'].ouders.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"burgerservicenummer (2)\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991930').burgerservicenummer).to.eql(\"999991930\");",
											"});",
											"",
											"pm.test(\"naam.voornamen Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].naam.voornamen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.voorvoegsel Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].naam.voorvoegsel).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].naam.geslachtsnaam).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test.skip(\"naam.aanduidingNaamgebruik Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer==999993239)[0].naam.aanduidingNaamgebruik).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"naam.aanschrijfwijze 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991930').naam.aanschrijfwijze).to.eql(\"A. Holthuizen\");",
											"});",
											"",
											"pm.test(\"geboorte Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991930').geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geslachtsaanduiding Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991930').geslachtsaanduiding).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"datumEersteInschrijvingGBA Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991930').datumEersteInschrijvingGBA).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"indicatieGeheim Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991930').indicatieGeheim).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].nationaliteit.code Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991930').nationaliteiten[0].nationaliteit.code).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteit.nationaliteit.omschrijving 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].nationaliteiten[0].nationaliteit.omschrijving).to.eql(\"Nederlandse\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].redenOpname Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].nationaliteiten[0].redenOpname).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"nationaliteiten[0].datumIngangGeldigheid Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].nationaliteiten[0].datumIngangGeldigheid).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"verblijfplaats Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].verblijfplaats).to.be.an(\"undefined\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"['_links'].self 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.find(item => item.burgerservicenummer=='999991930')['_links'].self.href).to.match(/^.*\\/ingeschrevenpersonen\\/999991930$/);",
											"});",
											"",
											"pm.test(\"['_links'].partners Existence 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1]['_links'].partners).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_links'].ouders Count 2\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1]['_links'].ouders.length).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?fields=naam.aanschrijfwijze,nationaliteiten.nationaliteit.omschrijving,ouders,burgerservicenummer&verblijfplaats__huisnummer=103&verblijfplaats__postcode=3038TG",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "naam.aanschrijfwijze,nationaliteiten.nationaliteit.omschrijving,ouders,burgerservicenummer",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "103",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "3038TG",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "fouten",
					"item": [
						{
							"name": "niet bestaande parameter",
							"event": [
								{
									"script": {
										"id": "0c9821a0-c547-4238-a116-e7c7541338f5",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"?fields=\" + pm.variables.get(\"fields\"));",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: bestaatniet.\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=burgerservicenummer,bestaatniet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,bestaatniet",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "d4a2c62f-4d4b-4896-942d-8107555c051b",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "hoofdlettergevoelige parameternaam",
							"event": [
								{
									"script": {
										"id": "db4af3eb-c843-477f-96de-a88af219332d",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"?fields=\" + pm.variables.get(\"fields\"));",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: BurgerServiceNummer.\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=BurgerServiceNummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "BurgerServiceNummer",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "ad67ea34-feaf-424c-b3bc-13c80c417b25",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "parameter in subresource",
							"event": [
								{
									"script": {
										"id": "6072f5db-8687-4add-97e0-9b9ce68218b4",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"?expand=kinderen&fields=\" + pm.variables.get(\"fields\"));",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: kinderen.naam.\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=kinderen&fields=kinderen.naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "kinderen.naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "a4f91222-4e3b-4584-84fa-e8e18566fb0f",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "parameter in embedded subresource",
							"event": [
								{
									"script": {
										"id": "f28ceecc-3f56-42c6-9328-e2bbdea61cd5",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"?expand=\" + pm.variables.get(\"expand\") + \"&fields=\" + pm.variables.get(\"fields\"));",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: _embedded.kinderen.naam.\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=kinderen&fields=_embedded.kinderen.naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "kinderen",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "_embedded.kinderen.naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "b903fb67-a446-4a75-bd80-c9d8a6c91c5f",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "parameter in niet-embedded subresource",
							"event": [
								{
									"script": {
										"id": "6c3e0cfe-a056-4a70-9afd-0767e14372e2",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"?expand=\" + pm.variables.get(\"expand\") + \"&fields=\" + pm.variables.get(\"fields\"));",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: _embedded.kinderen.naam.\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?expand=ouders&fields=_embedded.kinderen.naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "_embedded.kinderen.naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "6ff94705-ae4f-4d7d-a000-46e96960be3f",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "foutafhandeling",
			"item": [
				{
					"name": "foutsituaties",
					"item": [
						{
							"name": "Geen zoekparameter opgegeven",
							"event": [
								{
									"script": {
										"id": "b9c35aca-b0ff-4b9b-8310-2199af0d4a3f",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Ten minste één parameter moet worden opgegeven.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsRequired\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen\");",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Alleen inclusiefOverledenPersonen + fields + expand",
							"event": [
								{
									"script": {
										"id": "88591ea9-c41b-4e4b-9f96-923df9bcf03b",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Minimale combinatie van parameters moet worden opgegeven.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?expand=ouders&fields=burgerservicenummer,naam&inclusiefOverledenPersonen=true\");",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?expand=ouders&fields=burgerservicenummer,naam&inclusiefOverledenPersonen=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "ouders",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,naam",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Minimale combinatie van parameters",
							"event": [
								{
									"script": {
										"id": "04682ac0-e74f-4810-aa5d-307bc3e36214",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Minimale combinatie van parameters moet worden opgegeven.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsCombination\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__voornamen=Wei%20Wei&verblijfplaats__gemeenteVanInschrijving=0551&verblijfplaats__straat=Maurickerf\");",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1974-02-21&naam__voornamen=Wei Wei&verblijfplaats__gemeenteVanInschrijving=0551&verblijfplaats__straat=Maurickerf",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1974-02-21",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "Wei Wei",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0551",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Maurickerf",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Teveel zoekresultaten",
							"event": [
								{
									"script": {
										"id": "b2045add-6ec7-452a-87d7-4c42bb922ce1",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Teveel zoekresultaten.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"tooManyResults\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?verblijfplaats__huisnummer=10&verblijfplaats__postcode=1017GS\");",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__huisnummer=10&verblijfplaats__postcode=1017GS",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "10",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "1017GS",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "Persoon bestaat niet",
							"event": [
								{
									"script": {
										"id": "59e875c9-01c5-45ae-b935-eb6514d9e06b",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\"));",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "039f3d83-eb92-4316-ab2b-4e504f12780d",
											"key": "burgerservicenummer",
											"value": "123456789",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Persoon bestaat niet /partners",
							"event": [
								{
									"script": {
										"id": "e77b57da-9125-49d9-a1e5-c84b62eb8011",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/partners\");",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners"
									],
									"variable": [
										{
											"id": "44291c1f-f688-4471-9abb-11f223d971e0",
											"key": "burgerservicenummer",
											"value": "123456789",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de actuele partners van een persoon. Partners uit beëindigde huwelijken of partnerschappen worden niet geretourneerd\n"
							},
							"response": []
						},
						{
							"name": "Persoon bestaat niet /partners/{id}",
							"event": [
								{
									"script": {
										"id": "f88c83db-00d7-4896-b2c4-e785a3c74ce2",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl +\"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/partners/\" + pm.variables.get(\"id\"));",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners",
										":id"
									],
									"variable": [
										{
											"id": "de645d34-a27f-425d-82ca-ee0b5af1f55e",
											"key": "burgerservicenummer",
											"value": "123456789",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "2cbb0d14-e05e-446b-b83f-d86ab1da6e33",
											"key": "id",
											"value": "1",
											"type": "string",
											"description": "De identificatie van de partner.\n"
										}
									]
								},
								"description": "Raadpleeg de partner van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Partner bestaat niet /partners/{id}",
							"event": [
								{
									"script": {
										"id": "55662ba4-a793-4a81-91cf-d4e28fb05010",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/partners/\" + pm.variables.get(\"id\"));",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/partners/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"partners",
										":id"
									],
									"variable": [
										{
											"id": "7049d856-5a29-4493-95a1-b72c1eab40bb",
											"key": "burgerservicenummer",
											"value": "999994669",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "0efa5d05-0214-4932-bfe7-1838c8191f0e",
											"key": "id",
											"value": "bestaatniet",
											"type": "string",
											"description": "De identificatie van de partner.\n"
										}
									]
								},
								"description": "Raadpleeg de partner van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Persoon bestaat niet /ouders",
							"event": [
								{
									"script": {
										"id": "ad46438c-92c9-40d6-b50b-001c23b6fe5d",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/ouders\");",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders"
									],
									"variable": [
										{
											"id": "31e23a82-ff8c-4e85-a691-a1167957ce14",
											"key": "burgerservicenummer",
											"value": "123456789",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de ouders van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Persoon bestaat niet /ouders/{id}",
							"event": [
								{
									"script": {
										"id": "24b832d1-7ce3-4ade-9d00-95d570000803",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl +\"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/ouders/\" + pm.variables.get(\"id\"));",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders",
										":id"
									],
									"variable": [
										{
											"id": "56d1e6fc-8516-45bc-8dd8-34111cdefd70",
											"key": "burgerservicenummer",
											"value": "123456789",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "d757e062-3ebb-4185-8c13-c08c80b049d1",
											"key": "id",
											"value": "1",
											"type": "string",
											"description": "De identificatie van de ouder.\n"
										}
									]
								},
								"description": "Raadpleeg een ouder van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Ouder bestaat niet /ouders/{id} Copy",
							"event": [
								{
									"script": {
										"id": "3dd0b315-2a5c-4ec0-8a50-2ae7a88aca21",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl +\"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/ouders/\" + pm.variables.get(\"id\"));",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/ouders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"ouders",
										":id"
									],
									"variable": [
										{
											"id": "ac04c3ce-9233-4c3f-9db8-a86626a30e7c",
											"key": "burgerservicenummer",
											"value": "999994669",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "82787968-01cb-4006-8b03-17f3edc6fd3d",
											"key": "id",
											"value": "bestaatniet",
											"type": "string",
											"description": "De identificatie van de ouder.\n"
										}
									]
								},
								"description": "Raadpleeg een ouder van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Persoon bestaat niet /kinderen",
							"event": [
								{
									"script": {
										"id": "852dd2d5-79d7-4b5d-acf9-5517238f0b39",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/kinderen\");",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "475858ef-e7cb-4b2b-b0b7-7f1485b4d9d2",
											"key": "burgerservicenummer",
											"value": "123456789",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Persoon bestaat niet /kinderen/{id}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9377c32e-d634-40bc-8f4c-c275ea6b1b5b",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl +\"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/kinderen/\" + pm.variables.get(\"id\"));",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen",
										":id"
									],
									"variable": [
										{
											"id": "7c34bd52-65bf-4b09-919f-30c182a211d3",
											"key": "burgerservicenummer",
											"value": "123456789",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "e350abab-ddd2-4663-a5ac-ef9e4c10b042",
											"key": "id",
											"value": "",
											"type": "string",
											"description": "De identificatie van het kind.\n"
										}
									]
								},
								"description": "Raadpleeg een kind van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Kind bestaat niet /kinderen/{id}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "afba9470-61ee-4fe4-ba76-b170a4cff72b",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotFound\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Opgevraagde resource bestaat niet.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notFound\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl +\"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/kinderen/\" + pm.variables.get(\"id\"));",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen",
										":id"
									],
									"variable": [
										{
											"id": "bc0f9126-d464-4ec2-b432-48932ac7ad3e",
											"key": "burgerservicenummer",
											"value": "999994669",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "581f7f32-1c1d-457f-a9dc-e481e975dd6d",
											"key": "id",
											"value": "bestaatniet",
											"type": "string",
											"description": "De identificatie van het kind.\n"
										}
									]
								},
								"description": "Raadpleeg een kind van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Contenttype application/xml wordt niet ondersteund",
							"event": [
								{
									"script": {
										"id": "b7e31a4d-4160-4649-a62d-8a7144f0c4e4",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([406]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_NotAcceptable\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Gevraagde contenttype wordt niet ondersteund.\");",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(406);",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"notAcceptable\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\"));",
											"});",
											"",
											"pm.test(\"invalidParams Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/problem\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "get",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "e31e2da3-1ab1-4ebf-b6f3-46c6795f0b7b",
											"key": "burgerservicenummer",
											"value": "999994669",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Contenttype application/json",
							"event": [
								{
									"script": {
										"id": "b4f422b7-2d84-4c98-af59-932c7853960c",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/hal\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "get",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "3b1d4b5e-8363-4558-b1d8-838c11a1c417",
											"key": "burgerservicenummer",
											"value": "999994669",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "Contenttype application/hal+json",
							"event": [
								{
									"script": {
										"id": "e500f1bc-8367-4939-890a-6443158187a8",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Contenttype\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.match(/^application\\/hal\\+json\\;/);",
											"});",
											"",
											"pm.test(\"HTTP Header Equals - Api-version\", () => {",
											"    pm.expect(pm.response.headers.get(\"Api-version\")).to.eql(pm.variables.get(\"versie\"));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "get",
								"header": [
									{
										"key": "Accept",
										"value": "application/hal+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "f790cefc-d6a3-4ef0-83ca-6780b86be55e",
											"key": "burgerservicenummer",
											"value": "999994669",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "parametervalidatie",
					"item": [
						{
							"name": "expand resource bestaat niet",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?expand\\=bestaatniet\\&verblijfplaats\\_\\_huisnummer\\=132\\&verblijfplaats\\_\\_postcode\\=2584BZ$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"expand\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: bestaatniet.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?expand=bestaatniet&verblijfplaats__huisnummer=132&verblijfplaats__postcode=2584BZ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "bestaatniet",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature)."
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "132",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "2584BZ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "fields element bestaat niet",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?fields\\=bestaatniet\\&verblijfplaats\\_\\_huisnummer\\=132\\&verblijfplaats\\_\\_postcode\\=2584BZ$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"fields\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Deel van de parameterwaarde niet correct: bestaatniet.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?fields=bestaatniet&verblijfplaats__huisnummer=132&verblijfplaats__postcode=2584BZ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "bestaatniet",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "132",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "2584BZ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "niet valide datum (geboortedatum heeft onjuist formaat)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?geboorte\\_\\_datum\\=19750730\\&verblijfplaats\\_\\_huisnummer\\=108\\&verblijfplaats\\_\\_postcode\\=5751VR$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"geboorte__datum\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"date\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is geen geldige datum.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=19750730&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "19750730",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "niet valide datum (geboortedatum is 29 februari)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?geboorte\\_\\_datum\\=2017\\-02\\-29\\&verblijfplaats\\_\\_huisnummer\\=108\\&verblijfplaats\\_\\_postcode\\=5751VR$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"geboorte__datum\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"date\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is geen geldige datum.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2017-02-29&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2017-02-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "niet valide datum (geboortedatum is gedeeltelijk onbekend)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?geboorte\\_\\_datum\\=1975\\-00\\-00\\&verblijfplaats\\_\\_huisnummer\\=108\\&verblijfplaats\\_\\_postcode\\=5751VR$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"geboorte__datum\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"date\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is geen geldige datum.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1975-00-00&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1975-00-00",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "niet valide datum (geboortedatum is alleen een jaar)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?geboorte\\_\\_datum\\=1975\\&verblijfplaats\\_\\_huisnummer\\=108\\&verblijfplaats\\_\\_postcode\\=5751VR$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"geboorte__datum\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"date\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is geen geldige datum.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=1975&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "1975",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "maximale lengte 1 (huisletter)",
							"event": [
								{
									"script": {
										"id": "d190b772-8837-490d-ae32-b16fa57774da",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?verblijfplaats__huisletter=ab&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"verblijfplaats__huisletter\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"maxLength\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is langer dan maximale lengte 1.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__huisletter=ab&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "ab",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "maximale lengte 16 (nummeraanduidingIdentificatie)",
							"event": [
								{
									"script": {
										"id": "0c6da246-135d-4567-a7b0-d02525cfd53f",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?verblijfplaats__huisnummer=108&verblijfplaats__nummeraanduidingIdentificatie=12345678901234567&verblijfplaats__postcode=5751VR\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"verblijfplaats__nummeraanduidingIdentificatie\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"maxLength\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is langer dan maximale lengte 16.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__huisnummer=108&verblijfplaats__nummeraanduidingIdentificatie=12345678901234567&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "12345678901234567",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "enumeratie (geslachtsaanduiding)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?geslachtsaanduiding\\=X\\&verblijfplaats\\_\\_huisnummer\\=108\\&verblijfplaats\\_\\_postcode\\=5751VR$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"geslachtsaanduiding\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"enum\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde heeft geen geldige waarde uit de enumeratie.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geslachtsaanduiding=X&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "X",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "integer (huisnummer)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?verblijfplaats\\_\\_huisnummer\\=108a\\&verblijfplaats\\_\\_postcode\\=5751VR$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"verblijfplaats__huisnummer\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"integer\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is geen geldige integer.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__huisnummer=108a&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108a",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "maximale waarde (huisnummer)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?verblijfplaats\\_\\_huisnummer\\=100000\\&verblijfplaats\\_\\_postcode\\=5751VR$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"verblijfplaats__huisnummer\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"maximum\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is hoger dan maximum 99999.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__huisnummer=100000&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "100000",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "patroon (postcode)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.match(/^.*\\/ingeschrevenpersonen\\?verblijfplaats\\_\\_huisnummer\\=108\\&verblijfplaats\\_\\_postcode\\=575VR$/);",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"verblijfplaats__postcode\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"pattern\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde voldoet niet aan patroon ^[1-9]{1}[0-9]{3}[A-Z]{2}$.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__huisnummer=108&verblijfplaats__postcode=575VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "575VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "tabelwaarde (gemeentevaninschrijving)",
							"event": [
								{
									"script": {
										"id": "adf088e0-92ad-4812-8fc5-43668b775f76",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=8888&verblijfplaats__huisnummer=132&verblijfplaats__postcode=2584BZ\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"verblijfplaats__gemeenteVanInschrijving\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"table\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde komt niet voor in de tabel.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=8888&verblijfplaats__huisnummer=132&verblijfplaats__postcode=2584BZ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "8888",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "132",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "2584BZ",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "boolean (inclusiefOverledenPersonen)",
							"event": [
								{
									"script": {
										"id": "cdb4b984-69fc-4b3a-8adf-0927449443ed",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?inclusiefOverledenPersonen=ja&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"inclusiefOverledenPersonen\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"boolean\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is geen geldige boolean.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?inclusiefOverledenPersonen=ja&verblijfplaats__huisnummer=108&verblijfplaats__postcode=5751VR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "ja",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "108",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "5751VR",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "resource id - minimale lengte (burgerservicenummer)",
							"event": [
								{
									"script": {
										"id": "63e9bac1-0101-48fd-a390-c2b781197dfc",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\"));",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"burgerservicenummer\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"minLength\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is korter dan minimale lengte 9.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "ecb12ad3-76f0-4210-a9d9-73e05ec7d3e8",
											"key": "burgerservicenummer",
											"value": "12345678",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "resource id - maximale lengte (burgerservicenummer)",
							"event": [
								{
									"script": {
										"id": "8e894327-2cfb-49f4-b0d0-d60378aa9ed1",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\"));",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"burgerservicenummer\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"maxLength\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is langer dan maximale lengte 9.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "65ad1d11-9f8f-47d1-9fd9-6cde082827cf",
											"key": "burgerservicenummer",
											"value": "1234567890",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "resource id kinderen - minimale lengte (burgerservicenummer)",
							"event": [
								{
									"script": {
										"id": "bbea50aa-5751-433d-b949-e7106d46c44a",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/kinderen\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"burgerservicenummer\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"minLength\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is korter dan minimale lengte 9.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "e5a2dd42-ced9-4c70-8deb-eb4095cfd736",
											"key": "burgerservicenummer",
											"value": "12345678",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						},
						{
							"name": "resource id kinderenUuid - minimale lengte (burgerservicenummer)",
							"event": [
								{
									"script": {
										"id": "cefd196e-f541-4104-8393-31e5133c85b9",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen/\" + pm.variables.get(\"burgerservicenummer\") + \"/kinderen/\" + pm.variables.get(\"id\"));",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"burgerservicenummer\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"minLength\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is korter dan minimale lengte 9.\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen",
										":id"
									],
									"variable": [
										{
											"id": "0d16add9-d668-432a-8f65-dc102ed95067",
											"key": "burgerservicenummer",
											"value": "12345678",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "9b5c921e-cea6-43c9-9e53-a0b67929b10b",
											"key": "id",
											"value": "",
											"type": "string",
											"description": "De identificatie van het kind.\n"
										}
									]
								},
								"description": "Raadpleeg een kind van een persoon\n"
							},
							"response": []
						},
						{
							"name": "gemeentevaninschrijving - 0000 niet toegestaan",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?naam__geslachtsnaam=Jager&verblijfplaats__gemeenteVanInschrijving=0000\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"verblijfplaats__gemeenteVanInschrijving\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"table\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde komt niet voor in de tabel.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Jager&verblijfplaats__gemeenteVanInschrijving=0000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Jager",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0000",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "pattern en maxLength (burgerservicenummer)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?burgerservicenummer=999993653a\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"invalidParams.name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"burgerservicenummer\");",
											"});",
											"",
											"pm.test(\"invalidParams.code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"maxLength\");",
											"});",
											"",
											"pm.test(\"invalidParams.reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is langer dan maximale lengte 9.\");",
											"});",
											"",
											"pm.test(\"Match content of [name]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['invalidParams'][1]['name']).to.eql(\"burgerservicenummer\");",
											"});",
											"",
											"pm.test(\"Match content of [code]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['invalidParams'][1]['code']).to.eql(\"pattern\");",
											"});",
											"",
											"pm.test(\"Match content of [reason]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['invalidParams'][1]['reason']).to.eql(\"Waarde voldoet niet aan patroon ^[0-9]*$.\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999993653a",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999993653a",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "onjuiste array burgerservicenummers",
							"event": [
								{
									"script": {
										"id": "f8c70999-a1e5-4eb9-b728-44ceaa3c74cb",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"type\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?#System_Net_HttpStatusCode_BadRequest\");",
											"});",
											"",
											"pm.test(\"title\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Een of meerdere parameters zijn niet correct.\");",
											"});",
											"",
											"pm.test(\"detail Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.detail).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.eql(\"paramsValidation\");",
											"});",
											"",
											"pm.test(\"instance\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.instance).to.eql(baseUrl + \"/ingeschrevenpersonen?burgerservicenummer=999993653,%20999990469\");",
											"});",
											"",
											"pm.test(\"invalidParams Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"invalidParams[0].name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].name).to.eql(\"burgerservicenummer\");",
											"});",
											"",
											"pm.test(\"invalidParams[0].code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].code).to.eql(\"maxLength\");",
											"});",
											"",
											"pm.test(\"invalidParams[0].reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[0].reason).to.eql(\"Waarde is langer dan maximale lengte 9.\");",
											"});",
											"",
											"pm.test(\"invalidParams[1].name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[1].name).to.eql(\"burgerservicenummer\");",
											"});",
											"",
											"pm.test(\"invalidParams[1].code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[1].code).to.eql(\"pattern\");",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"invalidParams[1].reason\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.invalidParams[1].reason).to.match(/^Waarde\\ voldoet\\ niet\\ aan\\ patroon\\ \\^\\[0\\-9\\].*\\$\\.$/);",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999993653, 999990469",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999993653, 999990469",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "zoeken",
			"item": [
				{
					"name": "filteren op zoekparameters",
					"item": [
						{
							"name": "openbareruimtenaam ongelijk korteNaam",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Amsterdam\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.korteNaam Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.korteNaam).to.eql(\"Koningsstraat\");",
											"});",
											"",
											"pm.test(\"naam.geslachtsnaam Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.geslachtsnaam).to.eql(\"Urquhart\");",
											"});",
											"",
											"pm.test(\"naam.voornanen Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].naam.voornamen).to.eql(\"Valentijn\");",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0363&verblijfplaats__huisnummer=1&verblijfplaats__straat=Amsterdam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0363",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Amsterdam",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "openbareruimtenaam ongelijk korteNaam - zoeken op korteNaam",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0363&verblijfplaats__huisnummer=1&verblijfplaats__straat=Koningsstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0363",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Koningsstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "openbareruimtenaam ontbreekt - zoeken op naam + huisnummer",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Plieger&verblijfplaats__gemeenteVanInschrijving=0363&verblijfplaats__huisnummer=35",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Plieger",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0363",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "35",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "openbareruimtenaam ontbreekt - zoeken op korteNaam",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0363&verblijfplaats__huisnummer=35&verblijfplaats__straat=Daniël Stalpertstraat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0363",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "35",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Daniël Stalpertstraat",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "huisletter",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Marktplein\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummer Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisnummer).to.eql(10);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(11);",
											"});",
											"",
											"pm.test(\"[0].burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].burgerservicenummer).to.eql(\"999995741\");",
											"});",
											"",
											"pm.test(\"[1].burgerservicenummer\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[1].burgerservicenummer).to.eql(\"999995765\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0626&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=10&verblijfplaats__straat=Marktplein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0626",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "10",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Marktplein",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "huisletter (fout)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0626&verblijfplaats__huisletter=b&verblijfplaats__huisnummer=10&verblijfplaats__straat=Marktplein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0626",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "b",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "10",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Marktplein",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "huisletter (niet opgegeven)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"verblijfplaats.straat Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.straat).to.eql(\"Marktplein\");",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisnummer Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisnummer).to.eql(10);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(11);",
											"});",
											"",
											"pm.test(\"verblijfplaats.huisletter Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.huisletter).to.eql(\"a\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?verblijfplaats__gemeenteVanInschrijving=0626&verblijfplaats__huisnummer=10&verblijfplaats__straat=Marktplein",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0626",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "10",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Marktplein",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op naam + huistoevoeging",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Plieger&verblijfplaats__gemeenteVanInschrijving=0363&verblijfplaats__huisnummer=35&verblijfplaats__huisnummertoevoeging=III",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Plieger",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0363",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "35",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "III",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op naam + onjuiste huistoevoeging",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Plieger&verblijfplaats__gemeenteVanInschrijving=0363&verblijfplaats__huisnummer=35&verblijfplaats__huisnummertoevoeging=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Plieger",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0363",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "35",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "2",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - voornamen onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Fout&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Fout",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - voorvoegsel onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?fields=naam,geboorte,verblijfplaats,burgerservicenummer&geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=in het&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "naam,geboorte,verblijfplaats,burgerservicenummer",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "in het",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - geslachtsnaam onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Fout&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Fout",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - geboortedatum onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2019-01-01&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2019-01-01",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - geboorteplaats onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0772&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0772",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - geslachtsaanduiding onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=man&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "man",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - straat onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Fout&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Fout",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - huisnummer onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=999&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "999",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - huisletter onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=F&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "F",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - postcode onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=1234AA",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "1234AA",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - gemeentevaninschrijving onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0141&verblijfplaats__huisletter=a&verblijfplaats__huisnummer=1&verblijfplaats__nummeraanduidingIdentificatie=0163200000554956&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0141",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "a",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "1",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554956",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "zoeken op alles - nummeraanduidingIdentificatie onjuist",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2001-12-29&geboorte__plaats=0141&geslachtsaanduiding=vrouw&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Stappen&naam__voorvoegsel=van der&naam__voornamen=Suzanne&verblijfplaats__gemeenteVanInschrijving=0163&verblijfplaats__huisletter=b&verblijfplaats__huisnummer=15&verblijfplaats__nummeraanduidingIdentificatie=0163200000554955&verblijfplaats__straat=Jan van Galenlaan&verblijfplaats__postcode=7441JC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2001-12-29",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "0141",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "geslachtsaanduiding",
											"value": "vrouw",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n"
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Stappen",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "van der",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voornamen",
											"value": "Suzanne",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0163",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "b",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "15",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "0163200000554955",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n"
										},
										{
											"key": "verblijfplaats__straat",
											"value": "Jan van Galenlaan",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n"
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "7441JC",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "zoekresultaten",
					"item": [
						{
							"name": "vind geen ingeschrevenpersonen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"['_embedded'] Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']).not.to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?geboorte__datum=2019-07-11&naam__geslachtsnaam=ik besta niet&naam__voornamen=dit is geen naam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2019-07-11",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "ik besta niet",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "dit is geen naam",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "feature: leeftijd",
			"item": [
				{
					"name": "ingeschrevenpersonen",
					"item": [
						{
							"name": "volledige datum",
							"event": [
								{
									"script": {
										"id": "c26226a8-3e32-4705-9120-3e712499cf23",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1985-12-01\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).to.eql(1985);",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).to.eql(12);",
											"});",
											"",
											"pm.test(\"geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.eql(1);",
											"});",
											"",
											"/*",
											"gebruik globale variabele leeftijd met functie:",
											"(geboorte) => { ",
											"  var vandaag = new Date(); ",
											"  var ditJaar = vandaag.getFullYear();",
											"  var dezeMaand = vandaag.getMonth()+1;",
											"  var dezeDag = vandaag.getDate();",
											"  var leeftijdInJaren = ditJaar - geboorte.jaar;",
											"  if (dezeMaand<geboorte.maand) { leeftijdInJaren--; } ",
											"  if (dezeMaand==geboorte.maand && dezeDag<geboorte.dag) { leeftijdInJaren--; }",
											"  return leeftijdInJaren; ",
											"}",
											"*/",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=leeftijd,geboorte.datum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "leeftijd,geboorte.datum",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "6defe1c5-b9a9-40a3-9bf0-d711de65ae81",
											"key": "burgerservicenummer",
											"value": "999993653",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "volledige datum (31 december)",
							"event": [
								{
									"script": {
										"id": "5649cbc4-4592-4860-89c9-5f4effe0bf4b",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1969-12-31\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).to.eql(1969);",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).to.eql(12);",
											"});",
											"",
											"pm.test(\"geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.eql(31);",
											"});",
											"",
											"/*",
											"    TODO: omzetten GroovyScriptAssertion \"leeftijd Script Assertion\"",
											"    import groovy.json.JsonSlurperimport java.time.*def jsonSlurper = new JsonSlurper()def antwoord = jsonSlurper.parseText(messageExchange.getResponseContent())def geboortedatum = LocalDate.of( antwoord.geboorte.datum.jaar, antwoord.geboorte.datum.maand, antwoord.geboorte.datum.dag )def vandaag = LocalDate.now()def leeftijd = Period.between(geboortedatum, vandaag).yearslog.info \"leeftijd:\" + leeftijdassert antwoord.leeftijd == leeftijd",
											"*/",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"});"
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "00aaa1c7-9fa9-48e0-af35-4c575bd73672",
											"key": "burgerservicenummer",
											"value": "999991103",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "volledige datum (1 januari)",
							"event": [
								{
									"script": {
										"id": "774008dd-7107-4606-9064-a3cb8f650e4c",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"2000-01-01\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).to.eql(2000);",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).to.eql(1);",
											"});",
											"",
											"pm.test(\"geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.eql(1);",
											"});",
											"",
											"/*",
											"    TODO: omzetten GroovyScriptAssertion \"leeftijd Script Assertion\"",
											"    import groovy.json.JsonSlurperimport java.time.*def jsonSlurper = new JsonSlurper()def antwoord = jsonSlurper.parseText(messageExchange.getResponseContent())def geboortedatum = LocalDate.of( antwoord.geboorte.datum.jaar, antwoord.geboorte.datum.maand, antwoord.geboorte.datum.dag )def vandaag = LocalDate.now()def leeftijd = Period.between(geboortedatum, vandaag).yearslog.info \"leeftijd:\" + leeftijdassert antwoord.leeftijd == leeftijd",
											"*/",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"});"
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "2f64492c-6e5c-40ef-9b65-511fc4a70d2d",
											"key": "burgerservicenummer",
											"value": "999992740",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "schikkeldag (29 februari)",
							"event": [
								{
									"script": {
										"id": "ef4c2626-5644-440b-8f73-1261365c6974",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1980-02-29\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).to.eql(1980);",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).to.eql(2);",
											"});",
											"",
											"pm.test(\"geboorte.datum.dag\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.eql(29);",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=leeftijd,geboorte.datum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "leeftijd,geboorte.datum",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "589bedd7-444a-4fc1-b5b4-2961add14bdb",
											"key": "burgerservicenummer",
											"value": "999991358",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "volledig onbekende geboortedatum",
							"event": [
								{
									"script": {
										"id": "106d8326-17e2-4dee-a39d-ac679580f6fb",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"geboorte Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"leeftijd Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "1bd242df-d5b1-4a90-b5f8-21b265518f98",
											"key": "burgerservicenummer",
											"value": "999995066",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "jaar en maand bekend (februari)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7dc4a8cd-8bcd-4f2d-8ea7-a3ecae117fc9",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1964-05-07\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    var vandaag = new Date();",
											"    if (jsonData.geboorte.maand==vandaag.getMonth()) {",
											"        pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"    } else {",
											"        pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"    }",
											"});",
											"",
											"pm.test(\"geboorte.datum Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.dag Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "9f5328d8-9f4f-47b4-95db-ebc6f444e5ca",
											"key": "burgerservicenummer",
											"value": "999990457",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "jaar en maand bekend (maart)",
							"event": [
								{
									"script": {
										"id": "cb3a55e3-5579-4371-81f7-73e7b802a607",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1964-05-07\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).to.eql(1978);",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).to.eql(3);",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    var vandaag = new Date();",
											"    if (jsonData.geboorte.maand==vandaag.getMonth()) {",
											"        pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"    } else {",
											"        pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"    }",
											"});",
											"",
											"pm.test(\"geboorte.datum Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.dag Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a8301bab-0079-4ed9-80bc-655de6f76059",
											"key": "burgerservicenummer",
											"value": "999992351",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "jaar en maand bekend (september)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0a95e9dd-ba22-4aed-9186-bd7237a86aff",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1964-05-07\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    var vandaag = new Date();",
											"    if (jsonData.geboorte.maand==vandaag.getMonth()) {",
											"        pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"    } else {",
											"        pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"    }",
											"});",
											"",
											"pm.test(\"geboorte.datum Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.dag Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "295f8866-f49e-4382-82f1-549d11043feb",
											"key": "burgerservicenummer",
											"value": "999995856",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "jaar en maand bekend (oktober)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9db59f2a-bfb2-4830-9100-5dd30d3ca7ce",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1964-05-07\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    var vandaag = new Date();",
											"    if (jsonData.geboorte.maand==vandaag.getMonth()) {",
											"        pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"    } else {",
											"        pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"    }",
											"});",
											"",
											"pm.test(\"geboorte.datum Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.dag Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "d8bc5699-6d05-4986-9e44-9906857b5987",
											"key": "burgerservicenummer",
											"value": "999995868",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "jaar en maand bekend (november)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c920ebd-7d9a-4267-9a48-b6ce582effda",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test.skip(\"geboorte.datum.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"1964-05-07\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.jaar).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.maand).not.to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    var vandaag = new Date();",
											"    if (jsonData.geboorte.maand==vandaag.getMonth()) {",
											"        pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"    } else {",
											"        pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"    }",
											"});",
											"",
											"pm.test(\"geboorte.datum Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.dag Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.dag).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "2cc71352-4b34-4921-81ae-011a364c1941",
											"key": "burgerservicenummer",
											"value": "999995881",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "alleen geboortejaar is bekend",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"geboorte.datum Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"leeftijd Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "937ed6a5-ed17-408a-a020-47ce82d644c8",
											"key": "burgerservicenummer",
											"value": "999992806",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "overleden",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"leeftijd Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.geboorte.datum.datum).to.eql(\"2015-01-01\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a5aef4fc-a806-4315-8e86-c37476ca4045",
											"key": "burgerservicenummer",
											"value": "999992077",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ingeschrevenpersonen zoeken",
					"item": [
						{
							"name": "volledige datum",
							"event": [
								{
									"script": {
										"id": "bced5d0c-672d-4061-a921-be30e3273cd7",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].leeftijd).to.eql(leeftijd(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?naam__geslachtsnaam=Moulin&verblijfplaats__gemeenteVanInschrijving=0599",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Moulin",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "0599",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "volledig onbekende geboortedatum",
							"event": [
								{
									"script": {
										"id": "bc3da05c-1af9-4037-add3-7089f3d2eb5c",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"geboorte Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"leeftijd Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].leeftijd).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?fields=burgerservicenummer,geboorte,leeftijd,naam.aanhef&verblijfplaats__huisnummer=41&verblijfplaats__postcode=2497BX",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,geboorte,leeftijd,naam.aanhef",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "41",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "2497BX",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "alleen geboortejaar is bekend",
							"event": [
								{
									"script": {
										"id": "24e873ea-5145-477c-b2e1-a881ea583e94",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"leeftijd Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].leeftijd).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.maand).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.jaar).to.eql(1975);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?fields=burgerservicenummer,geboorte.datum,leeftijd&burgerservicenummer=999990998",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,geboorte.datum,leeftijd",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "999990998",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "jaar en maand bekend (maart)",
							"event": [
								{
									"script": {
										"id": "b804f256-a371-4d33-b667-a0790be965d9",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"geboorte.datum.datum Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.datum).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.dag Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.dag).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"geboorte.datum.jaar\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.jaar).to.eql(1978);",
											"});",
											"",
											"pm.test(\"geboorte.datum.maand\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.maand).to.eql(3);",
											"});",
											"",
											"/*",
											"pm.collectionVariables.set('leeftijd',  \"(geboorte) => { \\",
											"  var vandaag = new Date(); \\",
											"  var ditJaar = vandaag.getFullYear();\\",
											"  var dezeMaand = vandaag.getMonth()+1;\\",
											"  var dezeDag = vandaag.getDate();\\",
											"  var leeftijdInJaren = ditJaar - geboorte.jaar;\\",
											"  if (dezeMaand<geboorte.maand) { leeftijdInJaren--; } \\",
											"  if (dezeMaand==geboorte.maand && dezeDag<geboorte.dag) { leeftijdInJaren--; }\\",
											"  return leeftijdInJaren; \\",
											"}\");",
											"*/",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    var vandaag = new Date();",
											"    var dezeMaand = vandaag.getMonth()+1;",
											"",
											"    if (dezeMaand==jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum.maand) {",
											"        pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].leeftijd).to.be.an(\"undefined\");",
											"    } else {",
											"        let leeftijd = eval(pm.variables.get('leeftijd'));",
											"        pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].leeftijd).to.eql(leeftijd(jsonData['_embedded'].ingeschrevenpersonen[0].geboorte.datum));",
											"    }",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?fields=burgerservicenummer,geboorte.datum,leeftijd&naam__geslachtsnaam=Denise&verblijfplaats__huisnummer=31&verblijfplaats__postcode=2564TS",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,geboorte.datum,leeftijd",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Denise",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "31",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n"
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "2564TS",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n"
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "overleden",
							"event": [
								{
									"script": {
										"id": "93576200-e5d9-4ae0-b892-267503607962",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"JsonPath Count\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"leeftijd Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].leeftijd).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?fields=burgerservicenummer,geboorte.datum,leeftijd,overlijden.indicatieOverleden&geboorte__datum=2015-01-01&inclusiefOverledenPersonen=true&naam__geslachtsnaam=Staart&verblijfplaats__gemeenteVanInschrijving=1999",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "burgerservicenummer,geboorte.datum,leeftijd,overlijden.indicatieOverleden",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										},
										{
											"key": "burgerservicenummer",
											"value": "",
											"description": "Uniek persoonsnummer.\n",
											"disabled": true
										},
										{
											"key": "geboorte__datum",
											"value": "2015-01-01",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n"
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "true",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n"
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "Staart",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n"
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "1999",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n"
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "kinderen",
					"item": [
						{
							"name": "Volledige datum",
							"event": [
								{
									"script": {
										"id": "a847cd51-8026-4159-aa38-28f965f03135",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"var jsonData = pm.response.json();",
											"var relUri = jsonData['_embedded'].kinderen[0]['_links'].self.href;",
											"pm.collectionVariables.set(\"relId\", relUri.substr(relUri.lastIndexOf('/') + 1)); // get id",
											"",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    pm.expect(jsonData['_embedded'].kinderen[0].leeftijd).to.eql(leeftijd(jsonData['_embedded'].kinderen[0].geboorte.datum));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "ed7aa234-de14-461d-94a2-c5cf8499d05f",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Volledige datum id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "516587e0-2131-452f-9a9c-616a801f431a",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen",
										":id"
									],
									"variable": [
										{
											"id": "57abff0e-8659-4d78-a8a4-3dcf452f4b5d",
											"key": "burgerservicenummer",
											"value": "999990639",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "d9f72267-5353-40b8-8e76-60b6ef970c6c",
											"key": "id",
											"value": "{{relId}}",
											"type": "string",
											"description": "De identificatie van het kind.\n"
										}
									]
								},
								"description": "Raadpleeg een kind van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Schikkeldag",
							"event": [
								{
									"script": {
										"id": "f37873ac-6256-43e4-8e20-c8e8f887b9b6",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"var jsonData = pm.response.json();",
											"var relUri = jsonData['_embedded'].kinderen[0]['_links'].self.href;",
											"pm.collectionVariables.set(\"relId\", relUri.substr(relUri.lastIndexOf('/') + 1)); // get id",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    let kind = jsonData['_embedded'].kinderen.find(item => item.burgerservicenummer=='999992739')",
											"    pm.expect(kind.leeftijd).to.eql(leeftijd(kind.geboorte.datum));",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "db139552-cdc6-415e-abb0-db67820e12b0",
											"key": "burgerservicenummer",
											"value": "999992363",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Schikkeldag id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a7bef64-3ef6-4c37-89f0-c9a6e4e3561c",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"",
											"pm.test(\"leeftijd\", function () {",
											"    var jsonData = pm.response.json();",
											"    let leeftijd = eval(pm.variables.get('leeftijd'));",
											"    pm.expect(jsonData.leeftijd).to.eql(leeftijd(jsonData.geboorte.datum));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen",
										":id"
									],
									"variable": [
										{
											"id": "8ee72317-ab3d-4c0d-b7d7-51dcb02e4d52",
											"key": "burgerservicenummer",
											"value": "999992363",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "42818d52-6456-4f9c-8977-853fa5c00ae8",
											"key": "id",
											"value": "{{relId}}",
											"type": "string",
											"description": "De identificatie van het kind.\n"
										}
									]
								},
								"description": "Raadpleeg een kind van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Alleen geboortejaar",
							"event": [
								{
									"script": {
										"id": "c9d783bb-f3e4-4549-adfa-e3e6ae590005",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-2]); // get request path parameter(s)",
											"",
											"var jsonData = pm.response.json();",
											"var relUri = jsonData['_embedded'].kinderen.find(item => item.geboorte.datum.jaar==1994)['_links'].self.href;",
											"pm.collectionVariables.set(\"relId\", relUri.substr(relUri.lastIndexOf('/') + 1)); // get id",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"leeftijd Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].kinderen.find(item => item.geboorte.datum.jaar==1994).leeftijd).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen"
									],
									"variable": [
										{
											"id": "ffa34d52-4876-4e2b-98be-d3be7c25eb90",
											"key": "burgerservicenummer",
											"value": "999993069",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Levert de kinderen van een persoon\n"
							},
							"response": []
						},
						{
							"name": "Alleen geboortejaar raadplegen",
							"event": [
								{
									"script": {
										"id": "6b6fdb54-d34e-4843-a395-85c9fed2cb88",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-3]); // get request path parameter(s)",
											"",
											"pm.collectionVariables.set(\"id\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"leeftijd Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.leeftijd).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer/kinderen/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer",
										"kinderen",
										":id"
									],
									"variable": [
										{
											"id": "fc6484fc-6ab8-49f5-b23e-59fd0d9ce5be",
											"key": "burgerservicenummer",
											"value": "999993069",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										},
										{
											"id": "732b03ac-9545-4acd-9ff8-2e9356c99b8d",
											"key": "id",
											"value": "{{relId}}",
											"type": "string",
											"description": "De identificatie van het kind.\n"
										}
									]
								},
								"description": "Raadpleeg een kind van een persoon\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0e933e4e-d2ed-4cc9-968f-fd821391dd94",
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set('leeftijd',  \"(geboorte) => { \\",
							"  var vandaag = new Date(); \\",
							"  var ditJaar = vandaag.getFullYear();\\",
							"  var dezeMaand = vandaag.getMonth()+1;\\",
							"  var dezeDag = vandaag.getDate();\\",
							"  var leeftijdInJaren = ditJaar - geboorte.jaar;\\",
							"  if (dezeMaand<geboorte.maand) { leeftijdInJaren--; } \\",
							"  if (dezeMaand==geboorte.maand && dezeDag<geboorte.dag) { leeftijdInJaren--; }\\",
							"  return leeftijdInJaren; \\",
							"}\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "51685d76-c523-4dee-b590-3f17481d1d96",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "feature: woonplaats",
			"item": [
				{
					"name": "raadplegen",
					"item": [
						{
							"name": "woonplaats gevuld (ongelijk aan gemeente inschrijving)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.eql(\"Langedijk\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"Scharwoude\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "7beeb250-44be-40f3-b788-643db8ad93e3",
											"key": "burgerservicenummer",
											"value": "999992934",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "woonplaats leeg, korteNaam gevuld",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.eql(\"Borger-Odoorn\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"Borger-Odoorn\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "7fa15fe7-0234-42eb-95c9-bcfffa3dc75a",
											"key": "burgerservicenummer",
											"value": "999990482",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "locatiebeschrijving",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.eql(\"'s-Gravenhage\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"'s-Gravenhage\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "6d7465ba-cca1-4de4-9b51-d969143d223f",
											"key": "burgerservicenummer",
											"value": "000009921",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "verblijf buitenland",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.match(/^Regist.*\\ Niet\\ Ingezetenen.*$/);",
											"});",
											"",
											"pm.test.skip(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"Rotterdam\");",
											"});",
											"",
											"pm.test(\"woonplaats Existence Match \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "4845d356-e666-436b-aa01-2d0b76d0e6d6",
											"key": "burgerservicenummer",
											"value": "999993483",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "vertrokkenOnbekendWaarheen",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"vertrokkenOnbekendWaarheen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.vertrokkenOnbekendWaarheen).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfBuitenland.land Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.verblijfplaats.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.eql(\"'s-Gravenhage\");",
											"});",
											"",
											"pm.test(\"woonplaats Existence Match \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "4dab5e71-3bf5-4ddd-bac7-076905b89790",
											"key": "burgerservicenummer",
											"value": "999993586",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "onbekende gemeente van inschrijving, woonplaats gevuld",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][code]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['gemeenteVanInschrijving']['code']).to.eql(\"1810\");",
											"});",
											"",
											"pm.test(\"gemeenteVanInschrijving.omschrijving Existence Match \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"Toetsoog\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "cce41657-8b0b-4dd3-bdba-071612793345",
											"key": "burgerservicenummer",
											"value": "999991723",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "zoeken",
					"item": [
						{
							"name": "woonplaats gevuld (ongelijk aan gemeente inschrijving)",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.eql(\"Langedijk\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['woonplaats']).to.eql(\"Scharwoude\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999992934",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999992934",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "woonplaats leeg, korteNaam gevuld",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.eql(\"Borger-Odoorn\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['woonplaats']).to.eql(\"Borger-Odoorn\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999990482",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999990482",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "locatiebeschrijving",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.eql(\"'s-Gravenhage\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['woonplaats']).to.eql(\"'s-Gravenhage\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=000009921",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "000009921",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "verblijf buitenland",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"// JsonPath Match with Wildcard",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.match(/^Regist.*\\ Niet\\ Ingezetenen.*$/);",
											"});",
											"",
											"pm.test(\"woonplaats Existence Match \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['woonplaats']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999993483",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999993483",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "vertrokkenOnbekendWaarheen",
							"event": [
								{
									"script": {
										"id": "c94fb01f-affa-4f1f-9409-353cc91cfcb4",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"vertrokkenOnbekendWaarheen\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.vertrokkenOnbekendWaarheen).to.eql(true);",
											"});",
											"",
											"pm.test(\"verblijfBuitenland.land Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded'].ingeschrevenpersonen[0].verblijfplaats.land).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.eql(\"'s-Gravenhage\");",
											"});",
											"",
											"pm.test(\"woonplaats Existence Match \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['woonplaats']).to.be.an(\"undefined\");",
											"});",
											""
										],
										"type": "text/javascript"
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999993586",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999993586",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						},
						{
							"name": "onbekende gemeente van inschrijving, woonplaats gevuld",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of ['gemeenteVanInschrijving'][code]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['gemeenteVanInschrijving']['code']).to.eql(\"1810\");",
											"});",
											"",
											"pm.test(\"gemeenteVanInschrijving.omschrijving Existence Match \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['gemeenteVanInschrijving']['omschrijving']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['_embedded']['ingeschrevenpersonen'][0]['verblijfplaats']['woonplaats']).to.eql(\"Toetsoog\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen?burgerservicenummer=999991723",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)",
											"disabled": true
										},
										{
											"key": "burgerservicenummer",
											"value": "999991723",
											"description": "Uniek persoonsnummer.\n"
										},
										{
											"key": "geboorte__datum",
											"value": "",
											"description": "Je kunt alleen zoeken met een volledig geboortedatum. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/parametervalidatie.feature)\n",
											"disabled": true
										},
										{
											"key": "geboorte__plaats",
											"value": "",
											"description": "Gemeentenaam of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren. **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "geslachtsaanduiding",
											"value": "",
											"description": "Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.\n",
											"disabled": true
										},
										{
											"key": "inclusiefOverledenPersonen",
											"value": "",
											"description": "Als je ook overleden personen in het antwoord wilt, geef dan de parameter inclusiefOverledenPersonen op met waarde True.  Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/overleden_personen.feature)\n",
											"disabled": true
										},
										{
											"key": "naam__geslachtsnaam",
											"value": "",
											"description": "De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voorvoegsel",
											"value": "",
											"description": "Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Het zoeken op het voorvoegsel is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "naam__voornamen",
											"value": "",
											"description": "De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. ** Bij deze query-parameter is het gebruik van een [wildcard](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) toegestaan in combinatie met minimaal 2 karakters.** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).**\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__gemeenteVanInschrijving",
											"value": "",
											"description": "Een code die aangeeft in welke gemeente de persoon woont, of de laatste gemeente waar de persoon heeft gewoond, of de gemeente waar de persoon voor het eerst is ingeschreven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisletter",
											"value": "",
											"description": "Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummer",
											"value": "",
											"description": "Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__huisnummertoevoeging",
											"value": "",
											"description": "Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__nummeraanduidingIdentificatie",
											"value": "",
											"description": "Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__straat",
											"value": "",
											"description": "Een naam die door de gemeente aan een openbare ruimte is gegeven. **Gebruik van de wildcard is toegestaan. Zie [feature-beschrijving](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)** **Zoeken met tekstvelden is [case-Insensitive](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/case_insensitive.feature).\n",
											"disabled": true
										},
										{
											"key": "verblijfplaats__postcode",
											"value": "",
											"description": "De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.\n",
											"disabled": true
										}
									]
								},
								"description": "Zoek personen met één van de onderstaande verplichte combinaties van parameters en vul ze evt. aan met parameters uit de andere combinaties.\n\n\nDefault krijg je personen terug die nog in leven zijn, tenzij je de inclusiefoverledenpersonen=true opgeeft.\n\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature)\n\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature)\n\n\n1.  Persoon\n    -  geboorte__datum\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n2.  Persoon\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  naam__geslachtsnaam (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature)\n\n\n3.  Persoon\n    -  burgerservicenummer\n\n\n4.  Postcode\n    -  verblijfplaats__postcode\n    -  verblijfplaats__huisnummer\n\n\n5.  Straat\n    -  verblijfplaats__straat (minimaal 2 karakters, [wildcard toegestaan](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/wildcard.feature) )\n    -  verblijfplaats__gemeenteVanInschrijving\n    -  verblijfplaats__huisnummer\n\n\n6.  Adres\n    -  verblijfplaats__nummeraanduidingIdentificatie\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "feature: adres",
			"item": [
				{
					"name": "raadplegen",
					"item": [
						{
							"name": "BAG adres",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of [korteNaam]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['korteNaam']).to.eql(\"Jonkheer van Riemsdijkln\");",
											"});",
											"",
											"pm.test(\"Match content of [straat]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['straat']).to.eql(\"Jonkheer van Riemsdijklaan\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"'s-Gravenhage\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel1]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel1']).to.eql(\"Jonkheer van Riemsdijkln 88\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel2]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel2']).to.eql(\"2497BV 's-Gravenhage\");",
											"});",
											"",
											"pm.test(\"adresregel3 Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel3']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"land Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['land']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "a4312183-0537-4d60-9382-23865b798e55",
											"key": "burgerservicenummer",
											"value": "999994335",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "BAG adres met huisletter en huisnummertoevoeging",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of [korteNaam]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['korteNaam']).to.eql(\"St. Jacobsstraat\");",
											"});",
											"",
											"pm.test(\"Match content of [straat]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['straat']).to.eql(\"St. Jacobsstraat\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"Utrecht\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel1]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel1']).to.eql(\"St. Jacobsstraat 400L-Toe\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel2]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel2']).to.eql(\"3511BT Utrecht\");",
											"});",
											"",
											"pm.test(\"adresregel3 Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel3']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"land Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['land']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "bbb1ecb4-d397-4301-a564-cd7ca3e9016a",
											"key": "burgerservicenummer",
											"value": "999990160",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "niet-BAG adres",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of [korteNaam]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['korteNaam']).to.eql(\"Zomerdijkstrtaat\");",
											"});",
											"",
											"pm.test(\"Match content of [straat]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['straat']).to.eql(\"Zomerdijkstrtaat\");",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"Amsterdam\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel1]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel1']).to.eql(\"Zomerdijkstrtaat 17\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel2]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel2']).to.eql(\"1079WZ Amsterdam\");",
											"});",
											"",
											"pm.test(\"adresregel3 Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel3']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"land Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['land']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "14aede78-4539-43f7-a314-98fad64b1026",
											"key": "burgerservicenummer",
											"value": "999991802",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "locatiebeschrijving",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Match content of [woonplaats]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.eql(\"'s-Gravenhage\");",
											"});",
											"",
											"pm.test(\"Match content of [locatiebeschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['locatiebeschrijving']).to.eql(\"Woonboot in de Grote Sloot\");",
											"});",
											"",
											"pm.test(\"korteNaam Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['korteNaam']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"straat Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['straat']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel1]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel1']).to.eql(\"Woonboot in de Grote Sloot\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel2]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel2']).to.eql(\"'s-Gravenhage\");",
											"});",
											"",
											"pm.test(\"adresregel3 Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel3']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"land Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['land']).to.be.an(\"undefined\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "89a64ff1-db47-4ddc-b995-814f05195c5f",
											"key": "burgerservicenummer",
											"value": "000009921",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						},
						{
							"name": "adres buitenland",
							"event": [
								{
									"script": {
										"type": "text/javascript",
										"exec": [
											"let baseUrl = pm.variables.get(\"baseUrl\");",
											"// zet query parameters in variabelen",
											"pm.request.url.query.members.forEach( p => pm.collectionVariables.set(p[\"key\"], decodeURI(p[\"value\"])) );",
											"",
											"pm.collectionVariables.set(\"burgerservicenummer\", pm.request.url.path[pm.request.url.path.length-1]); // get request path parameter(s)",
											"",
											"pm.test(\"Valid HTTP Status Codes\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"korteNaam Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['korteNaam']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"straat Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['straat']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"woonplaats Existence Match\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['woonplaats']).to.be.an(\"undefined\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel1]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel1']).to.eql(\"Rue du pomme 25\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel2]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel2']).to.eql(\"Bruxelles\");",
											"});",
											"",
											"pm.test(\"Match content of [adresregel3]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['adresregel3']).to.eql(\"postcode 1000\");",
											"});",
											"",
											"pm.test(\"Match content of [code]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['land']['code']).to.eql(\"5010\");",
											"});",
											"",
											"pm.test(\"Match content of [omschrijving]\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['verblijfplaats']['land']['omschrijving']).to.eql(\"België\");",
											"});",
											""
										]
									},
									"listen": "test"
								}
							],
							"request": {
								"method": "get",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingeschrevenpersonen/:burgerservicenummer?fields=locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingeschrevenpersonen",
										":burgerservicenummer"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"description": "Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/expand.feature).",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "locatiebeschrijving,straat,korteNaam,huisnummer,huisletter,huisnummertoevoeging,postcode,woonplaats,adresregel1,adresregel2,adresregel3,verblijfplaats.land,gemeenteVanInschrijving",
											"description": "Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma's gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature)"
										}
									],
									"variable": [
										{
											"id": "cccbdc98-8beb-4141-a405-bdf19fc95233",
											"key": "burgerservicenummer",
											"value": "999993483",
											"type": "string",
											"description": "Uniek persoonsnummer\n"
										}
									]
								},
								"description": "Raadpleeg een (overleden) persoon.\n\nGebruik de fields parameter als je alleen specifieke velden in het antwoord wil zien, [zie functionele specificaties fields-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-bevragen/blob/v1.1.0/features/fields_extensie.feature).\n\nGebruik de expand parameter als je het antwoord wil uitbreiden met (delen van) de gerelateerde resources kinderen, ouders of partners, [zie functionele specificaties expand-parameter](https://github.com/VNG-Realisatie/Haal-Centraal-Common/blob/v1.2.0/features/expand.feature).\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "RlI5nAFCOdzKcZIu2OsfwdvStf91Oh8k",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-API-KEY",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "53ce83ee-931b-4164-970e-be3c8b1ff9f9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8260c9a5-19ba-4bde-a4ea-b264c247d14b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "2f0ac9d3-ed2b-4eb5-9f3f-9987543f6f41",
			"key": "baseUrl",
			"value": "https://www.haalcentraal.nl/haalcentraal/api/brp"
		},
		{
			"id": "23deaab8-4200-4f6b-81cb-678e48aec3b1",
			"key": "apiKey",
			"value": null
		},
		{
			"id": "be2cdec9-8b49-4a53-8b66-69ce17347c5c",
			"key": "env",
			"value": null
		},
		{
			"id": "eec597af-f71f-4a6a-874d-869d5201b4cd",
			"key": "versie",
			"value": null
		},
		{
			"id": "0a5c01fe-6d92-4a48-ba1a-eb94a6632c5d",
			"key": "geboorte__datum",
			"value": ""
		},
		{
			"id": "a38437e5-8245-40f9-a9bd-344af4a68f5d",
			"key": "naam__geslachtsnaam",
			"value": ""
		},
		{
			"id": "be05d456-f68e-44cf-a536-c5f30dcb04f7",
			"key": "burgerservicenummer",
			"value": ""
		},
		{
			"id": "c46968ca-5f44-415a-98bc-382bf0159b1e",
			"key": "expand",
			"value": ""
		},
		{
			"id": "90d8a262-f81e-4bee-88d5-016e88fcc0ac",
			"key": "fields",
			"value": ""
		},
		{
			"id": "261cb237-e8bd-4a36-a676-d8c850a08bd4",
			"key": "naam__voornamen",
			"value": ""
		},
		{
			"id": "d3105b37-fce1-4671-ad93-610904335ecb",
			"key": "naam__voorvoegsel",
			"value": ""
		},
		{
			"id": "49d5324f-51f0-4d68-a4a4-9b4be54f0c1d",
			"key": "verblijfplaats__gemeenteVanInschrijving",
			"value": ""
		},
		{
			"id": "977d309f-f234-450f-bd4d-1b19c705a35c",
			"key": "verblijfplaats__huisnummer",
			"value": ""
		},
		{
			"id": "a2513354-bea9-4035-9ec6-cb8e4691b941",
			"key": "verblijfplaats__straat",
			"value": ""
		},
		{
			"id": "886277ed-c133-452a-be83-aea96d9a1adf",
			"key": "verblijfplaats__huisletter",
			"value": ""
		},
		{
			"id": "2eaf02d8-4b29-42a3-82f3-4c304267d469",
			"key": "verblijfplaats__postcode",
			"value": ""
		},
		{
			"id": "4619e330-19a4-470e-a683-f147b15d62de",
			"key": "verblijfplaats__huisnummertoevoeging",
			"value": ""
		},
		{
			"id": "c25a5133-353c-460a-a16e-f550f3a83deb",
			"key": "inclusiefOverledenPersonen",
			"value": ""
		},
		{
			"id": "47859d7b-fc43-4c0f-b827-1abdd71a194d",
			"key": "geboorte__plaats",
			"value": ""
		},
		{
			"id": "66f8e848-71ba-4fdc-9bc8-f496c7bc8bbd",
			"key": "geslachtsaanduiding",
			"value": ""
		},
		{
			"id": "b4ac942f-735a-4bba-842d-2852363008be",
			"key": "verblijfplaats__nummeraanduidingIdentificatie",
			"value": ""
		},
		{
			"id": "8ad7b172-90a2-44cd-8d1d-37f22e560c78",
			"key": "id",
			"value": ""
		},
		{
			"id": "7eb6fd5a-2b71-450f-a5c3-64c81db931d8",
			"key": "leeftijd",
			"value": ""
		},
		{
			"id": "df7149ac-e332-4955-a477-d53afd484bd8",
			"key": "relId",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}